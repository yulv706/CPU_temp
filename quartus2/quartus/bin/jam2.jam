#GENERATE LEGAL
#GENERATE NOTES
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || FLEX || EKG || MAXII || SFL || PFL
#ELSE
#ERROR No Active Family
#ENDIF
NOTE "STAPL_VERSION" "JESD71";
NOTE "JAM_VERSION" "2.0";
NOTE "ALG_VERSION" "50";
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
ACTION PROGRAM = L0, DO_BLANK_CHECK OPTIONAL, DO_VERIFY RECOMMENDED,
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII
DO_SECURE OPTIONAL,
#ENDIF
#IF MAX7000 || MAX9000
DO_READ_UES OPTIONAL,
#ENDIF
#IF MAX7000AE
DO_LOW_TEMP_PROGRAMMING OPTIONAL,
#ENDIF
#IF MAX7000AE || MAXII
DO_DISABLE_ISP_CLAMP OPTIONAL,
#ENDIF
#IF MAXII
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL,
#ENDIF
#IF MAX7000AE || EPC || EPV || MAXII
DO_READ_USERCODE OPTIONAL,
#ENDIF
#IF EPC || EPV || MAXII
DO_INIT_CONFIGURATION OPTIONAL,
#ENDIF
#IF SFL
#IF SFL_ENHANCED
DO_STANDARD_VERIFY_EPCS OPTIONAL,
DO_EPCS_STATUS_POLLING OPTIONAL,
#ELSE
SFL_PREPAD_ONE OPTIONAL,
SFL_PREPAD_TWO OPTIONAL,
SFL_PREPAD_FOUR OPTIONAL,
SFL_PREPAD_EIGHT OPTIONAL,
SFL_PREPAD_SIXTEEN OPTIONAL,
#ENDIF
#ENDIF
#IF PFL
DO_ERASE_ALL_CFI OPTIONAL,
DO_PFL_PROGRAM RECOMMENDED,
#ENDIF
L27;
ACTION BLANKCHECK = L17,
#IF MAX7000AE || MAXII
DO_DISABLE_ISP_CLAMP OPTIONAL,
#ENDIF
#IF MAXII
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL,
#ENDIF
#IF SFL
#IF SFL_ENHANCED
DO_STANDARD_VERIFY_EPCS OPTIONAL,
DO_EPCS_STATUS_POLLING OPTIONAL,
#ELSE
SFL_PREPAD_ONE OPTIONAL,
SFL_PREPAD_TWO OPTIONAL,
SFL_PREPAD_FOUR OPTIONAL,
SFL_PREPAD_EIGHT OPTIONAL,
SFL_PREPAD_SIXTEEN OPTIONAL,
#ENDIF
#ENDIF
#IF PFL
DO_PFL_PROGRAM RECOMMENDED,
#ENDIF
L27;
ACTION VERIFY = L18,
#IF MAX7000 || MAX9000
DO_READ_UES OPTIONAL,
#ENDIF
#IF MAX7000AE || MAXII
DO_DISABLE_ISP_CLAMP OPTIONAL,
#ENDIF
#IF MAXII
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL,
#ENDIF
#IF MAX7000AE || EPC || EPV || MAXII
DO_READ_USERCODE OPTIONAL,
#ENDIF
#IF SFL
#IF SFL_ENHANCED
DO_STANDARD_VERIFY_EPCS OPTIONAL,
DO_EPCS_STATUS_POLLING OPTIONAL,
#ELSE
SFL_PREPAD_ONE OPTIONAL,
SFL_PREPAD_TWO OPTIONAL,
SFL_PREPAD_FOUR OPTIONAL,
SFL_PREPAD_EIGHT OPTIONAL,
SFL_PREPAD_SIXTEEN OPTIONAL,
#ENDIF
#ENDIF
#IF PFL
DO_PFL_PROGRAM RECOMMENDED,
#ENDIF
L27;
#ENDIF
#IF FLEX
ACTION CONFIGURE = L20, DO_READ_USERCODE OPTIONAL, DO_HALT_ON_CHIP_CC OPTIONAL, DO_IGNORE_IDCODE_ERRORS OPTIONAL,
#IF SFL
#IF SFL_ENHANCED
DO_STANDARD_VERIFY_EPCS OPTIONAL,
DO_EPCS_STATUS_POLLING OPTIONAL,
#ELSE
SFL_PREPAD_ONE OPTIONAL,
SFL_PREPAD_TWO OPTIONAL,
SFL_PREPAD_FOUR OPTIONAL,
SFL_PREPAD_EIGHT OPTIONAL,
SFL_PREPAD_SIXTEEN OPTIONAL,
#ENDIF
#ENDIF
L27;
#ENDIF
#IF EKP
ACTION KEY_PROGRAM = L21,
#IF EKS
DO_KEY_SECURE OPTIONAL,
#ENDIF
L27;
#ENDIF
#IF EKC
ACTION KEY_CONFIGURE = L22, L27;
#ENDIF
#IF MAX7000 || MAX7000AE || EPC || MAX9000
#IF CHECKSUM
ACTION READ_CHECKSUM = L19,
#IF MAX7000AE
DO_DISABLE_ISP_CLAMP OPTIONAL,
#ENDIF
L27;
#ENDIF
#ENDIF
#IF MAX7000 || MAX7000AE || EPC || MAX9000 || EPV || MAXII || SFL || PFL
ACTION ERASE = L24, DO_BLANK_CHECK OPTIONAL,
#IF MAX7000AE || MAXII
DO_DISABLE_ISP_CLAMP OPTIONAL,
#ENDIF
#IF MAXII
DO_BYPASS_CFM OPTIONAL, DO_BYPASS_UFM OPTIONAL, DO_REAL_TIME_ISP OPTIONAL,
#ENDIF
#IF SFL
#IF SFL_ENHANCED
DO_STANDARD_VERIFY_EPCS OPTIONAL,
DO_EPCS_STATUS_POLLING OPTIONAL,
#ELSE
SFL_PREPAD_ONE OPTIONAL,
SFL_PREPAD_TWO OPTIONAL,
SFL_PREPAD_FOUR OPTIONAL,
SFL_PREPAD_EIGHT OPTIONAL,
SFL_PREPAD_SIXTEEN OPTIONAL,
#ENDIF
#ENDIF
#IF PFL
DO_PFL_PROGRAM RECOMMENDED,
#ENDIF
L27;
#ENDIF
#IF MAX7000 || MAX9000
ACTION READ_UES = L23, L27;
#ENDIF
#IF MAX7000AE || EPC || FLEX || EPV || MAXII
ACTION READ_USERCODE = L25, L27;
#ENDIF
#IF EPC || EPV || PFL
ACTION INIT_CONFIGURATION = L26, L27;
#ENDIF
DATA DEVICE_DATA;
#GENERATE GLOBAL
#IF MAX7000
#GENERATE MAX7000
#ENDIF
#IF MAX9000
#GENERATE MAX9000
#ENDIF
#IF FLEX
#GENERATE FLEX
#ENDIF
#IF EKG
#GENERATE EKG
#ENDIF
#IF MAX7000AE
#GENERATE MAX7000AE
#ENDIF
#IF EPC
#GENERATE EPC
#ENDIF
#IF EPV
#GENERATE EPV
#ENDIF
#IF MAXII
#GENERATE MAXII
#ENDIF
#IF SFL
#GENERATE SFL
#ENDIF
#IF PFL
#GENERATE PFL
#ENDIF
ENDDATA;
DATA TEMP_DATA;
INTEGER A0[42] =
0, 0, 0, 0, 0, 0, 16, 15, 14, 13, 95, 23, 23, 23, 96, 96, 96, 96, 96, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 15, 791, 791, 791, 791, 317, 293, 281, 273, 261, 253, 237, 791;
INTEGER A1[42] =
2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 16, 16, 16,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 280, 240, 200, 160, 640, 480, 400, 320, 240, 160, 80,3144;
INTEGER A2[42] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 165, 165, 165, 0, 0, 0, 0, 0, 0, 0, 165;
INTEGER A3[42] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 96, 80, 64, 0, 0, 0, 0, 0, 0, 0, 112;
INTEGER A4[42] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 648, 600, 552, 504, 0, 0, 0, 0, 0, 0, 0, 648;
INTEGER A5[42] =
2081, 2081, 2081, 2081, 2081, 2081, 16, 16, 16, 16, 3144, 18, 18, 18,3144,1574, 716, 360, 183,1574, 716, 360, 183,3144, 0,1574, 716, 360, 183, 64, 56, 48, 40, 32, 128, 96, 80, 64, 48, 32, 16,3144;
INTEGER A6[42] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 32, 16, 8, 4, 2, 16, 8, 4, 2, 32, 24, 16, 8, 4, 2, 0, 0, 0, 0, 0, 16, 12, 10, 8, 6, 4, 2, 32;
INTEGER A7[42] =
65536, 32768, 16384, 8192, 2048, 512, 21760, 13056, 6912, 3328, 0, 16, 8, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 6, 5, 4, 0, 0, 0, 0, 0, 0, 0, 7;
INTEGER A8[42] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 512, 0, 0, 0, 512, 256, 128, 64, 32, 256, 128, 64, 32, 512, 384, 256, 128, 64, 32, 0, 560, 480, 400, 320, 256, 192, 160, 128, 96, 64, 32, 560;
INTEGER A9[21] =
12, 3, 131, 8, 3, 131, 0, 0, 0, 6, 3, 131, 0, 0, 0, 3, 1, 118, 1, 3, 126;
INTEGER A10[14] =
12, 3, 8, 3, 8, 3, 6, 3, 0, 0, 3, 1, 1, 1;
INTEGER A51[19] =
294, 0, 0, 0, 294, 148, 38, 20, 2, 148, 38, 20, 2, 294, 0, 148, 38, 20, 2;
INTEGER A49[14] =
12, 114, 8, 114, 8, 114, 6, 114, 0, 0, 3, 109, 1, 109;
INTEGER A11[5 * 3 * 41] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 22,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13360,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 256, 13360, 0, 0, 13360,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14128, 0, 0, 13360,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14128, 0, 0, 13360,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, (39 << 16) + 0, 145, 137, (39 << 16) + 0, 233, 176,
0, 0, 0, 0, 0, 0, 0, 0, 0, (23 << 16) + 0, 145, 137, (23 << 16) + 0, 237, 176,
0, 0, 0, 0, 0, 0, 0, 0, 0, (15 << 16) + 0, 145, 137, (7 << 16) + 6, 113, 137,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0,1025, 4, 0, 1, 1, 0,1025, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 99, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 99,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 98,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 1, 94,
0, 0, 0, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 2, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 98,
129, 10, 98, 1, 0, 98, 2, 1, 96, 1, 0, 97, 0, 0, 96,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 1, 1, 97, 1, 0, 97, 0, 2, 96, 0, 1, 96,
0, 0, 0, 0, 0, 0, 1, 31, 97, 4, 31, 98, 1, 0, 98;
INTEGER A14[64] =
8600,6400,4800,3600,2800,2000,1540,1140, 860, 640, 480, 360, 280, 200, 154, 116,
86, 64, 50, 36, 28, 24, 20, 16, 14, 12, 11, 9, 7, 5, 4, 3,
2000,1600,1300,1000, 900, 800, 720, 660, 600, 560, 520, 480, 440, 400, 380, 360,
340, 300, 280, 260, 240, 220, 200, 180, 160, 140, 120, 100, 80, 60, 40, 20;
INTEGER A15[16] =
60000,28000,10800,4200,1660, 660, 260, 100, 500, 200, 100, 60, 40, 30, 20, 10;
INTEGER A54[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 0, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A55[30] =
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 31, 16, 0, 32, 0, 32, 255, 65, 255, 82, 255, 69, 255, 84, 255, 76, 255, 65;
INTEGER A56[8] =
255, 1, 255, 56, 255, 57, 255, 65;
#IF MAXII
INTEGER V213[4] =
32768, 16384, 8192, 4096;
INTEGER A101[4] =
57, 41, 5, 5;
INTEGER A102[4] =
55, 39, 3, 3;
INTEGER A107[4] =
56, 40, 4, 4;
INTEGER V227 = 1;
BOOLEAN V226 = 0;
BOOLEAN V225[48] = $4A822AA28232;
#ENDIF
BOOLEAN V261  = 0;
BOOLEAN V262  = 0;
BOOLEAN V263  = 0;
BOOLEAN V264  = 0;
BOOLEAN V265[10000];
BOOLEAN V266[3];
BOOLEAN V278[13];
BOOLEAN V279[16];
INTEGER V267;
INTEGER V268;
INTEGER V269;
#IF FLEX
BOOLEAN V189[80] = $80000000000000000000;
BOOLEAN V190[80] = $80010000000000000000;
BOOLEAN V192[80] = $00FF0000000000000000;
#ENDIF
' VARIABLES
#GENERATE TEMP
BOOLEAN A34[50];
BOOLEAN A35[50];
BOOLEAN A36[50];
BOOLEAN A37[50];
BOOLEAN A38[70];
INTEGER V2 = 0;
BOOLEAN V216 = 0;
INTEGER V3 = 0;
INTEGER V4 = 0;
#IF SFL
BOOLEAN V220[8];
BOOLEAN V219[4];
BOOLEAN V291[13];
BOOLEAN V215;
INTEGER V222 = 0;
INTEGER V217 = 0;
BOOLEAN V218 = 1;
INTEGER V285 = 0;
INTEGER V286 = 0;
INTEGER V287 = 0;
INTEGER V288 = 0;
INTEGER V289 = 0;
INTEGER V290 = 0;
BOOLEAN V284[100];
BOOLEAN V294;
BOOLEAN V295;
BOOLEAN V296[100];
#ENDIF
#IF PFL
BOOLEAN V234[5];
BOOLEAN V235[16];
BOOLEAN V237[27];
BOOLEAN V238[33];
INTEGER V239 = 0;
INTEGER V240 = 0;
INTEGER V241 = 0;
INTEGER V277 = 0;
INTEGER V242 = 0;
BOOLEAN V246 = 0;
BOOLEAN V249 = 0;
BOOLEAN V243 = 0;
BOOLEAN V244 = 0;
BOOLEAN V245 = 0;
BOOLEAN V248 = 0;
BOOLEAN V273 = 0;
BOOLEAN V247 = 0;
BOOLEAN V276 = 0;
INTEGER V250 = 0;
BOOLEAN V251[31];
INTEGER V252 = 0;
INTEGER V253 = 32;
INTEGER V254 = 0;
INTEGER V255[4];
INTEGER V256 = 0;
INTEGER V274 = 0;
#ENDIF
#IF MAXII || SFL
BOOLEAN V209 = 0;
#ENDIF
#IF MAXII
BOOLEAN V205 = 1;
BOOLEAN V210 = 0;
BOOLEAN V214 = 0;
INTEGER V206 = 0;
BOOLEAN V207 = 1;
BOOLEAN V208 = 1;
#ENDIF
#IF FLEX || EKP || EKC || PFL
INTEGER V77 = 0;
INTEGER V78 = 0;
INTEGER V186;
INTEGER V187;
#ENDIF
BOOLEAN b;
BOOLEAN ba[32];
INTEGER i;
INTEGER j;
INTEGER k;
INTEGER l;
INTEGER m;
INTEGER n;
INTEGER V271;
INTEGER V270;
INTEGER V10;
INTEGER V11;
INTEGER V12;
INTEGER V13;
BOOLEAN A19[20];
BOOLEAN A20[10];
INTEGER V14;
INTEGER V15;
INTEGER V89;
INTEGER V16;
INTEGER V87;
INTEGER V17;
INTEGER V181;
INTEGER V18;
INTEGER V19;
INTEGER V20;
INTEGER V21;
INTEGER V88;
INTEGER V94;
INTEGER V22;
INTEGER V179;
INTEGER V211;
INTEGER V223;
INTEGER V23;
INTEGER V24;
INTEGER V25;
INTEGER V26;
INTEGER V27;
INTEGER V28;
INTEGER V29 = 1;
INTEGER A16[15];
INTEGER V30;
INTEGER V31;
INTEGER V32 = 0;
INTEGER V33 = 0;
INTEGER V34 = 1;
INTEGER V35 = 0;
INTEGER V36 = 0;
INTEGER V37 = 0;
INTEGER V38 = 0;
INTEGER V72 = 0;
INTEGER V73 = 0;
BOOLEAN V39 = 0;
BOOLEAN V40 = 0;
INTEGER V41 = 0;
INTEGER V42 = 0;
BOOLEAN V43 = 0;
BOOLEAN V44 = 0;
BOOLEAN V45 = 0;
INTEGER V46;
INTEGER V47;
INTEGER V48;
BOOLEAN V49 = 0;
INTEGER V51 = -1;
INTEGER V52 = -1;
BOOLEAN V74 = 0;
BOOLEAN V75 = 0;
BOOLEAN V56 = 0;
BOOLEAN V57 = 0;
BOOLEAN V58 = 1;
BOOLEAN A40[10];
BOOLEAN A41[10];
BOOLEAN A44[10];
BOOLEAN V76 = 0;
BOOLEAN V80 = 1;
BOOLEAN V81 = 0;
BOOLEAN V82 = 0;
INTEGER V83 = 5;
INTEGER V84 = 0;
INTEGER V86 = 0;
BOOLEAN V91 = 0;
INTEGER V68 = 0;
INTEGER V69 = 0;
INTEGER V96 = 94;
BOOLEAN V97 = 1;
#IF FLEX
INTEGER V188 = 0;
INTEGER V191 = 0;
BOOLEAN V233 = 0;
#ENDIF
#IF EPV
INTEGER V197 = 0;
BOOLEAN V196 = 0;
INTEGER V195 = 0;
INTEGER V175 = 23;
INTEGER V176 = 0;
INTEGER V177 = 0;
BOOLEAN V178 = 1;
BOOLEAN V182 = 1;
INTEGER A64[18] =
7, 16, 12000,
1, 12, 9000,
2, 1, 2500,
1, 2, 5000,
31, 8, 5000,
8, 1, 4000;
INTEGER V183 = 0;
INTEGER V184 = 0;
#ENDIF
#IF CHECKSUM
#IF MAX7000 || MAX7000AE || EPC || MAX9000
BOOLEAN V110 = 0;
INTEGER V113 = 0;
INTEGER V144 = 0;
INTEGER V112 = 0;
INTEGER V117 = 0;
INTEGER V118 = 0;
INTEGER V116 = 0;
INTEGER V114 = 0;
INTEGER V115 = 0;
INTEGER V121 = 0;
INTEGER V122[8];
#ENDIF
#IF MAX7000 || MAX7000AE
INTEGER V156;
INTEGER V149;
INTEGER V155;
INTEGER A65[8] = 128,64,32,16,8,4,2,1;
INTEGER V150;
INTEGER m;
INTEGER n;
#ENDIF
#IF MAX7000
INTEGER A70[8] = 130518, 95298, 78336, 62100, 0, 30198, 14814, 0;
INTEGER A86[8] = 25,19,16,14,0,8,4,0;
INTEGER A87[82] =
15,13,12,10,8,7,5,4,2,0,10,
15,13,12,10,8,7,5,4,2,0,10,
15,13,12,10,8,7,5,4,2,0,10,
15,13,12,11,10,8,7,5,4,3,2,0,12,
0,
15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,16,
15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,16,
0;
INTEGER A88[9] = 15,14,12,10,8,6,4,2,0;
INTEGER A85[16];
INTEGER A84[16] = 11,15,14,10,9,13,12,8,7,3,2,6,5,1,0,4;
INTEGER A89[16] = 9,5,8,3,8,1,6,1,0,0,3,0,1,0,0,0;
INTEGER A80[11] = 27,23,22,10,5,2,1,9,8,7,6;
INTEGER A81[11] = 11,0,0,0,0,0,0,0,8,7,6;
INTEGER A82[11] = 9, 0,0,0,0,0,0,0,8,7,6;
INTEGER A79[8] = 0,0,0,0,0,254,254,0;
INTEGER A68[100];
BOOLEAN A69[16];
INTEGER V169;
INTEGER V170;
INTEGER V172;
INTEGER V168;
INTEGER o;
INTEGER p;
INTEGER V162;
#ENDIF
#IF MAX7000AE
INTEGER A67[30] = 42,85,2 ,45,41,
0, 0, 0, 0, 0,
25,51, 2,28,24, 
14,29,30,45,13,
9, 19,20,30,8,
5, 11,12,18, 4;
INTEGER A66[60] = 45,46,45,46,43,48,43,48,42,89,2,49,
28,29,28,29,26,31,26,31,25,55,2,32,
17,18,49,50,15,20,47,52,14,33,34,53,
12,13,34,35,10,15,32,37, 9,23,24,38,
8, 9,22,23, 6,11,20,25, 5,15,16,26;
INTEGER A68[177];
INTEGER V147;
INTEGER V148;
INTEGER V151;
BOOLEAN A69[16];
INTEGER A71[15] = 0, 2, 0, 2, 2, 0, 0, 0, 0, 4, 0, 6, 4, 6, 6;
INTEGER A72[12] = 3,5,
0,0,
2,5,
2,5,
2,5,
2,5;
INTEGER A73[30] = 1863,1573,
933,787,
395,357,
199,179,
80,83,
0,0,
0,0,
0,0,
0,0,
1863,1573,
0,0,
933,787,
395,357,
199,179,
80,83;
INTEGER A74[15] = 0, 2, 0, 2, 2, 0, 0, 0, 0, 4, 0, 6, 4, 6, 6;
INTEGER V153;
INTEGER A75[10] = 1,0,3,2,3,1,1,0,0,2;
INTEGER A76[10];
INTEGER A77[86] = 2424,3064,2984,2344,2264,2904,2824,2184,2104,2744,2664,2024,1944,2584,2504,1864,
640,0,80,720,800,160,240,880,960,320,400,1040,1120,480,560,1200,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
1254,1334,1414,1494,934,1014,1094,1174,320,400,480,560,0,80,160,240,
636,556,476,396,0,80,160,240,
280,200,0,80,
103,0;
INTEGER A78[86] = 1281,1282,1354,1353,1425,1426,1498,1497,1576,1577,1649,1648,1720,1721,1793,1792,1791,1794,1722,1719,1647,1650,1578,1575,1496,1499,1427,1424,1352,1355,1283,1280,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
863,791,714,642,862,790,713,641,861,789,712,640,864,792,715,643,
321,339,360,378,377,359,338,320,
161,182,181,160,
86,85;
INTEGER V154;
INTEGER LAB;
INTEGER V157;
INTEGER V167;
INTEGER A83[33];
INTEGER V166;
BOOLEAN V173 = 0;
INTEGER V143 = 0;
INTEGER V137[5] = 0, 0, 6, 4, 4;
INTEGER V138[5] = 3, 7, 1, 3, 7;
INTEGER V139[5] = 1, 5, 5, 1, 3;
INTEGER V140[5] = 1, -1, 1, -1, 1;
INTEGER V141[5] = 3, 1, 7, 5, 5;
INTEGER V142[3] = 2, 5, 0;
#ENDIF
#IF MAX9000
BOOLEAN V111 = 0;
INTEGER V119 = 0;
INTEGER V120 = 0;
INTEGER V123[10] = 1, 0, 7, 6, 4, 3, 2, 7, 6, 5;
INTEGER V124[9] = 7, 6, 5, 4, 3, 2, 6, 1, 0;
INTEGER V125[14] = 0, 2, 0, 7, 0, 4, 0, 3, 5, 0, 1, 4, 6, 6;
INTEGER V126[4] = 2, 7, 1, 0;
INTEGER V127[28] = 0, 0, 0, 3, 0, 0, 5, 7, 0, 0, 2, 3, 0, 6, 1, 7, 0, 3, 6, 3, 0, 7, 2, 7, 0, 4, 4, 3;
INTEGER V128[21] = 4, 3, 2, 1, 2, 0, 7, 6, 5, 4, 3, 1, 6, 2, 1, 0, 7, 6, 5, 3, 2;
INTEGER V129[6] = 7, 4, 2, 6, 5, 3;
INTEGER V130[12] = 6, 5, 3, 4, 3, 1, 2, 1, 7, 0, 7, 5;
INTEGER V131[12] = 7, 4, 2, 5, 2, 0, 3, 0, 6, 1, 6, 4;
INTEGER V132[12] = 0, 6, 4, 6, 4, 2, 4, 2, 0, 2, 0, 6;
INTEGER V133[3] = 2, 4, 7;
INTEGER V134[3] = 7, 5, 3;
INTEGER V135[3] = 7, 4, 2;
INTEGER V136[3] = 7, 6, 4;
#ENDIF
#ENDIF
BOOLEAN V102 = 0;
BOOLEAN V100 = 0;
BOOLEAN V272 = 0;
BOOLEAN V103 = 0;
BOOLEAN V108 = 0;
BOOLEAN V104 = 0;
BOOLEAN V105 = 0;
BOOLEAN V107 = 0;
BOOLEAN V106 = 0;
BOOLEAN V101 = 0;
BOOLEAN V231 = 0;
BOOLEAN V259 = 0;
BOOLEAN V260 = 0;
BOOLEAN V280 = 0;
BOOLEAN V293 = 0;
#IF MAX7000AE || MAXII
BOOLEAN V204 = 0;
#ENDIF
#IF MAX7000AE
BOOLEAN V198 = 0;
#ENDIF
#IF EPC || EPV || MAXII || PFL
BOOLEAN V146 = 0;
#ENDIF
BOOLEAN USE_EXTEND_IR_DELAY_METHOD = 0;
BOOLEAN USE_FIXED_ALGORITHM = 0;
#IF MAX7000AE || FLEX
BOOLEAN USE_REV0_PROG_ALG = 0;
#ENDIF
#IF MAX7000 || MAX7000AE || EPC || MAX9000
#IF CHECKSUM
BOOLEAN V109 = 0;
#ENDIF
#ENDIF
INTEGER V203 = 0;
BOOLEAN V228 = 0;
#IF FLEX
BOOLEAN V230 = 0;
BOOLEAN V232 = 0;
#ENDIF
#IF PFL
BOOLEAN V257 = 0;
BOOLEAN SKIP_MAXII_PROGRAM_FLAG = 0;
#ENDIF
#IF SFL
INTEGER V258 = 0;
#ENDIF
ENDDATA;
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
PROCEDURE L0 USES TEMP_DATA;
V102 = 1;
V103 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
PROCEDURE DO_BLANK_CHECK USES TEMP_DATA;
V100 = 1;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE DO_ERASE_ALL_CFI USES TEMP_DATA;
V272 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
PROCEDURE DO_VERIFY USES TEMP_DATA;
V108 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII
PROCEDURE DO_SECURE USES TEMP_DATA;
V107 = 1;
V106 = 1;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE DO_LOW_TEMP_PROGRAMMING USES TEMP_DATA;
V198 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000
PROCEDURE DO_READ_UES USES TEMP_DATA;
V104 = 1;
ENDPROC;
#ENDIF
#IF MAX7000AE || EPC || FLEX || EPV || MAXII
PROCEDURE DO_READ_USERCODE USES TEMP_DATA;
V105 = 1;
ENDPROC;
#ENDIF
#IF EPC || EPV || MAXII
PROCEDURE DO_INIT_CONFIGURATION USES TEMP_DATA;
V146 = 1;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE DO_REAL_TIME_ISP USES TEMP_DATA;
V228 = 1;
ENDPROC;
#ENDIF
#IF FLEX
PROCEDURE DO_HALT_ON_CHIP_CC USES TEMP_DATA;
V230 = 1;
ENDPROC;
#ENDIF
#IF FLEX
PROCEDURE DO_IGNORE_IDCODE_ERRORS USES TEMP_DATA;
V232 = 1;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE DO_BYPASS_UFM USES TEMP_DATA;
V210 = 1;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE DO_BYPASS_CFM USES TEMP_DATA;
V214 = 1;
ENDPROC;
#ENDIF
#IF MAX7000AE || MAXII
PROCEDURE DO_DISABLE_ISP_CLAMP USES TEMP_DATA;
V204 = 1;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE DO_PFL_PROGRAM USES TEMP_DATA;
V257 = 1;
ENDPROC;
#ENDIF
#IF EKS
PROCEDURE DO_KEY_SECURE USES TEMP_DATA;
V260 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
PROCEDURE L17 USES TEMP_DATA;
V100 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
PROCEDURE L18 USES TEMP_DATA;
V108 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX7000AE || EPC || MAX9000
#IF CHECKSUM
PROCEDURE L19 USES TEMP_DATA;
V109 = 1;
ENDPROC;
#ENDIF
#ENDIF
#IF FLEX
PROCEDURE L20 USES TEMP_DATA;
V101 = 1;
ENDPROC;
#ENDIF
#IF EKP
PROCEDURE L21 USES TEMP_DATA;
V231 = 1;
ENDPROC;
#ENDIF
#IF EKC
PROCEDURE L22 USES TEMP_DATA;
V259 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000
PROCEDURE L23 USES TEMP_DATA;
V104 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX7000AE || EPC || MAX9000 || EPV || MAXII || SFL || PFL
PROCEDURE L24 USES TEMP_DATA;
V102 = 1;
ENDPROC;
#ENDIF
#IF MAX7000AE || EPC || FLEX || EPV || MAXII
PROCEDURE L25 USES TEMP_DATA;
V105 = 1;
ENDPROC;
#ENDIF
#IF EPC || EPV || PFL
PROCEDURE L26 USES TEMP_DATA;
V146 = 1;
ENDPROC;
#ENDIF
PROCEDURE L27 USES DEVICE_DATA, TEMP_DATA, L39, L101,
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
L248,
#ENDIF
#IF FLEX
L141,
#ENDIF
#IF EKP
L148,
#ENDIF
#IF EKC
L157,
#ENDIF
#IF MAX7000
L249, L191, L161, L219,
#IF CHECKSUM
L720,
#ENDIF
#ENDIF
#IF MAX7000AE
L262, L195, L162, L222, L165,
#IF CHECKSUM
L749,
#ENDIF
#ENDIF
#IF MAXII
L287, L215, L177, L183, L241, L240, L182,
#ENDIF
#IF SFL
L632, L626, L603, L578, L546, L854, L856, L621, L640, L656, L630, L628, L609, L588, L594, L602, L601, L625, L663,
#ENDIF
#IF EPC
L275, L196, L171, L228, L173,
#IF CHECKSUM
L813,
#ENDIF
#ENDIF
#IF EPV
L284, L199, L174, L231, L176,
#ENDIF
#IF MAX9000
L292, L218, L184, L246,
#IF CHECKSUM
L816,
#ENDIF
#ENDIF
#IF MAX7000 || MAX7000AE || MAX9000
L435,
#ENDIF
#IF MAXII
L453,
#ENDIF
#IF PFL
L550, L542, L473, L487, L493, L499, L512, L529, L527, L531, L526, L537, L524, L522, L471, L458, L682, L468, L470, L849, L506, L523, L525, L480, L541,
#IF MAXII
L396,
#ENDIF
#ENDIF
L124, L113, L93;
CALL L39;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
#IF CHECKSUM
|| V109
#ENDIF
) &&
V105) THEN GOTO L38;
#IF FLEX
V3 = 0;
V4 = 32;
CALL L101;
IF (V2 == 0) THEN GOTO L28;
IF ((V42 == 0) && V101) THEN CALL L141;
L28:
#ENDIF
#IF MAX7000
V3 = 0;
V4 = 1;
CALL L101;
IF (V2 == 0) THEN GOTO L29;
IF (V42 == 0) THEN CALL L249;
IF ((V42 == 0) && V102) THEN CALL L191;
IF ((V42 == 0) && V100) THEN CALL L248;
IF ((V42 == 0) && V103) THEN CALL L161;
IF ((V42 == 0) && V108) THEN CALL L219;
IF ((V42 == 0) && V107) THEN CALL L435;
#IF CHECKSUM
IF ((V42 == 0) && V109) THEN CALL L720;
#ENDIF
L29:
#ENDIF
#IF MAX7000AE
V3 = 0;
V4 = 256;
CALL L101;
IF (V2 == 0) THEN GOTO L30;
IF (V42 == 0) THEN CALL L262;
IF ((V42 == 0) && V102) THEN CALL L195;
IF ((V42 == 0) && V100) THEN CALL L248;
IF ((V42 == 0) && V103) THEN CALL L162;
IF ((V42 == 0) && V108) THEN CALL L222;
IF ((V42 == 0) && V107) THEN CALL L435;
IF ((V42 == 0) && (V103 || V100 || V108)) THEN CALL L165;
#IF CHECKSUM
IF ((V42 == 0) && V109) THEN CALL L749;
#ENDIF
L30:
#ENDIF
#IF EPC
V3 = 0;
V4 = 512;
CALL L101;
IF (V2 == 0) THEN GOTO L31;
IF (V42 == 0) THEN CALL L275;
IF ((V42 == 0) && V102) THEN CALL L196;
IF ((V42 == 0) && V100) THEN CALL L248;
IF ((V42 == 0) && V103) THEN CALL L171;
IF ((V42 == 0) && V108) THEN CALL L228;
IF ((V42 == 0) && V103) THEN CALL L173;
#IF CHECKSUM
IF ((V42 == 0) && V109) THEN CALL L813;
#ENDIF
L31:
#ENDIF
#IF EPV
V3 = 0;
V4 = 2048;
CALL L101;
IF (V2 == 0) THEN GOTO L32;
IF (V42 == 0) THEN CALL L284;
IF ((V42 == 0) && V102 && !V185) THEN CALL L199;
IF ((V42 == 0) && V100 && !V185) THEN CALL L248;
IF ((V42 == 0) && V103) THEN CALL L174;
IF ((V42 == 0) && V108) THEN CALL L231;
IF ((V42 == 0) && V103) THEN CALL L176;
L32:
#ENDIF
#IF MAX9000
V3 = 0;
V4 = 2;
CALL L101;
IF (V2 == 0) THEN GOTO L33;
IF (V42 == 0) THEN CALL L292;
IF ((V42 == 0) && V102) THEN CALL L218;
IF ((V42 == 0) && V100) THEN CALL L248;
IF ((V42 == 0) && V103) THEN CALL L184;
IF ((V42 == 0) && V108) THEN CALL L246;
#IF CHECKSUM
IF ((V42 == 0) && V109) THEN CALL L816;
#ENDIF
IF ((V42 == 0) && V107) THEN CALL L435;
L33:
#ENDIF
#IF MAXII
V3 = 0;
V4 = 16384;
CALL L101;
IF (V2 == 0) THEN GOTO L34;
IF (V42 == 0) THEN CALL L287;
IF ((V42 == 0) && V102) THEN CALL L215;
IF ((V42 == 0) && V100) THEN CALL L248;
IF ((V42 == 0) && V103 && !V214) THEN CALL L177;
IF ((V42 == 0) && V103 && !V210) THEN CALL L183;
IF ((V42 == 0) && (V108 || V103) && !V214) THEN CALL L241;
IF ((V42 == 0) && (V108 || V103) && !V210) THEN CALL L240;
IF ((V42 == 0) && V107) THEN CALL L453;
IF ((V42 == 0) && V103) THEN CALL L182;
L34:
#ENDIF
#IF SFL
V3 = 0;
V4 = 32768;
V216 = 1;
CALL L101;
IF (V2 == 0) THEN GOTO L36;
IF (V42 == 0 && (V102 || V100 || V103 || V108)) THEN CALL L546;
IF (V42 == 0 && (V102 || V100 || V103 || V108)) THEN CALL L854;
IF (V285 == 2) THEN GOTO L35;
IF (V42 == 0 && (V102 || V100 || V103 || V108)) THEN CALL L632;
IF ((V42 == 0) && V102) THEN CALL L626;
IF ((V42 == 0) && V100) THEN CALL L248;
IF ((V42 == 0) && V103) THEN CALL L603;
IF ((V42 == 0) && V108) THEN CALL L578;
GOTO L36;
L35:
IF (V42 == 0 && (V102 || V100 || V103 || V108)) THEN CALL L640;
IF ((V42 == 0) && (V102 || V103) && V294) THEN CALL L628;
IF ((V42 == 0) && V102) THEN CALL L630;
V74 = 1;
IF ((V42 == 0) && V100 && V280) THEN CALL L588;
IF ((V42 == 0) && V100 && !V280) THEN CALL L594;
IF ((V42 == 0) && V103) THEN CALL L609;
V74 = 0;
IF ((V42 == 0) && V108 && V280) THEN CALL L588;
IF ((V42 == 0) && V108 && !V280) THEN CALL L594;
L36:
IF ((V285 != -1) && (V102 || V100 || V103 || V108)) THEN CALL L856;
V216 = 0;
#ENDIF
#IF EKP || EKC
V3 = 0;
V4 = 32;
CALL L101;
IF (V2 == 0) THEN GOTO L37;
#ENDIF
#IF EKP
IF ((V42 == 0) && V231) THEN CALL L148;
#ENDIF
#IF EKC
IF ((V42 == 0) && V259) THEN CALL L157;
#ENDIF
#IF EKP || EKC
L37:
#ENDIF
#IF PFL
V3 = 0;
V4 = 1024;
CALL L101;
IF (V2 == 0) THEN GOTO L38;
IF (!V257) THEN GOTO L38;
#IF MAXII
CALL L682;
V11 = 0;
CALL L396;
A18[9..0] = $205;
CALL L458;
DRSCAN V24, A29[(V24- 1)..0];
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 500000 USEC;
#ENDIF
IF ((V42 == 0) && V257) THEN CALL L468;
IF ((V42 == 0) && V257) THEN CALL L550;
IF (V42 == 0) THEN CALL L493;
IF ((V42 == 0) && V102 && V257) THEN CALL L473;
V74 = 1;
IF ((V42 == 0) && V100 && V257 && V275 == 0) THEN CALL L499;
IF ((V42 == 0) && V100 && V257 && V275 == 1 && V239 >= 6) THEN CALL L506;
IF ((V42 == 0) && V100 && V257 && V275 == 1 && V239 < 6) THEN CALL L499;
V74 = 0;
IF ((V42 == 0) && V103 && V257 && (V261 == 0)) THEN CALL L487;
IF ((V42 == 0) && V103 && V257 && (V261 == 1)) THEN CALL L523;
IF ((V42 == 0) && V103 && V257 && (V261 == 1)) THEN CALL L525;
IF ((V42 == 0) && V103 && V257 && (V261 == 1)) THEN CALL L512;
V271 = 0;
IF ((V42 == 0) && (V108 || V103) && V257 && V275 == 0) THEN CALL L499;
IF ((V42 == 0) && (V108 || V103) && V257 && V275 == 1 && V239 >= 6) THEN CALL L506;
IF ((V42 == 0) && (V108 || V103) && V257 && V275 == 1 && V239 < 6) THEN CALL L499;
IF (V271 == 1 && (V42 != 0) && (V108 || V103) && V257) THEN CALL L499;
IF ((V42 == 0) && V146) THEN CALL L471;
IF (V257) THEN CALL L470;
#ENDIF
IF ((V42 == 0) && V104) THEN CALL L124;
L38:
CALL L93;
EXIT V42;
ENDPROC;
PROCEDURE L39 USES DEVICE_DATA, TEMP_DATA,
#IF EPV
L671,
#ENDIF
L106, L458, L108;
INTEGER V66 = 0;
INTEGER V90 = 0;
INTEGER V95 = 0;
INTEGER V67 = 0;
INTEGER V180 = 0;
INTEGER V212 = 0;
INTEGER V224 = 0;
INTEGER V199 = 0;
INTEGER V201 = 0;
INTEGER V202 = 0;
IF (V103) THEN V102 = 1;
IF (V106) THEN V107 = 1;
IF ((V102 || V100) && !V103 &&
(V108 || V107)) THEN V42 = 1;
IF (V42 != 0) THEN GOTO L84;
V21 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L40;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L40:
V21 = V21 + j;
V66 = V66 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 1) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L41;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A26[l] = 1;
l = l + 1;
NEXT k;
GOTO L42;
L41:
l = l + 1;
L42:
NEXT j;
NEXT i;
V88 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L43;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
IF ((V2 >= 23) && (V2 <= 27)) THEN
V96 = 95;
L43:
V88 = V88 + j;
V90 = V90 + k;
NEXT i;
V94 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 512) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L44;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L44:
V94 = V94 + j;
V95 = V95 + k;
NEXT i;
V179 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L45;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L45:
V179 = V179 + j;
V180 = V180 + k;
NEXT i;
V211 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 16384) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L46;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L46:
V211 = V211 + j;
V212 = V212 + k;
NEXT i;
V223 = 0
#IF SFL
+ V258
#ENDIF
;
V224 = 0
#IF SFL
+ V258
#ENDIF
;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 32768) == 0) ||
((A13[i] & 4) == 0) ||
((A13[i] & 32) == 0)) THEN GOTO L47;
V2 = A105[i];
j = j + A1[V2];
k = k + A5[V2];
L47:
V223 = V223 + j;
V224 = V224 + k;
NEXT i;
V22 = 0;
FOR i = 0 TO V1;
j = 1;
k = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L48;
V2 = A12[i];
j = A1[V2];
k = A5[V2];
L48:
V22 = V22 + j;
V67 = V67 + k;
NEXT i;
l = 0;
FOR i = 4 TO 0 STEP -1;
FOR j = 0 TO V1;
IF (((A13[j] & 2) == 0) ||
((A13[j] & 4) == 0)) THEN GOTO L49;
V2 = A12[j];
FOR k = 0 TO (A1[V2] - 1);
IF ((k % 5) == i) THEN A27[l] = 1;
l = l + 1;
NEXT k;
GOTO L50;
L49:
l = l + 1;
L50:
NEXT j;
NEXT i;
V16 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 1) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L51;
V2 = A12[i];
j = A0[V2];
L51:
V16 = V16 + j;
NEXT i;
V87 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L52;
V2 = A12[i];
j = A0[V2];
L52:
V87 = V87 + j;
NEXT i;
V17 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L53;
V2 = A12[i];
j = A0[V2];
L53:
V17 = V17 + j;
NEXT i;
V181 = 0;
FOR i = 0 TO V1;
j = 1;
IF (((A13[i] & 2048) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L54;
V2 = A12[i];
j = A0[V2];
L54:
V181 = V181 + j;
NEXT i;
V18 = V17;
IF (V16 > V18) THEN V18 = V16;
IF (V87 > V18) THEN V18 = V87;
IF (V181 > V18) THEN V18 = V181;
V20 = 32 + V1;
IF ((2 * 5 * 5 * V67) > V20) THEN V20 = 2 * 5 * 5 * V67;
IF ((2 * 5 * V66) > V20) THEN V20 = 2 * 5 * V66;
IF (V90 > V20) THEN V20 = V90;
IF (V95 > V20) THEN V20 = V95;
IF (V180 > V20) THEN V20 = V180;
IF (V212 > V20) THEN V20 = V212;
IF (V224 > V20) THEN V20 = V224;
V19 = V18;
IF (V21 > V19) THEN V19 = V21;
IF (V88 > V19) THEN V19 = V88;
IF (V94 > V19) THEN V19 = V94;
IF (V179 > V19) THEN V19 = V179;
IF (V211 > V19) THEN V19 = V211;
IF (V223 > V19) THEN V19 = V223;
IF (V20 > V19) THEN V19 = V20;
FOR i = 0 TO (V19 - 1);
A29[i] = 0;
A30[i] = 1;
NEXT i;
V33 = 0;
FOR i = 0 TO V1;
IF (((A13[i] & 2) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L55;
V2 = A12[i];
IF (V33 < A7[V2]) THEN
V33 = A7[V2];
L55:
NEXT i;
V12 = 0;
V13 = 0;
FOR i = 0 TO V1;
V12 = V12 + A25[i];
IF (A25[i] > V13) THEN V13 = A25[i];
NEXT i;
FOR i = 0 TO (V13 - 1);
A39[i] = 1;
NEXT i;
FOR i = 0 TO 4;
j = 10 * i;
A34[(j + 9)..j] = $016;
A35[(j + 9)..j] = $01A;
A36[(j + 9)..j] = $022;
A37[(j + 9)..j] = $026;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A34[j + k + 7] = b;
A35[j + k + 7] = b;
A36[j + k + 7] = b;
A37[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO 6;
j = 10 * i;
A38[(j + 9)..j] = $02A;
FOR k = 0 TO 2;
b = 0;
IF ((i & (1 << k)) != 0) THEN b = 1;
A38[j + k + 7] = b;
NEXT k;
NEXT i;
FOR i = 0 TO V1;
A52[i] = 0;
IF (((A13[i] & 256) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L56;
V2 = A12[i];
A52[i] =
A5[V2] - (80 * A6[V2]);
L56:
NEXT i;
CALL L106;
IRSTOP IRPAUSE;
DRSTOP IDLE;
STATE IDLE;
IF(!(V101 || V103 || V108 || V107 ||
V100 || V102
#IF CHECKSUM
|| V109
#ENDIF
) &&
V105) THEN GOTO L84;
V4 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) != 0)) THEN
V4 = 32;
NEXT i;
IF (V4 != 32) THEN
GOTO L57;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) == 0)) THEN
A17[i] = A17[i] | 8;
NEXT i;
A18[9..0] = $281;
CALL L458;
WAIT 10000 USEC;
FOR i = 0 TO V1;
IF (((A17[i] & (32)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 64) == 0)) THEN
A17[i] = A17[i] & ~8;
NEXT i;
L57:
IF (V101 || V231 || V259) THEN CALL L108;
IF (V42 != 0) THEN GOTO L84;
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L58;
A18[9..0] = $071;
CALL L458;
WAIT 10000 USEC;
L58:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L70;
#IF MAX7000AE
IF (V204) THEN GOTO L69;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0) THEN GOTO L59;
GOTO L60;
L59:
V199 = V199 + A59[i] - 1;
V203 = 1;
L60:
V199 = V199 + 1;
NEXT i;
IF (V203 == 0) THEN GOTO L69;
BOOLEAN V200[V199];
A18[9..0] = $055;
CALL L458;
DRSCAN V199, V200[(V199 - 1)..0], CAPTURE V200[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0) THEN GOTO L61;
GOTO L67;
L61:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A98[V202] == 1) &&
(A98[V202 + 1] == 1)) THEN
GOTO L62;
IF((A98[V202] == 0) &&
(A98[V202 + 1] == 1)) THEN
GOTO L65;
IF((A98[V202] == 0) &&
(A98[V202 + 1] == 0)) THEN
GOTO L64;
IF((A98[V202] == 1) &&
(A98[V202 + 1] == 0)) THEN
GOTO L63;
L62:
GOTO L66;
L63:
V200[V201] = 0;
V200[V201 + 1] = 0;
V200[V201 + 2] = 0;
GOTO L66;
L64:
V200[V201] = 0;
V200[V201 + 1] = 1;
V200[V201 + 2] = 0;
GOTO L66;
L65:
V200[V201] = 0;
V200[V201 + 1] = 1;
V200[V201 + 2] = 1;
GOTO L66;
L66:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L68;
L67:
V200[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L68:
NEXT i;
DRSCAN V199, V200[(V199 - 1)..0];
STATE IDLE;
V203 = 2;
L69:
#ENDIF
A18[9..0] = $332;
CALL L458;
WAIT 10000 USEC;
V203 = 0;
L70:
FOR i = 0 TO V1;
IF (((A17[i] & 512) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512;
NEXT i;
IF (V4 != 512) THEN
GOTO L71;
A18[9..0] = $044;
CALL L458;
WAIT 10000 USEC;
L71:
FOR i = 0 TO V1;
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 2048;
NEXT i;
IF (V4 != 2048) THEN
GOTO L72;
IF (V103 || V102) THEN V38 = 1;
#IF EPV
CALL L671;
#ENDIF
V38 = 0;
WAIT 10000 USEC;
L72:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L84;
#IF MAXII
IF (V204) THEN GOTO L83;
V199 = 0;
V201 = 0;
V202 = 0;
V203 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0) THEN GOTO L73;
GOTO L74;
L73:
V199 = V199 + A59[i] - 1;
V203 = 1;
L74:
V199 = V199 + 1;
NEXT i;
BOOLEAN V229[V199];
A18[9..0] = $005;
CALL L458;
DRSCAN V199, V229[(V199 - 1)..0], CAPTURE V229[(V199 - 1)..0];
FOR i = 0 TO V1;
IF ((A17[i] & 8192) != 0) THEN GOTO L75;
GOTO L81;
L75:
FOR j = 0 TO (A59[i]/3) - 1;
IF((A106[V202] == 1) &&
(A106[V202 + 1] == 1)) THEN
GOTO L76;
IF((A106[V202] == 0) &&
(A106[V202 + 1] == 1)) THEN
GOTO L79;
IF((A106[V202] == 0) &&
(A106[V202 + 1] == 0)) THEN
GOTO L78;
IF((A106[V202] == 1) &&
(A106[V202 + 1] == 0)) THEN
GOTO L77;
L76:
V229[V201 + 1] = 0;
V229[V201 + 2] = V229[V201];
V229[V201] = 0;
GOTO L80;
L77:
V229[V201] = 0;
V229[V201 + 1] = 1;
V229[V201 + 2] = 0;
GOTO L80;
L78:
V229[V201] = 0;
V229[V201 + 1] = 0;
V229[V201 + 2] = 0;
GOTO L80;
L79:
V229[V201] = 0;
V229[V201 + 1] = 0;
V229[V201 + 2] = 1;
GOTO L80;
L80:
V201 = V201 + 3;
V202 = V202 + 2;
NEXT j;
GOTO L82;
L81:
V229[V201] = 0;
V201 = V201 + 1;
V202 = V202 + 1;
L82:
NEXT i;
DRSCAN V199, V229[(V199 - 1)..0];
STATE IDLE;
L83:
V203 = 2;
A18[9..0] = $2CC;
IF (V228 == 1) THEN A18[9..0] = $199;
CALL L458;
V37 = 10000;
IF (V228 == 1) THEN V37 = 500000;
WAIT V37 USEC;
#ENDIF
V203 = 0;
L84:
ENDPROC;
#IF FLEX
PROCEDURE L85 USES DEVICE_DATA, TEMP_DATA, L88, L458 ;
IF (V233 || !V76 || (V42 != 0)) THEN GOTO L87;
A18[9..0] = $003;
V4 = 32;
CALL L458;
WAIT IDLE, 512 CYCLES, 5 USEC, IDLE;
V233 = 1;
FOR i = 0 TO V1;
IF (A94[i] != 0) THEN
V191 = 1;
NEXT i;
IF(V191 == 1) THEN GOTO L86;
GOTO L87;
L86:
CALL L88;
L87:
ENDPROC;
PROCEDURE L88 USES DEVICE_DATA, TEMP_DATA, L458 ;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L91;
IF (A94[i] == 0) THEN GOTO L91;
V77 = 0;
V78 = 0;
V30 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L89;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A94[j];
L89:
NEXT j;
V31 = V30 + A94[i] - 1;
IF(V31 == V30) THEN GOTO L90;
PUSH i;
A18[9..0] = $00A;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
FOR j = 0 TO 100;
DRSCAN A94[i], A95[V31..V30], CAPTURE A45[79..0];
IF(A45[79] == 0) THEN j = 100;
NEXT j;
if(A45[79] == 0) THEN GOTO L90;
V42 = 12;
GOTO L92;
L90:
PREDR V77;
POSTDR V78;
DRSCAN 80, V192[79..0], CAPTURE A45[79..0];
L91:
NEXT i;
L92:
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
ENDPROC;
#ENDIF
PROCEDURE L93 USES DEVICE_DATA, TEMP_DATA, L107, L458, L108, L113
#IF FLEX
, L85
#ENDIF
#IF MAXII
, L396, L682
#ENDIF
#IF EPC || EPV
, L128, L120
#ENDIF
;
IF (V42 == 1) THEN GOTO L100;
CALL L107;
#IF FLEX
CALL L85;
#ENDIF
L94:
FOR i = 0 TO V1;
IF (((A17[i] & (1 | 2)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 1 | 2;
NEXT i;
IF (V4 != (1 | 2)) THEN
GOTO L95;
A18[9..0] = $079;
CALL L458;
WAIT 10000 USEC;
L95:
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L96;
A18[9..0] = $006;
CALL L458;
L96:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L97;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
#IF EPC || EPV
IF (V103) THEN
CALL L120;
#ENDIF
L97:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L98;
#IF MAXII
V4 = 16384;
CALL L682;
V11 = 0;
CALL L396;
A18[9..0] = $205;
CALL L458;
DRSCAN V24, A29[(V24- 1)..0];
#ENDIF
A18[9..0] = $201;
IF (V228 == 1) THEN A18[9..0] = $166;
CALL L458;
WAIT 10000 USEC;
L98:
IF ((!V76 && !V231 && !V259) || (V42 != 0)) THEN GOTO L99;
WAIT IDLE, 256 CYCLES, 10 USEC, IDLE;
V80 = 0;
CALL L108;
IF ((V42 != 0) && V76) THEN V42 = 10;
IF ((V42 != 0) && !V76) THEN V42 = 10;
IF (V42 != 0) THEN GOTO L100;
L99:
A18[9..0] = $3FF;
CALL L458;
IF (V105 && (V42 == 0)) THEN CALL L113;
#IF EPC || EPV
IF (V146 && (V42 == 0)) THEN CALL L128;
#ENDIF
L100:
IF (V42 == 0) THEN
PRINT "DONE";
IF (V42 == 1) THEN
PRINT "Invalid option combination specified";
IF (V42 == 6) THEN
PRINT "Unrecognized device";
IF (V42 == 7) THEN
PRINT "Device revision is not supported";
IF ((V42 == 10) && (V103)) THEN
PRINT "Device programming failure";
IF (V42 == 9) THEN
PRINT "Device is not blank";
IF (V42 == 11) THEN
PRINT "Device verify failure";
IF ((V42 == 10) && (V101)) THEN
PRINT "Device configuration failure";
IF (V42 == 4) THEN
PRINT "Unable to read USERCODE/UES from device #", V84 + 1;
IF (V42 == 12) THEN
PRINT "Failed to configure Excalibur stripe";
IF (V42 == 14) THEN
PRINT "Failed to erase or program ASC device";
ENDPROC;
PROCEDURE L101 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF ((j <= V3) &&
((A13[i] & V4) != 0) &&
((A13[i] & 4) != 0)) THEN j = i + 1;
NEXT i;
IF (j > V3) THEN GOTO L102;
V2 = 0;
V3 = 0;
GOTO L105;
L102:
V2 = A12[j - 1];
V3 = j;
IF(!V216) THEN GOTO L103;
V2 = A105[j - 1];
L103:
IF ((V4 == 32) || (V4 == 256) ||
(V4 == 512) || (V4 == 2048) ||
(V4 == 16384) || (V4 == 32768) ||
(V4 == 1024))
THEN GOTO L105;
IF (V58) THEN GOTO L104;
A41[9..0] = $066;
GOTO L105;
L104:
A41[9..0] = $006;
L105:
IF (V4 == 1) THEN A40[9..0] = $00E;
IF (V4 == 1) THEN A44[9..0] = $012;
IF (V4 == 2) THEN A40[9..0] = $38E;
IF (V4 == 2) THEN A44[9..0] = $392;
ENDPROC;
PROCEDURE L106 USES DEVICE_DATA, TEMP_DATA, L107
#IF MAX7000 || MAX7000AE || MAX9000
, L454
#ENDIF
;
CALL L107;
#IF MAX7000 || MAX7000AE || MAX9000
IF (V32 == 0) THEN CALL L454;
#ENDIF
V10 = 0;
V14 = 0;
V15 = 0;
V89 = 0;
V49 = 1;
V34 = 0;
V51 = -1;
V52 = -1;
V45 = 0;
V29 = 1;
IF (V103) THEN V29 = 0;
IF (V102 && V74) THEN V29 = 2;
ENDPROC;
PROCEDURE L107 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
A17[i] = (A13[i] | A48[i]);
IF (((A17[i] & 4) != 0) &&
((A17[i] & (1 | 256 | 2 | 512 | 2048 | 16384)) != 0) &&
!V102 && !V100 && !V103 && !V108 &&
!V107 && !V106 && V101) THEN
A17[i] = A17[i] & ~4;
IF (((A17[i] & 4) != 0) &&
((A17[i] & 32) != 0) && ((A17[i] & 32768) == 0) && ((A17[i] & 1024) == 0) && !V101 &&
(V102 || V100 || V103 || V108 ||
V107 || V106)) THEN
A17[i] = A17[i] & ~4;
#IF CHECKSUM
#IF MAX7000 || MAX7000AE || EPC || MAX9000
IF (((A17[i] & 4) != 0) && V110 && (i != V113)) THEN
A17[i] = A17[i] & ~4;
#ENDIF
#ENDIF
NEXT i;
ENDPROC;
PROCEDURE L108 USES DEVICE_DATA, TEMP_DATA, L107;
INTEGER V79 = 32 * V0;
BOOLEAN A46[V79];
INTEGER A47[8];
INTEGER V145;
CALL L107;
STATE IDLE;
V27 = 0;
FOR i = 0 TO V1;
A18[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF ((A17[i] & (1 | 2 | 256 | 512 | 2048)) != 0) THEN
A18[9..0] = $059;
IF ((A17[i] & (32 | 16384)) != 0) THEN
A18[9..0] = $006;
A32[(V27 + (A25[i] - 1))..V27] = A18[(A25[i] - 1)..0];
V27 = V27 + A25[i];
NEXT i;
IRSCAN V27, A32[(V27 - 1)..0];
WAIT IRPAUSE, 5 USEC, IDLE;
WAIT 3 CYCLES;
DRSCAN V79, A46[(V79 - 1)..0], CAPTURE A46[(V79 - 1)..0];
V27 = 0;
FOR i = 0 TO V1;
IF (A46[V27] == 1) THEN GOTO L109;
IF (V80) THEN
PRINT "Device #", V0 - i, " unable to read IDCODE";
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0)) THEN V42 = 6;
GOTO L110;
L109:
FOR j = 0 TO 7;
A47[j] = 0;
FOR k = 0 TO 3;
IF (A46[V27 + (4 * j) + k]) THEN
A47[j] = A47[j] | (1 << k);
NEXT k;
A47[j] = A47[j] + 48;
IF (A47[j] >= 58) THEN A47[j] = A47[j] + 7;
NEXT j;
IF (V80) THEN
PRINT "Device #", V0 - i, " IDCODE is ",
CHR$(A47[7]), CHR$(A47[6]),
CHR$(A47[5]), CHR$(A47[4]),
CHR$(A47[3]), CHR$(A47[2]),
CHR$(A47[1]), CHR$(A47[0]);
IF (V101 && ((A17[i] & 32) != 0) &&
((A17[i] & 4) != 0) && (A47[0] != 68) &&
(A47[1] != 68)) THEN
V42 = 6;
V27 = V27 + 31;
L110:
V27 = V27 + 1;
NEXT i;
V27 = 0;
FOR i = 0 TO V1;
IF(A61[i] != 0) THEN GOTO L111;
IF(A46[V27] != 0) THEN
V42 = 6;
V27 = V27 + 1;
NEXT i;
GOTO L112;
L111:
V145 = 0;
FOR j = 0 TO 31;
IF(A46[(V27 + j)]) THEN
V145 = V145 + (1 << j);
NEXT j;
V27 = V27 + 32;
IF(A61[i] != V145) THEN
V42 = 6;
NEXT i;
L112:
#IF FLEX
IF (V232 && (V42 != 0)) THEN
PRINT "IDCODE failures ignored";
IF (V232 && (V42 != 0)) THEN
V42 = 0;
#ENDIF
ENDPROC;
PROCEDURE L113 USES DEVICE_DATA, TEMP_DATA, L107, L458, L119;
j = 0;
k = V1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L114;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 256) == 0) &&
((A17[V1 - V84] & 32) == 0) &&
((A17[V1 - V84] & 512) == 0) &&
((A17[V1 - V84] & 16384) == 0) &&
((A17[V1 - V84] & 2048) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L118;
j = V84;
k = V84;
L114:
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 256;
NEXT i;
IF (V4 != 256) THEN
GOTO L115;
A18[9..0] = $006;
CALL L458;
WAIT 10000 USEC;
L115:
FOR i = 0 TO V1;
IF (((A17[i] & (512 | 2048)) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 512 | 2048;
NEXT i;
IF (V4 != (512 | 2048)) THEN
GOTO L116;
A18[9..0] = $04A;
CALL L458;
WAIT 10000 USEC;
L116:
FOR i = 0 TO V1;
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0)) THEN
V4 = 16384;
NEXT i;
IF (V4 != 16384) THEN
GOTO L117;
A18[9..0] = $201;
CALL L458;
WAIT 10000 USEC;
L117:
A18[9..0] = $3FF;
CALL L458;
STATE IDLE;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V4 = 0;
IF (((A17[V1 - V84] & 256) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 256;
IF (((A17[V1 - V84] & 16384) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 16384;
IF (((A17[V1 - V84] & 32) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 32;
IF (((A17[V1 - V84] & 512) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 512;
IF (((A17[V1 - V84] & 2048) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
V4 = 2048;
IF (V4 != 0) THEN CALL L119;
POP k; POP j; POP i;
NEXT i;
L118:
V84 = 0;
ENDPROC;
PROCEDURE L119 USES DEVICE_DATA, TEMP_DATA, L458, L123;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0) && (i != j)) THEN
A17[i] = A17[i] | 8;
NEXT i;
IF (V4 == 256) THEN
A18[9..0] = $007;
IF (V4 == 16384) THEN
A18[9..0] = $007;
IF ((V4 == 512) || (V4 == 2048)) THEN
A18[9..0] = $079;
IF (V4 == 32) THEN
A18[9..0] = $007;
CALL L458;
DRSCAN 32 + j, A30[(32 + j - 1)..0], CAPTURE A31[(32 + j - 1)..0];
V86 = 0;
FOR i = 0 TO 31;
IF (A31[i + j]) THEN
V86 = V86 | (1 << i);
NEXT i;
CALL L123;
ENDPROC;
PROCEDURE L120 USES DEVICE_DATA, TEMP_DATA, L107, L458;
CALL L107;
V4 = 512 | 2048;
j = 0;
FOR i = 0 TO V1;
A30[j] = 1;
l = 1;
IF (((A17[i] & (512 | 2048)) == 0) ||
((A17[i] & 4) == 0)) THEN
GOTO L122;
l = 8 * 3;
IF ((A17[i] & 512) != 0) THEN
GOTO L121;
l = 58 * 3;
L121:
FOR V27 = 0 TO l - 1;
A30[j + V27] = 1;
IF ((V27 % 3) == 0) THEN
A30[j + V27] = 0;
NEXT V27;
L122:
j = j + l;
NEXT i;
A18[9..0] = $055;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
DRSCAN j, A30[j - 1..0];
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $000;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
WAIT IDLE, 10 CYCLES, 1000 USEC, IDLE;
FOR i = 0 TO j - 1;
A30[i] = 1;
NEXT i;
ENDPROC;
PROCEDURE L123 USES DEVICE_DATA, TEMP_DATA;
INTEGER A58[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "USERCODE", V86;
FOR i = 0 TO 7;
V27 = 0;
A58[i] = V86 & 15;
IF (A58[i] > 9) THEN V27 = 7;
A58[i] = A58[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " USERCODE code is ",
CHR$(A58[7]), CHR$(A58[6]),
CHR$(A58[5]), CHR$(A58[4]),
CHR$(A58[3]), CHR$(A58[2]),
CHR$(A58[1]), CHR$(A58[0]);
ENDPROC;
PROCEDURE L124 USES DEVICE_DATA, TEMP_DATA, L107
#IF MAX7000
, L129
#ENDIF
#IF MAX9000
, L131
#ENDIF
;
j = 0;
k = V1;
V34 = 1;
V29 = 1;
V84 = V84 - 1;
IF (V84 == -1) THEN GOTO L126;
IF ((V84 < 0) || (V84 > V1) ||
(((A17[V1 - V84] & 1) == 0) &&
((A17[V1 - V84] & 2) == 0))) THEN
V42 = 4;
IF (V42 != 0) THEN GOTO L127;
L125:
j = V84;
k = V84;
L126:
FOR i = j TO k;
V84 = i;
PUSH i; PUSH j; PUSH k;
CALL L107;
V86 = 0;
#IF MAX7000
IF (((A17[V1 - V84] & 1) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L129;
#ENDIF
#IF MAX9000
IF (((A17[V1 - V84] & 2) != 0) &&
((A17[V1 - V84] & 4) != 0)) THEN
CALL L131;
#ENDIF
POP k; POP j; POP i;
NEXT i;
L127:
V84 = 0;
ENDPROC;
#IF EPC || EPV
PROCEDURE L128 USES TEMP_DATA, L458;
V4 = 512 | 2048;
A18[9..0] = $061;
CALL L458;
WAIT IDLE, 1000 USEC, IDLE;
A18[9..0] = $3FF;
CALL L458;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L129 USES DEVICE_DATA, TEMP_DATA, L458, L682, L385, L317, L134;
V4 = 1;
A18[9..0] = $016;
CALL L458;
DRSCAN V21, A26[(V21 - 1)..0];
A18[9..0] = $01A;
CALL L458;
DRSCAN V21, A26[(V21 - 1)..0];
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 1) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] | 8;
NEXT i;
CALL L682;
V2 = A12[j];
V27 = (V2 - 1) * 2;
i = A49[V27];
V48 = A49[V27 + 1];
V46 = A6[V2];
IF (V48 < (V46 >> 1)) THEN GOTO L130;
V48 = V46 - V48 - 1;
L130:
V27 = j + V24 + (16 * V48) + 12;
FOR V11 = i TO i + 15;
PUSH i;
PUSH V27;
CALL L385;
CALL L317;
POP V27;
POP i;
IF (A31[V27]) THEN
V86 = V86 | (1 << (V11 - i));
NEXT V11;
CALL L134;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L131 USES DEVICE_DATA, TEMP_DATA, L400, L365, L134;
V4 = 2;
j = V1 - V84;
FOR i = 0 TO V1;
IF (((A17[i] & 2) != 0) && ((A17[i] & 4) != 0) &&
(i != j)) THEN A17[i] = A17[i] & ~4;
NEXT i;
V2 = A12[j];
L132:
V11 = 4114;
CALL L400;
V49 = 1;
CALL L365;
k = 0;
FOR i = 2 TO 20;
IF ((i == 8) || (i == 9) || (i == 16)) THEN GOTO L133;
V27 = V24 - 1 - i - V84;
IF (A31[V27]) THEN V86 = V86 | (1 << k);
k = k + 1;
L133:
NEXT i;
CALL L134;
ENDPROC;
#ENDIF
PROCEDURE L134 USES DEVICE_DATA, TEMP_DATA;
INTEGER V85[8];
EXPORT "DEVICE", V84 + 1;
EXPORT "UES", V86;
FOR i = 0 TO 3;
V27 = 0;
V85[i] = V86 & 15;
IF (V85[i] > 9) THEN V27 = 7;
V85[i] = V85[i] + 48 + V27;
V86 = V86 >> 4;
NEXT i;
PRINT "Device #", V84 + 1, " UES code is ",
CHR$(V85[3]), CHR$(V85[2]),
CHR$(V85[1]), CHR$(V85[0]);
ENDPROC;
#IF FLEX
PROCEDURE L135 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00A;
CALL L458;
PREDR V77;
POSTDR V78;
DRSCAN 80, V189[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L136;
V42 = 12;
GOTO L137;
L136:
PREDR V77;
POSTDR V78;
DRSCAN 80, V190[79..0], CAPTURE A45[79..0];
FOR i = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A29[79..0], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN i = 100;
NEXT i;
IF (A45[79] == 0) THEN GOTO L137;
V42 = 12;
L137:
ENDPROC;
#ENDIF
#IF FLEX
PROCEDURE L138 USES DEVICE_DATA, TEMP_DATA;
V188 = (V187 - V186)/80;
FOR i = 0 TO V188;
FOR j = 0 TO 100;
PREDR V77;
POSTDR V78;
DRSCAN 80, A93[(V186 + 79)..V186], CAPTURE A45[79..0];
IF (A45[79] == 0) THEN j = 100;
NEXT j;
IF (A45[79] == 0) THEN GOTO L139;
V42 = 12;
i = V188;
GOTO L140;
L139:
V186 = V186 + 80;
L140:
NEXT i;
ENDPROC;
#ENDIF
#IF FLEX
PROCEDURE L141 USES DEVICE_DATA, TEMP_DATA, L107, L458, L138, L135;
PRINT "configuring SRAM device(s)...";
CALL L107;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
(V42 != 0)) THEN
GOTO L146;
V77 = 0;
V78 = 0;
V30 = 0;
V186 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L142;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A43[j];
IF (j < i) THEN V186 = V186 + A92[j];
L142:
NEXT j;
IF(A92[i] == 0) THEN
GOTO L143;
PUSH i;
CALL L135;
POP i;
V187 = V186 + A92[i] - 1;
PUSH i;
CALL L138;
POP i;
L143:
V31 = V30 + A43[i] - 1;
POSTDR V78;
PUSH i;
IF ((A17[i] & 64) == 0) THEN
GOTO L144;
A18[9..0] = $281;
CALL L458;
WAIT 1000 USEC;
POP i;
PUSH i;
L144:
IF (((A17[i] & 128) == 0) || (V230 == 0)) THEN
GOTO L145;
A18[9..0] = $00D;
CALL L458;
WAIT 1000 USEC;
L145:
A18[9..0] = $002;
CALL L458;
WAIT 100 USEC;
POP i;
DRSCAN A43[i], A42[V31..V30];
IF (USE_REV0_PROG_ALG) THEN DRSCAN 32, A30[31..0];
PUSH i;
A18[9..0] = $004;
CALL L458;
POP i;
PREDR V77;
POSTDR V78;
DRSCAN A59[i], A29[A59[i]-1..0], CAPTURE A45[A59[i]-1..0];
IF !A45[A60[i]] THEN V42 = 10;
PUSH i;
CALL L107;
POP i;
L146:
NEXT i;
PREIR 0;
POSTIR 0;
PREDR 0;
POSTDR 0;
IF (V42 != 0) THEN
GOTO L147;
V76 = 1;
L147:
ENDPROC;
#ENDIF
#IF EKP
PROCEDURE L148 USES DEVICE_DATA, TEMP_DATA, L107, L458;
IF (V260) THEN
PRINT "programming non-volatile security key(s) for exclusive-secure bitstream configuration...";
IF (!V260) THEN
PRINT "programming non-volatile security key(s) for optional-secure bitstream configuration...";
CALL L107;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 16) == 0) ||
(V42 != 0)) THEN
GOTO L156;
V77 = 0;
V78 = 0;
V186 = 0;
V30 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L149;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A111[j];
#IF EFP
IF (j < i) THEN V186 = V186 + A109[j];
#ENDIF
L149:
NEXT j;
V31 = V30 + A111[i] - 1;
#IF EFP
V187 = V186 + A109[i] - 1;
#ENDIF
#IF EFP
#ENDIF
PREDR V77;
POSTDR V78;
PUSH i;
A18[9..0] = $013;
CALL L458;
DRSCAN 4, $0, COMPARE $0, $E, V40;
POP i;
IF (V40 == 0) THEN PRINT "Error - Non-volatile key programming already attempted on device ", V0 - i;
IF (V40 == 0) THEN GOTO L155;
PUSH i;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $00D;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $002;
CALL L458;
WAIT 100 USEC;
POP i;
IF (A111[i] == 512) THEN GOTO L150;
#IF EFP
PUSH i;
V37 = 256;
EXPORT "SET_NCS", 0;
WAIT 100000 USEC;
A18[9..0] = $010;
CALL L458;
WAIT 100 USEC;
POP i;
DRSCAN A109[i], A108[V187..V186];
PUSH i;
WAIT IDLE, V37 CYCLES, IDLE;
STATE RESET;
STATE IDLE;
A18[9..0] = $002;
CALL L458;
WAIT 100 USEC;
#ENDIF
GOTO L151;
L150:
PUSH i;
V37 = 1024;
A18[9..0] = $317;
CALL L458;
WAIT 100 USEC;
L151:
A18[9..0] = $310;
CALL L458;
WAIT 100 USEC;
POP i;
DRSCAN A111[i], A110[V31..V30];
WAIT IDLE, V37 CYCLES, IDLE;
IF (A111[i] == 512) THEN GOTO L152;
EXPORT "SET_NCS", 1;
WAIT 100000 USEC;
L152:
PUSH i;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $013;
CALL L458;
DRSCAN 4, $0, COMPARE $8, $8, V40;
POP i;
IF (V40 == 0) THEN PRINT "Error - Failed to program the non-volatile security key on device ", V0 - i;
IF (V40 == 0) THEN GOTO L155;
#IF EKS
IF (A111[i] == 512) THEN GOTO L153;
EXPORT "SET_NCS", 0;
WAIT 100000 USEC;
L153:
PUSH i;
A18[9..0] = $0E5;
CALL L458;
WAIT IDLE, 1 CYCLES, IDLE;
POP i;
IF (A111[i] == 512) THEN GOTO L154;
PUSH i;
EXPORT "SET_NCS", 1;
WAIT 100000 USEC;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
EXPORT "SET_NCS", 0;
WAIT 100000 USEC;
A18[9..0] = $029;
CALL L458;
WAIT IDLE, 1 CYCLES, IDLE;
POP i;
EXPORT "SET_NCS", 1;
WAIT 100000 USEC;
L154:
PUSH i;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $013;
CALL L458;
DRSCAN 4, $0, COMPARE $C, $C, V40;
POP i;
IF (V40 == 0) THEN PRINT "Error - Failed to program the non-volatile key-secure bit on device ", V0 - i;
IF (V40 == 0) THEN GOTO L155;
DRSCAN 4, $0, COMPARE $E, $E, V40;
IF (V40 == 0) THEN PRINT "Error - Failed to program the non-volatile data-integrity bit on device ", V0 - i;
IF (V40 == 0) THEN GOTO L155;
#ENDIF
PRINT "Non-volatile security key programming successful on device ", V0 - i;
V76 = 1;
L155:
PUSH i;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
CALL L107;
POP i;
IF (V40 == 0) THEN i = 0;
IF (V40 == 0) THEN V42 = 10;
L156:
NEXT i;
PREDR 0;
POSTDR 0;
IF ((V42 == 0) && (V76 == 1)) THEN PRINT "Non-volatile security key programming successful";
ENDPROC;
#ENDIF
#IF EKC
PROCEDURE L157 USES DEVICE_DATA, TEMP_DATA, L107, L458;
PRINT "configuring volatile security key(s)...";
CALL L107;
PREDR 0;
POSTDR 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 16) == 0) ||
(A111[i] == 256) ||
(V42 != 0)) THEN
GOTO L160;
V77 = 0;
V78 = 0;
V186 = 0;
V30 = 0;
FOR j = V1 TO 0 STEP -1;
IF (i == j) THEN GOTO L158;
IF ((A17[j] & 32) != 0) THEN
A17[j] = A17[j] & ~4;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
IF (j < i) THEN V30 = V30 + A111[j];
L158:
NEXT j;
V31 = V30 + A111[i] - 1;
PREDR V77;
POSTDR V78;
PUSH i;
A18[9..0] = $029;
CALL L458;
WAIT IDLE, 100 CYCLES, IDLE;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $00D;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $002;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $1AD;
CALL L458;
WAIT 100 USEC;
POP i;
DRSCAN A111[i], A110[V31..V30];
PUSH i;
WAIT IDLE, 1024 CYCLES, IDLE;
A18[9..0] = $001;
CALL L458;
WAIT 100 USEC;
A18[9..0] = $013;
CALL L458;
DRSCAN 4, $0, COMPARE $1, $D, V40;
POP i;
IF (V40 == 0) THEN PRINT "Error - Failed to configure the volatile security key on device ", V0 - i;
IF (V40 == 0) THEN GOTO L159;
PRINT "Volatile security key configuration successful on device ", V0 - i;
V76 = 1;
L159:
PUSH i;
CALL L107;
POP i;
IF (V40 == 0) THEN i = 0;
IF (V40 == 0) THEN V42 = 10;
L160:
NEXT i;
PREDR 0;
POSTDR 0;
IF ((V42 == 0) && (V76 == 1)) THEN PRINT "Volatile security key configuration successful";
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L161 USES DEVICE_DATA, TEMP_DATA, L106, L712, L385, L418;
PRINT "programming 7K device(s)...";
CALL L106;
CALL L712;
FOR V11 = 1 TO 107;
CALL L385;
CALL L418;
NEXT V11;
V49 = 1;
FOR V11 = 109 TO (V32 - 1);
CALL L385;
CALL L418;
NEXT V11;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L162 USES DEVICE_DATA, TEMP_DATA, L106, L389, L458, L421;
PRINT "programming 7KAE/3KA/7KB device(s)...";
CALL L106;
IF (!USE_REV0_PROG_ALG) THEN GOTO L163;
V11 = 2;
CALL L389;
A18[9..0] = $012;
V91 = 1;
CALL L458;
V91 = 0;
L163:
FOR V10 = 2 TO V96;
IF ((V97 && (V10 > 2)) || USE_REV0_PROG_ALG) THEN
GOTO L164;
A18[9..0] = $016;
CALL L458;
L164:
CALL L421;
NEXT V10;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L165 USES DEVICE_DATA, TEMP_DATA, L106, L389, L458, L421, L334, L682, L698;
CALL L106;
V11 = 0;
CALL L389;
IF (V103 && USE_REV0_PROG_ALG) THEN GOTO L166;
A18[9..0] = $016;
CALL L458;
GOTO L167;
L166:
A18[9..0] = $012;
V91 = 1;
CALL L458;
V91 = 0;
L167:
IF (!V103) THEN GOTO L168;
V75 = 1;
CALL L421;
V75 = 0;
V11 = 0;
CALL L389;
A18[9..0] = $016;
CALL L458;
L168:
V34 = 1;
CALL L334;
b = V74;
V74 = 1;
CALL L682;
V74 = b;
CALL L698;
FOR i = 0 TO (V24 - 1);
IF (A31[i] == A30[i]) THEN
GOTO L169;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
i = V24 - 1;
L169:
NEXT i;
L170:
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L171 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L676;
PRINT "programming EPC device(s)...";
CALL L106;
CALL L682;
A18[9..0] = $10A;
CALL L458;
A18[9..0] = $006;
CALL L458;
FOR V10 = 0 TO 26495;
V30 = V89;
V31 = V30 + (V23 - 1);
DRSCAN V23, A53[V31..V30];
IF (V10 != 0) THEN GOTO L172;
A18[9..0] = $196;
CALL L458;
L172:
WAIT V37 USEC;
V89 = V89 + V23;
NEXT V10;
CALL L676;
IF (!V40) THEN V42 = 10;
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L173 USES DEVICE_DATA, TEMP_DATA, L106, L682, L702, L458, L676;
CALL L106;
CALL L682;
b = 0;
CALL L702;
A18[9..0] = $10A;
CALL L458;
A18[9..0] = $006;
CALL L458;
DRSCAN V23, A31[(V23 - 1)..0];
A18[9..0] = $196;
CALL L458;
WAIT V37 USEC;
CALL L676;
IF (!V40) THEN V42 = 10;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L174 USES DEVICE_DATA, TEMP_DATA, L106, L714, L682, L458, L393, L678;
PRINT "programming EPC4/8/16 device(s)...";
CALL L106;
V89 = 0;
V176 = 0;
FOR i = 0 TO 31;
IF (A62[i]) THEN V176 = V176 + (1 << i);
NEXT i;
V89 = V89 + 32;
L175:
V11 = 0;
FOR i = 0 TO 31;
IF (A62[V89 + i]) THEN V11 = V11 + (1 << i);
NEXT i;
V89 = V89 + 32;
CALL L714;
CALL L682;
A18[9..0] = $1A6;
CALL L458;
DRSCAN V24, A30[(V24 - 1)..0];
V11 = V11 - 1;
CALL L393;
V177 = 0;
FOR i = 0 TO 31;
IF (A62[V89 + i]) THEN V177 = V177 + (1 << i);
NEXT i;
IF ((V177 % V23) != 0) THEN EXIT -1;
V89 = V89 + 32;
A18[9..0] = $196;
CALL L458;
WAIT IDLE, V37 USEC, IDLE;
V176 = V176 - V177;
V177 = V177 / V23;
FOR i = 0 TO V177 - 1;
V30 = V89;
V31 = V30 + (V23 - 1);
DRSCAN V23, A62[V31..V30];
WAIT IDLE, 3 CYCLES, V37 USEC, IDLE;
V89 = V89 + V23;
NEXT i;
IF (V176 != 0) THEN GOTO L175;
A18[9..0] = $03E;
CALL L458;
V175 = 18;
CALL L678;
STATE IDLE;
IF (!V40) THEN V42 = 10;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L176 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L704, L393, L678;
CALL L106;
CALL L682;
b = 0;
V27 = 2;
CALL L704;
A18[9..0] = $1A6;
CALL L458;
DRSCAN V24, A30[(V24 - 1)..0];
V11 = 32767;
CALL L393;
A18[9..0] = $196;
CALL L458;
WAIT IDLE, V37 USEC, IDLE;
DRSCAN V23, A31[(V23 - 1)..0];
WAIT IDLE, 3 CYCLES, V37 USEC, IDLE;
A18[9..0] = $03E;
CALL L458;
V175 = 18;
CALL L678;
STATE IDLE;
IF (!V40) THEN V42 = 10;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L177 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L715, L396;
PRINT "programming CFM block...";
CALL L106;
V37 = 100;
V89 = 0;
V11 = 0;
L178:
CALL L715;
IF (!V205) THEN GOTO L181;
V209 = 0;
CALL L682;
CALL L396;
A18[9..0] = $2F4;
CALL L458;
FOR V10 = V11 TO A7[35] - 1;
V30 = V89;
V31 = V30 + (V23 - 1);
V89 = V89 + V23;
DRSCAN V23, A99[V31..V30];
WAIT IDLE, 3 CYCLES, V37 USEC, IDLE;
IF (V10 == A7[32] - 1) THEN
GOTO L179;
IF (V10 == A7[33] - 1) THEN
GOTO L179;
IF (V10 == A7[34] - 1) THEN
GOTO L179;
GOTO L180;
L179:
V11 = V10 + 1;
V10 = A7[35] - 1;
V209 = 1;
L180:
NEXT V10;
IF (V209) THEN GOTO L178;
V209 = 0;
L181:
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L182 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L396, L708, L450;
V37 = 100;
CALL L106;
CALL L682;
V11 = 0;
CALL L396;
A18[9..0] = $2F4;
CALL L458;
V207 = 0;
V208 = 1;
CALL L708;
V89 = 0;
FOR i = 0 to 3;
V30 = V89;
V31 = V30 + (V23 - 1);
V89 = V89 + V23;
DRSCAN V23, A31[V31..V30];
WAIT IDLE, 3 CYCLES, V37 USEC, IDLE;
NEXT i;
IF(V107) THEN V208 = 0;
CALL L450;
V207 = 1;
V208 = 1;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L183 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L715, L396;
PRINT "programming UFM block...";
CALL L106;
V37 = 100;
V89 = 0;
V11 = 0;
V206 = 1;
CALL L715;
CALL L682;
CALL L396;
A18[9..0] = $2F4;
CALL L458;
FOR V10 = 0 TO 511;
V30 = V89;
V31 = V30 + (V23 - 1);
V89 = V89 + V23;
DRSCAN V23, A100[V31..V30];
WAIT IDLE, 3 CYCLES, V37 USEC, IDLE;
NEXT V10;
V206 = 0;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L184 USES DEVICE_DATA, TEMP_DATA, L106, L400, L425, L107;
PRINT "programming 9K device(s)...";
CALL L106;
FOR V11 = 1035 TO 1196;
CALL L400;
CALL L425;
NEXT V11;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L400;
CALL L425;
CALL L107;
NEXT V11;
V49 = 1;
FOR V11 = 4097 TO 4114;
CALL L400;
CALL L425;
NEXT V11;
V49 = 1;
FOR V11 = 4869 TO 4886;
CALL L400;
CALL L425;
NEXT V11;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L400;
CALL L425;
NEXT V11;
V49 = 1;
FOR V11 = 8965 TO 8982;
CALL L400;
CALL L425;
NEXT V11;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000
PROCEDURE L185 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = A41[9..0];
CALL L458;
A18[9..0] = A40[9..0];
CALL L458;
A18[9..0] = $00A;
CALL L458;
IF (V58) THEN V56 = 1;
WAIT (V38 * 1000) USEC;
IF (V58) THEN GOTO L186;
IF (V82) THEN V83 = 20000;
A18[9..0] = $06A;
CALL L458;
V83 = 5;
A18[9..0] = $06E;
CALL L458;
L186:
A18[9..0] = A44[9..0];
CALL L458;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000
PROCEDURE L187 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = A41[9..0];
CALL L458;
A18[9..0] = $00A;
CALL L458;
IF (V58) THEN V56 = 1;
WAIT (V37 * 100) USEC;
IF (V58) THEN GOTO L188;
A18[9..0] = $06E;
CALL L458;
L188:
A18[9..0] = A44[9..0];
CALL L458;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L189 USES DEVICE_DATA, TEMP_DATA, L107;
CALL L107;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 0) || ((A17[i] & 4) == 0))
THEN GOTO L190;
IF (V82 && ((A48[i] & 128) == 0))
THEN A17[i] = A17[i] | 8;
IF (!V82 && ((A48[i] & 128) != 0))
THEN A17[i] = A17[i] | 8;
L190:
NEXT i;
IF (V82) THEN A41[9..0] = $066;
IF (!V82 && V58) THEN A41[9..0] = $006;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L191 USES DEVICE_DATA, TEMP_DATA, L458, L189, L185, L385, L418;
A18[9..0] = $012;
CALL L458;
A18[9..0] = $01E;
CALL L458;
DRSCAN V16, A30[(V16 - 1)..0];
L192:
CALL L189;
b = V58;
IF (V82) THEN V58 = 0;
CALL L185;
V58 = b;
IF (!V82) THEN GOTO L193;
V82 = 0;
GOTO L192;
L193:
A18[9..0] = $01E;
CALL L458;
DRSCAN V16, A29[(V16 - 1)..0];
IF (V103) THEN GOTO L194;
V75 = 1;
FOR V11 = 102 TO 103;
CALL L385;
CALL L418;
NEXT V11;
V75 = 0;
L194:
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L195 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00A;
CALL L458;
WAIT (V38 * 1000) USEC;
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L196 USES DEVICE_DATA, TEMP_DATA, L458, L681;
PRINT "erasing EPC device(s)...";
A18[9..0] = $192;
CALL L458;
CALL L681;
IF (!V40) THEN V42 = 10;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L197 USES DEVICE_DATA, TEMP_DATA;
V89 = 0;
V195 = 0;
V196 = 0;
FOR i = 32 TO 63;
IF (A62[i]) THEN V195 = V195 + (1 << (i - 32));
NEXT i;
V89 = 64;
IF(V195 > 32768) THEN GOTO L198;
V196 = 1;
V197 = 0;
FOR i = 0 TO 31;
IF (A62[V89 + i]) THEN V197 = V197 + (1 << i);
NEXT i;
V89 = V89 + 32 + V197;
V197 = V197/16;
V195 = 0;
FOR i = 0 TO 31;
IF (A62[V89 + i]) THEN V195 = V195 + (1 << i);
NEXT i;
L198:
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L199 USES DEVICE_DATA, TEMP_DATA, L107, L714, L682, L671, L209, L458, L197;
PRINT "erasing EPC4/8/16 device(s)...";
INTEGER V194 = 0;
CALL L107;
V195 = 0;
IF (V193) THEN CALL L197;
FOR i = 0 TO V18 - 1;
A28[i] = 0;
NEXT i;
IF (!V182) THEN GOTO L205;
V24 = 0;
l = 0;
L200:
V38 = 0;
V30 = 0;
FOR i = 0 TO V1;
A28[V30] = 0;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L204;
V2 = A12[i];
V27 = 3 - 1;
if ((A17[i] & 64) != 0) THEN V27 = V27 + 3;
j = (A11[(5 * 3 * (V2 - 1)) + V27] >> 16) & 65535;
V27 = (A11[(5 * 3 * (V2 - 1)) + V27] & 65535) - 1;
V183 = 0;
V10 = 0;
V31 = -1;
V89 = 32;
V176 = 0;
FOR k = 0 TO 31;
IF (A63[k]) THEN V176 = V176 + (1 << k);
NEXT k;
L201:
V10 = V10 + V183;
V27 = V27 + 1;
V73 = A64[V27];
V27 = V27 + 1;
V183 = A64[V27];
V27 = V27 + 1;
V184 = A64[V27];
V10 = V10 - V183;
FOR k = 0 TO (V184 - 1);
V10 = V10 + V183;
V31 = V31 + 1;
j = j - 1;
IF ((j == 0) || (V31 == l)) THEN k = V184;
NEXT k;
IF ((V31 < l) && (j > 0)) THEN GOTO L201;
IF ((j == 0) && (V31 < l)) THEN A17[i] = A17[i] | 8;
IF ((j == 0) && (V31 < l)) THEN GOTO L204;
IF (V10 >= 2) THEN GOTO L203;
L202:
A17[i] = A17[i] | 4096;
V11 = 0;
FOR k = 0 TO 31;
IF (A63[V89 + k]) THEN V11 = V11 + (1 << k);
NEXT k;
V89 = V89 + 32;
IF (V11 > (((V10 + V183) << 12) - 1)) THEN
GOTO L203;
PUSH i;
PUSH V2;
CALL L714;
CALL L682;
POP V2;
POP i;
V177 = 0;
FOR k = 0 TO 31;
IF (A63[V89 + k]) THEN V177 = V177 + (1 << k);
NEXT k;
IF ((V177 % V24) != 0) THEN EXIT -1;
V89 = V89 + 32 + V177;
V176 = V176 - V177;
V177 = V177 / V24;
IF ((((V10 << 12) >= V11) && ((V10 << 12) <= (V11 + V177 - 1))) ||
(((((V10 + V183) << 12) - 1) >= V11) && ((((V10 + V183) << 12) - 1) <= (V11 + V177 - 1))) ||
(((V10 << 12) < V11) && ((((V10 + V183) << 12) - 1) > (V11 + V177 - 1))))
THEN A17[i] = A17[i] & ~4096;
IF (((A17[i] & 4096) == 0) || (V176 == 0)) THEN GOTO L203;
GOTO L202;
L203:
IF (V73 > V38) THEN V38 = V73;
V194 = 0;
FOR k = V30 TO (V30 + A0[V2] - 1);
A28[k] = 0;
IF (((k - V30) >= 12) && (V10 & (1 << (k - V30 - 12))) != 0) THEN A28[k] = 1;
IF (((k - V30) >= 12) && (V10 & (1 << (k - V30 - 12))) != 0) THEN V194 = V194 + (1 << (k - V30));
NEXT k;
V30 = V30 + A0[V2] - 1;
L204:
V30 = V30 + 1;
NEXT i;
l = l + 1;
PUSH l;
L205:
IF ((V196) && (V197 > V194)) THEN GOTO L206;
IF (V195 <= V194) THEN GOTO L206;
GOTO L207;
L206:
IF (V38 != 0) THEN CALL L209;
CALL L107;
A18[9..0] = $04A;
CALL L458;
CALL L671;
L207:
IF (!V182) THEN GOTO L208;
POP l;
IF ((V42 == 0) && (V38 != 0)) THEN GOTO L200;
L208:
CALL L107;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L209 USES DEVICE_DATA, TEMP_DATA, L458, L681, L678;
A18[9..0] = $192;
V91 = 1;
CALL L458;
V91 = 0;
IF (V182) THEN GOTO L211;
V30 = 0;
FOR i = 0 TO V1;
V31 = V30;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L210;
V2 = A12[i];
V31 = V31 + (A0[V2] - 1);
L210:
V30 = V31 + 1;
NEXT i;
L211:
DRSCAN V30, A28[(V30 - 1)..0], CAPTURE A28[(V30 - 1)..0];
V30 = 0;
FOR i = 0 TO V1;
V31 = V30;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L212;
V2 = A12[i];
V31 = V31 + (A0[V2] - 1);
IF (A28[V30] == 1) THEN V178 = 0;
L212:
V30 = V31 + 1;
NEXT i;
IF (V178 == 0) THEN GOTO L213;
V175 = 23;
CALL L681;
IF (!V40) THEN V42 = 10;
GOTO L214;
L213:
PRINT "Waiting maximum erase time of ", V38, " milliseconds";
FOR i = 0 TO (V38 / 100);
WAIT 100000 USEC;
NEXT i;
L214:
A18[9..0] = $03E;
CALL L458;
V175 = 18;
CALL L678;
IF (!V40) THEN V42 = 10;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L215 USES DEVICE_DATA, TEMP_DATA, L458, L396;
PRINT "erasing MAXII device(s)...";
V11 = 0;
IF (V210) THEN GOTO L216;
PRINT "erasing MAXII UFM block...";
V38 = 500000/V227;
V206 = 1;
FOR i = 0 TO V227 - 1;
PUSH i;
CALL L396;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, V38 USEC, IDLE;
POP i;
NEXT i;
V206 = 2;
FOR i = 0 TO V227 - 1;
PUSH i;
CALL L396;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, V38 USEC, IDLE;
POP i;
NEXT i;
L216:
IF (V214) THEN GOTO L217;
PRINT "erasing MAXII CFM block...";
V38 = 500000;
V206 = 0;
V11 = 0;
CALL L396;
A18[9..0] = $2F2;
CALL L458;
WAIT IDLE, 3 CYCLES, V38 USEC, IDLE;
L217:
V206 = 0;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L218 USES DEVICE_DATA, TEMP_DATA, L458, L185;
A18[9..0] = $392;
CALL L458;
A18[9..0] = $01E;
CALL L458;
DRSCAN V17, A30[(V17 - 1)..0];
CALL L185;
A18[9..0] = $01E;
CALL L458;
DRSCAN V17, A29[(V17 - 1)..0];
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L219 USES DEVICE_DATA, TEMP_DATA, L106, L712, L694, L385, L317;
IF (V74) THEN PRINT "blank checking 7K device(s)...";
IF (!V74) THEN PRINT "verifying 7K device(s)...";
CALL L106;
CALL L712;
CALL L694;
FOR V11 = 1 TO 101;
CALL L385;
CALL L317;
IF (V42 != 0) THEN V11 = 101;
NEXT V11;
IF (V42 != 0) THEN GOTO L221;
IF (V74 && !V103) THEN GOTO L220;
FOR V11 = 102 TO 103;
CALL L385;
CALL L317;
IF (V42 != 0) THEN V11 = 103;
NEXT V11;
L220:
IF (V42 != 0) THEN GOTO L221;
FOR V11 = 104 TO 107;
CALL L385;
CALL L317;
IF (V42 != 0) THEN V11 = 107;
NEXT V11;
IF (V42 != 0) THEN GOTO L221;
V45 = 1;
FOR V11 = 109 TO 113;
CALL L385;
CALL L317;
IF (V42 != 0) THEN V11 = 113;
NEXT V11;
IF (V42 != 0) THEN GOTO L221;
V45 = 0;
FOR V11 = 114 TO (V32 - 1);
CALL L385;
CALL L317;
IF (V42 != 0) THEN V11 = V32 - 1;
NEXT V11;
L221:
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L222 USES DEVICE_DATA, TEMP_DATA, L106, L389, L458, L334;
INTEGER V92 = 0;
IF (V74) THEN PRINT "blank checking 7KAE/3KA/7KB device(s)...";
IF (!V74) THEN PRINT "verifying 7KAE/3KA/7KB device(s)...";
L223:
CALL L106;
IF (V92 == 1) THEN V29 = 2;
V11 = 2;
CALL L389;
IF (V29 != 0) THEN GOTO L224;
A18[9..0] = $01E;
L224:
IF (V29 != 1) THEN GOTO L225;
A18[9..0] = $016;
L225:
IF (V29 != 2) THEN GOTO L226;
A18[9..0] = $01A;
L226:
CALL L458;
V45 = 1;
FOR V10 = 2 TO 6;
CALL L334;
NEXT V10;
IF (V42 != 0) THEN GOTO L227;
V45 = 0;
FOR V10 = 7 TO V96;
CALL L334;
NEXT V10;
IF (!V103 || (V29 != 0)) THEN
GOTO L227;
V92 = 1;
GOTO L223;
L227:
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L228 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L702, L345, L676;
IF (V74) THEN PRINT "blank checking EPC device(s)...";
IF (!V74) THEN PRINT "verifying EPC device(s)...";
L229:
CALL L106;
CALL L682;
V29 = 1;
A18[9..0] = $10A;
CALL L458;
A18[9..0] = $122;
CALL L458;
WAIT 20 USEC;
b = 0;
IF (V102) THEN b = 1;
CALL L702;
V10 = 0;
CALL L345;
IF (V42 != 0) THEN GOTO L230;
FOR V10 = 1 TO 26495;
CALL L345;
IF (V42 != 0) THEN V10 = 26495;
NEXT V10;
CALL L676;
L230:
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L231 USES DEVICE_DATA, TEMP_DATA, L106, L714, L682, L393, L458, L704, L678;
IF (V74) THEN PRINT "blank checking EPC4/8/16 device(s)...";
IF (!V74) THEN PRINT "verifying EPC4/8/16 device(s)...";
CALL L106;
V89 = 0;
V176 = 0;
FOR i = 0 TO 31;
IF (A63[i]) THEN V176 = V176 + (1 << i);
NEXT i;
V89 = V89 + 32;
L232:
V11 = 0;
FOR i = 0 TO 31;
IF (A63[V89 + i]) THEN V11 = V11 + (1 << i);
NEXT i;
V89 = V89 + 32;
CALL L714;
CALL L682;
CALL L393;
V177 = 0;
FOR i = 0 TO 31;
IF (A63[V89 + i]) THEN V177 = V177 + (1 << i);
NEXT i;
IF ((V177 % V24) != 0) THEN EXIT -1;
V89 = V89 + 32;
A18[9..0] = $1A6;
CALL L458;
V176 = V176 - V177;
V177 = V177 / V24;
IF (V74) THEN GOTO L235;
FOR i = 0 TO V177 - 1;
V30 = V89;
V31 = V30 + (V24 - 1);
IF ((V11 + i) == 32768) THEN GOTO L233;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A63[V31..V30], A30[(V24 - 1)..0], V40;
GOTO L234;
L233:
b = V103;
V27 = 0;
PUSH i;
CALL L704;
V11 = 32768;
CALL L393;
A18[9..0] = $1A6;
CALL L458;
POP i;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[(V24 - 1)..0], A30[(V24 - 1)..0], V40;
L234:
V89 = V89 + V24;
IF (!V40) THEN i = V177 - 1;
NEXT i;
GOTO L237;
L235:
j = 0;
FOR i = 0 TO V1;
A31[j] = 0;
k = 1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L236;
V2 = A12[i];
FOR k = (j + 1) TO (j + A1[V2] + 1);
A31[k] = 1;
NEXT k;
k = A1[V2] + 2;
L236:
j = j + k;
NEXT i;
FOR i = 0 TO V177 - 1;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[(V24 - 1)..0], A30[(V24 - 1)..0], V40;
IF (!V40) THEN i = V177 - 1;
NEXT i;
V89 = V89 + (V177 * V24);
L237:
IF (!V40) THEN V42 = 11;
IF ((V42 == 0) && (V176 != 0)) THEN GOTO L232;
IF (V42 != 0) THEN GOTO L238;
A18[9..0] = $03E;
CALL L458;
V175 = 18;
CALL L678;
STATE IDLE;
GOTO L239;
L238:
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L239:
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L240 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L708, L355, L715, L396;
IF (V74) THEN PRINT "blank checking UFM block...";
IF (!V74) THEN PRINT "verifying UFM block...";
CALL L106;
V11 = 0;
V89 = 0;
V206 = 1;
CALL L715;
CALL L682;
V29 = 1;
CALL L396;
A18[9..0] = $205;
CALL L458;
WAIT 20 USEC;
FOR V10 = 0 TO 511;
CALL L355;
IF (V42 != 0) THEN V10 = 511;
NEXT V10;
V206 = 0;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L241 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L708, L355, L715, L396;
IF (V74) THEN PRINT "blank checking CFM block...";
IF (!V74) THEN PRINT "verifying CFM block...";
V206 = 0;
CALL L106;
V11 = 0;
V89 = 0;
L242:
IF (V42 != 0) THEN GOTO L245;
CALL L715;
IF (!V205) THEN GOTO L245;
CALL L682;
V209 = 0;
V29 = 1;
CALL L396;
A18[9..0] = $205;
CALL L458;
WAIT 20 USEC;
V207 = 0;
V208 = 0;
IF (V102) THEN V207 = 1;
IF (V102 || !V107) THEN V208 = 1;
IF (V11 < 4) THEN CALL L708;
V207 = 1;
V208 = 1;
V10 = 0;
FOR V10 = V11 TO A7[35] - 1;
CALL L355;
IF (V42 != 0) THEN V10 = A7[35] - 1;
IF (V10 == A7[32] - 1) THEN
GOTO L243;
IF (V10 == A7[33] - 1) THEN
GOTO L243;
IF (V10 == A7[34] - 1) THEN
GOTO L243;
GOTO L244;
L243:
V11 = V10 + 1;
V10 = A7[35] - 1;
V209 = 1;
L244:
NEXT V10;
IF (V209) THEN GOTO L242;
L245:
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L246 USES DEVICE_DATA, TEMP_DATA, L106, L400, L365, L107;
IF (V74) THEN PRINT "blank checking 9K device(s)...";
IF (!V74) THEN PRINT "verifying 9K device(s)...";
CALL L106;
FOR V11 = 1035 TO 1196;
CALL L400;
CALL L365;
IF (V42 != 0) THEN V11 = 1196;
NEXT V11;
IF (V42 != 0) THEN GOTO L247;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L400;
CALL L365;
CALL L107;
IF (V42 != 0) THEN V11 = 2074;
NEXT V11;
IF (V42 != 0) THEN GOTO L247;
V49 = 1;
FOR V11 = 4097 TO 4113;
CALL L400;
CALL L365;
IF (V42 != 0) THEN V11 = 4113;
NEXT V11;
IF (V42 != 0) THEN GOTO L247;
V45 = 1;
V11 = 4114;
CALL L400;
CALL L365;
V45 = 0;
IF (V42 != 0) THEN GOTO L247;
FOR V11 = 4869 TO 4886;
CALL L400;
CALL L365;
IF (V42 != 0) THEN V11 = 4886;
NEXT V11;
IF (V42 != 0) THEN GOTO L247;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L400;
CALL L365;
IF (V42 != 0) THEN V11 = 8210;
NEXT V11;
IF (V42 != 0) THEN GOTO L247;
FOR V11 = 8965 TO 8982;
CALL L400;
CALL L365;
IF (V42 != 0) THEN V11 = 8982;
NEXT V11;
L247:
ENDPROC;
#ENDIF
#IF MAX7000 || MAX9000 || MAX7000AE || EPC || EPV || MAXII || SFL || PFL
PROCEDURE L248 USES DEVICE_DATA, TEMP_DATA
#IF MAX7000
, L219
#ENDIF
#IF MAX7000AE
, L222
#ENDIF
#IF MAXII
, L241, L240
#ENDIF
#IF SFL
, L578
#ENDIF
#IF EPC
, L228
#ENDIF
#IF EPV
, L231
#ENDIF
#IF MAX9000
, L246
#ENDIF
;
V74 = 1;
#IF MAX7000
IF (V4 == 1) THEN CALL L219;
#ENDIF
#IF MAX7000AE
IF (V4 == 256) THEN CALL L222;
#ENDIF
#IF MAXII
IF ((V4 == 16384) && !V214) THEN CALL L241;
IF ((V4 == 16384) && !V210) THEN CALL L240;
#ENDIF
#IF SFL
IF (V4 == 32768) THEN CALL L578;
#ENDIF
#IF EPC
IF (V4 == 512) THEN CALL L228;
#ENDIF
#IF EPV
IF (V4 == 2048) THEN CALL L231;
#ENDIF
#IF MAX9000
IF (V4 == 2) THEN CALL L246;
#ENDIF
IF (V103) THEN V74 = 0;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L249 USES DEVICE_DATA, TEMP_DATA, L106, L385, L317, L682, L107;
CALL L106;
V37 = 100;
V38 = 100;
V29 = 1;
V11 = 0;
CALL L385;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L250;
CALL L317;
GOTO L251;
L250:
CALL L682;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L251:
FOR i = V1 TO 0 STEP -1;
A48[i] = 0;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L261;
V68 = 0;
FOR j = 0 TO i;
V26 = 0;
V2 = A12[j];
IF (i == j) THEN GOTO L252;
V26 = 1;
IF (((A17[j] & 1) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L252;
V26 = A8[V2] >> 1;
L252:
V68 = V68 + V26;
NEXT j;
FOR j = 0 TO 14;
A16[j] = 0;
V46 = A6[V2];
V47 = j / (V46 << 1);
V48 = (j % (V46 << 1)) >> 1;
V69 = 0;
IF (V48 < (V46 >> 1)) THEN GOTO L253;
V69 = 1;
V48 = V46 - V48 - 1;
L253:
V27 = V68 + (((2 * V47) + V69) * V24) +
(16 * V48) + (8 * (~j & 1));
FOR k = 0 TO 7;
IF (USE_FIXED_ALGORITHM) THEN GOTO L254;
IF (A31[V27 + k]) THEN
A16[j] = A16[j] | (1 << k);
GOTO L255;
L254:
IF ((A54[j << 1] & (1 << k)) != 0) THEN
A31[V27 + k] = 1;
IF ((A54[(j << 1) + 1] & (1 << k)) != 0) THEN
A57[V27 + k] = 1;
L255:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A54[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L256;
PUSH i;
CALL L317;
POP i;
IF (V39) THEN V42 = 6;
L256:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L261;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[9] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 300;
V73 = 100;
IF ((V36 & 24) == 16) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1])) THEN
GOTO L260;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L257;
V72 = A14[A16[8] & 31];
V73 = A15[(A16[8] >> 5) & 7];
L257:
IF ((A11[V27 + 2] & 2) != 2) THEN
GOTO L258;
k = 14;
IF (V2 == 2) THEN k = 11;
V72 = A14[((A16[k] >> 3) & 31) + 32];
V73 = A15[(A16[k] & 7) + 8];
L258:
IF ((A11[V27 + 2] & 4) != 4) THEN
GOTO L259;
V72 = 500;
V73 = 500;
L259:
IF ((A11[V27 + 2] & 128) != 128) THEN
GOTO L260;
V82 = 1;
A48[i] = A48[i] | 128;
L260:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L261:
NEXT i;
IF ((V42 == 0) && V82) THEN CALL L107;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L262 USES DEVICE_DATA, TEMP_DATA, L106, L389, L458, L334, L718;
CALL L106;
V37 = 300;
V38 = 100;
V29 = 1;
V11 = 1;
CALL L389;
A18[9..0] = $016;
CALL L458;
V34 = 1;
V97 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L263;
CALL L334;
GOTO L264;
L263:
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L264:
FOR i = V1 TO 0 STEP -1;
A48[i] = 0;
IF (((A17[i] & 256) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L274;
V68 = 0;
FOR j = 0 TO i;
V26 = 0;
V2 = A12[j];
IF (i == j) THEN GOTO L265;
V26 = 1;
IF (((A17[j] & 256) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L265;
V26 = A5[V2];
L265:
V68 = V68 + V26;
NEXT j;
FOR j = 0 TO 14;
A16[j] = 0;
V46 = A6[V2];
V47 = j / (V46 << 1);
V48 = (j % (V46 << 1)) >> 1;
V69 = 1;
CALL L718;
IF (V48 < (V46 >> 1)) THEN GOTO L266;
V69 = 0;
V48 = V46 - V48 - 1;
L266:
V27 = V68 +
(V69 * ((80 * (V46 >> 1)) + A52[i])) +
(80 * V48) + (40 * (~j & 1)) + (4 - V47);
FOR k = 0 TO 7;
IF (USE_FIXED_ALGORITHM) THEN GOTO L267;
IF (A31[V27 + (5 * k)]) THEN
A16[j] = A16[j] | (1 << k);
GOTO L268;
L267:
IF ((A54[j << 1] & (1 << k)) != 0) THEN
A31[V27 + (5 * k)] = 1;
IF ((A54[(j << 1) + 1] & (1 << k)) != 0) THEN
A57[V27 + (5 * k)] = 1;
L268:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A54[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L269;
PUSH i;
CALL L334;
POP i;
IF (V39) THEN V42 = 6;
L269:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L274;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[9] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 300;
V73 = 100;
IF ((V36 & 24) == 16) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1])) THEN
GOTO L273;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L270;
V72 = A14[A16[8] & 31];
V73 = A15[(A16[8] >> 5) & 7];
L270:
IF ((A11[V27 + 2] & 2) != 2) THEN
GOTO L271;
k = 14;
IF ((V2 == 14) || (V2 == 20) || (V2 == 24)) THEN k = 11;
V72 = A14[((A16[k] >> 3) & 31) + 32];
V73 = A15[(A16[k] & 7) + 8];
L271:
IF ((A11[V27 + 2] & 4) != 4) THEN
GOTO L272;
V72 = 500;
V73 = 500;
L272:
IF ((A11[V27 + 2] & 1024) != 1024) THEN
GOTO L273;
V97 = 0;
L273:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L274:
NEXT i;
IF (V198 && (V96 == 94)) THEN
V37 = V37 + 600;
IF (V198 && (V96 == 95)) THEN
V37 = V37 + 300;
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L275 USES DEVICE_DATA, TEMP_DATA, L106, L458, L345;
CALL L106;
V37 = 0;
V38 = 0;
V29 = 1;
V24 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L276;
V24 = V24 + 31;
L276:
V24 = V24 + 1;
NEXT i;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L277;
A18[9..0] = $042;
CALL L458;
CALL L345;
GOTO L278;
L277:
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L278:
V30 = V24 - 1;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L283;
V2 = A12[i];
V30 = V30 - 31;
V27 = 0;
FOR j = 3 TO 0 STEP -1;
A16[j] = 0;
FOR k = 0 TO 7;
IF (USE_FIXED_ALGORITHM) THEN GOTO L279;
IF (A31[k + V27 + V30]) THEN
A16[j] = A16[j] | (1 << k);
GOTO L280;
L279:
IF ((A56[j << 1] & (1 << k)) != 0) THEN
A31[k + V27 + V30] = 1;
IF ((A56[(j << 1) + 1] & (1 << k)) != 0) THEN
A57[k + V27 + V30] = 1;
L280:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A56[j << 1];
V27 = V27 + 8;
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L281;
PUSH i; PUSH V30;
A18[9..0] = $042;
CALL L458;
CALL L345;
POP V30; POP i;
IF (V39) THEN V42 = 6;
L281:
IF (A16[0] != 65)
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L283;
V35 = ((A16[1] - 48) * 10) + (A16[2] - 48);
V36 = A16[3] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 500;
V73 = 20000;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1])) THEN
GOTO L282;
V40 = 1;
L282:
V27 = V27 + 3;
NEXT j;
j = 0;
k = 0;
IF (((V36 >> 4) & 15) > 9) THEN j = 7;
IF ((V36 & 15) > 9) THEN k = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]),
"(", CHR$(((V36 >> 4) & 15) + 48 + j),
CHR$((V36 & 15) + 48 + k), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L283:
V30 = V30 - 1;
NEXT i;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L284 USES DEVICE_DATA, TEMP_DATA, L106, L393, L458;
CALL L106;
V24 = 0;
V37 = 200;
V38 = 0;
IF (!V182) THEN V38 = 100000;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L285;
V2 = A12[i];
V24 = V24 + A5[V2] - 1;
A48[i] = 0;
L285:
V24 = V24 + 1;
NEXT i;
FOR i = 0 TO 1;
V11 = i;
PUSH i;
CALL L393;
A18[9..0] = $03B;
CALL L458;
DRSCAN V24, A30[(V24 - 1)..0], CAPTURE A31[(V24 - 1)..0];
POP i;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 2048) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L286;
V2 = A12[j];
V27 = 5 * 3 * (V2 - 1);
V31 = V30 + A5[V2] - 1;
IF ((A31[V30] != 0) || (A31[V30 + 1] != 1)) THEN
V42 = 6;
IF (V42 != 0) THEN GOTO L286;
V30 = V30 + 2;
FOR l = 0 TO (5 - 1);
V42 = 0;
k = 0;
PUSH V30;
FOR V30 = V30 TO V30 + 7;
IF ((((A11[V27 + i] & (1 << k)) == 1) && (A31[V30] != 1)) ||
(((A11[V27 + i] & (1 << k)) == 0) && (A31[V30] != 0))) THEN
V42 = 6;
k = k + 1;
NEXT V30;
POP V30;
IF ((V42 == 0) && (l != 0)) THEN A48[j] = A48[j] | 64;
IF (V42 == 0) THEN l = 5 - 1;
V27 = V27 + 3;
NEXT l;
IF ((V42 != 0) || (i == 0)) THEN GOTO L286;
V27 = V27 - 3;
FOR l = 0 TO 1;
A16[2 * l] = (A11[V27 + (1 - l)] & 15) + 48;
IF (A16[2 * l] > 57) THEN A16[2 * l] = A16[2 * l] + 7;
A16[(2 * l) + 1] = ((A11[V27 + (1 - l)] >> 4) & 15) + 48;
IF (A16[(2 * l) + 1] > 57) THEN A16[(2 * l) + 1] = A16[(2 * l) + 1] + 7;
NEXT l;
PRINT "Device #", V0 - j ," Silicon ID is 0x",
CHR$(A16[3]), CHR$(A16[2]), CHR$(A16[1]), CHR$(A16[0])
;
V30 = V31 - A5[V2] - 1;
L286:
V30 = V31 + 1;
IF (V42 != 0) THEN j = V1;
NEXT j;
IF (V42 != 0) THEN i = 1;
NEXT i;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L287 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L396, L355, L715;
V34 = 1;
CALL L106;
CALL L715;
CALL L682;
V206 = 4;
V29 = 1;
CALL L396;
A18[9..0] = $205;
CALL L458;
FOR V10 = 0 TO 4;
DRSCAN V24, A30[(V24 - 1)..0],
CAPTURE A31[((V10 + 1)*V24 - 1)..V10*V24];
NEXT V10;
FOR V10 = 0 TO 2;
i = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 16384) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L288;
V27 = V10*V24 + i;
V2 = A12[j];
FOR k = 0 TO A5[V2] - 1;
IF (A31[V27 + k] != V225[A5[V2]*V10 + k])
THEN V42 = 6;
NEXT k;
i = i + A5[V2] - 1;
L288:
i = i + 1;
NEXT j;
NEXT V10;
IF (V42 != 0) THEN GOTO L291;
V89 = 3*V24;
V226 = 1;
FOR j = 0 TO V1;
IF (((A17[j] & 16384) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L290;
V2 = A12[j];
V27 = 5 * 3 * (V2 - 1);
l = 0;
FOR i = 0 TO (A5[V2] - 1);
IF (A31[V89 + i] == 1) THEN l = l | (1 << (A5[V2] - 1 - i));
NEXT i;
V33 = 0;
FOR i = 0 TO (A5[V2] - 1);
IF (A31[V89 + V24 + i] == 1) THEN V33 = V33 | (1 << (A5[V2] - 1 - i));
NEXT i;
FOR k = 0 TO 5 - 1;
V226 = 1;
IF (A11[V27 + k*3] != l) THEN V226 = 0;
IF (!V226) THEN GOTO L289;
IF (A11[V27 + k*3 + 1] != V33) THEN V226 = 0;
IF (!V226) THEN GOTO L289;
V33 = 0;
l = 0;
FOR i = 0 TO 7;
IF ((A11[V27 + k*3] & (1 << i)) != 0) THEN V33 = V33 | (1 << i);
NEXT i;
FOR i = 0 TO 7;
IF ((A11[V27 + k*3] & (1 << i + 8)) != 0) THEN l = l | (1 << i);
NEXT i;
V46 = 0;
FOR i = 0 TO 7;
IF ((A11[V27 + k*3 + 1] & (1 << i)) != 0) THEN V46 = V46 | (1 << i);
NEXT i;
PRINT "Device #", V0 - j ," Silicon ID is ALTERA", CHR$(V33), CHR$(l), "(",
V46, (A11[V27 + k*3 + 1] >> 8), ")";
IF ((V2 == 34) && (A11[V27 + k*3 + 1] == 0)) THEN
V227 = 10;
IF ((V2 == 34) && (A11[V27 + k*3 + 1] == 0) && ((A17[j] & 4096) != 0)) THEN
V226 = 0;
k = 5 - 1;
L289:
NEXT k;
V89 = V89 + A5[V2] - 1;
L290:
V89 = V89 + 1;
IF(!V226) THEN j = V1;
NEXT j;
IF(!V226) THEN V42 = 6;
L291:
V206 = 0;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L292 USES DEVICE_DATA, TEMP_DATA, L106, L400, L365, L685;
CALL L106;
V37 = 100;
V38 = 100;
V29 = 1;
V11 = 8192;
CALL L400;
V34 = 1;
IF (USE_FIXED_ALGORITHM) THEN GOTO L293;
CALL L365;
GOTO L294;
L293:
CALL L685;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
L294:
V30 = V24 - 1;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L312;
V2 = A12[i];
V30 = V30 - (A4[V2] - 1);
FOR j = 0 TO 14;
INTEGER V70 = 0;
A16[j] = 0;
V27 = 0;
IF (j > 7) THEN GOTO L295;
V27 = j * 8;
V70 = 8;
L295:
IF (j != 8) THEN GOTO L296;
V27 = 64;
V70 = 5;
L296:
IF (j != 9) THEN GOTO L297;
V27 = 69;
V70 = 3;
L297:
IF (j != 10) THEN GOTO L298;
V27 = 72;
V70 = 3;
L298:
IF (j != 11) THEN GOTO L299;
V27 = 75;
V70 = 5;
L299:
IF (j != 12) THEN GOTO L300;
V27 = 80;
V70 = 3;
L300:
IF (j != 13) THEN GOTO L301;
V27 = 83;
V70 = 5;
L301:
IF (j != 14) THEN GOTO L302;
V27 = 88;
V70 = 1;
L302:
FOR k = 0 TO (V70 - 1);
INTEGER V71 = 0;
l = 0;
IF (V2 != 8) THEN GOTO L303;
IF ((k + V27) >= 57) THEN V71 = 1;
IF ((k + V27) >= 83) THEN V71 = 3;
L303:
IF (V2 != 9) THEN GOTO L304;
IF ((k + V27) >= 65) THEN V71 = 1;
L304:
IF (V2 != 10) THEN GOTO L305;
IF ((k + V27) >= 73) THEN V71 = 1;
L305:
IF (V2 != 11) THEN GOTO L306;
IF ((k + V27) >= 81) THEN V71 = 1;
L306:
l = 3 * (k + V27 + V71);
IF (USE_FIXED_ALGORITHM) THEN GOTO L307;
IF (A31[l + V30]) THEN
A16[j] = A16[j] | (1 << ((V70 - 1) - k));
GOTO L308;
L307:
IF ((A55[j << 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A31[l + V30] = 1;
IF ((A55[(j << 1) + 1] & (1 << ((V70 - 1) - k))) != 0) THEN
A57[l + V30] = 1;
L308:
NEXT k;
IF (USE_FIXED_ALGORITHM) THEN
A16[j] = A55[j << 1];
NEXT j;
IF (!USE_FIXED_ALGORITHM) THEN GOTO L309;
PUSH i;
CALL L365;
POP i;
IF (V39) THEN V42 = 6;
L309:
IF ((A16[0] != 65) ||
(A16[1] != 76) ||
(A16[2] != 84) ||
(A16[3] != 69) ||
(A16[4] != 82) ||
(A16[5] != 65))
THEN V42 = 6;
IF (V42 != 0) THEN GOTO L312;
V35 = ((A16[6] - 48) * 10) + (A16[7] - 48);
V36 = A16[8] & 31;
V27 = 5 * 3 * (V2 - 1);
V40 = 0;
V72 = 100;
V73 = 100;
IF ((A17[i] & 64) == 0) THEN
GOTO L310;
V72 = 300;
V73 = 100;
L310:
IF (((V36 & 24) == 8) || ((V36 & 24) == 16)) THEN
V40 = 1;
FOR j = 0 TO (5 - 1);
IF (V40 ||
(V35 != A11[V27]) ||
(V36 != A11[V27 + 1]) ||
(((A17[i] & 64) != 0) && (j != 1))) THEN
GOTO L311;
V40 = 1;
IF ((A11[V27 + 2] & 1) != 1) THEN
GOTO L311;
V72 = A14[A16[11] & 31];
V73 = A15[A16[10] & 7];
A48[i] = A48[i] | 64;
L311:
V27 = V27 + 3;
NEXT j;
V27 = 0;
IF ((V36 & 15) > 9) THEN V27 = 7;
PRINT "Device #", V0 - i ," Silicon ID is ",
CHR$(A16[0]), CHR$(A16[1]), CHR$(A16[2]), CHR$(A16[3]),
CHR$(A16[4]), CHR$(A16[5]), CHR$(A16[6]), CHR$(A16[7]),
"(", CHR$(((V36 >> 4) & 1) + 48),
CHR$((V36 & 15) + 48 + V27), ")"
;
IF (V72 > V37) THEN V37 = V72;
IF (V73 > V38) THEN V38 = V73;
IF (!V40) THEN V42 = 7;
L312:
V30 = V30 - 1;
NEXT i;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L313 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = A19[9..0];
CALL L458;
WAIT 15 USEC;
A18[9..0] = A20[9..0];
CALL L458;
IF (V34 == 0) THEN GOTO L314;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L316;
L314:
IF (V74) THEN GOTO L315;
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A22[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L316;
L315:
DRSCAN V24, A29[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L316:
IF (!V40) THEN V39 = 1;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L317 USES DEVICE_DATA, TEMP_DATA, L458, L682, L313, L696, L692, L694;
V39 = 0;
V40 = 1;
IF (V10 > 89) THEN GOTO L318;
A18[9..0] = $016;
CALL L458;
DRSCAN V21, A26[(V21 - 1)..0];
A18[9..0] = $01A;
CALL L458;
DRSCAN V21, A26[(V21 - 1)..0];
L318:
IF (V29 == 0) THEN
A19[9..0] = $036;
IF (V29 == 1) THEN
A19[9..0] = $03A;
IF (V29 == 2) THEN
A19[9..0] = $032;
IF (V49) THEN CALL L682;
IF (V34 == 1) THEN GOTO L319;
V30 = V15;
V31 = V30 + (V24 - 1);
GOTO L320;
L319:
V30 = 0;
V31 = V24 - 1;
L320:
V81 = 0;
V28 = 4;
IF (V10 > 88) THEN V28 = 0;
FOR i = 0 TO V28;
IF (i == V28) THEN V81 = 1;
PUSH i;
A20[9..0] = $022;
CALL L313;
IF (V29 != 0) THEN GOTO L321;
A19[9..0] = $032;
CALL L313;
A19[9..0] = $036;
L321:
V30 = V30 + V24;
V31 = V31 + V24;
IF (!V45) THEN GOTO L322;
b = 0;
CALL L696;
GOTO L323;
L322:
IF (V10 != V51) THEN GOTO L323;
V44 = 1;
b = 0;
CALL L692;
L323:
A20[9..0] = $026;
CALL L313;
IF (V29 != 0) THEN GOTO L324;
A19[9..0] = $032;
CALL L313;
A19[9..0] = $036;
L324:
V30 = V30 + V24;
V31 = V31 + V24;
IF (!V45) THEN GOTO L325;
b = 1;
CALL L696;
GOTO L326;
L325:
IF (V10 != V51) THEN GOTO L326;
b = 1;
CALL L692;
V44 = 0;
CALL L694;
L326:
IF (V81) THEN GOTO L328;
#IF CHECKSUM
IF (!V110) THEN GOTO L327;
A18[9..0] = $016;
CALL L458;
DRSCAN 1, A26[V21..V21];
A18[9..0] = $01A;
CALL L458;
DRSCAN 1, A26[V21..V21];
GOTO L328;
L327:
#ENDIF
A18[9..0] = $016;
CALL L458;
POP i;
DRSCAN V21, A26[(((i + 2) * V21) - 1)..((i + 1) * V21)];
PUSH i;
A18[9..0] = $01A;
CALL L458;
POP i;
DRSCAN V21, A26[(((i + 2) * V21) - 1)..((i + 1) * V21)];
PUSH i;
L328:
POP i;
NEXT i;
V15 = V30;
IF (!V39 || (V34 == 1)) THEN
GOTO L329;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L329:
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L330 USES DEVICE_DATA, TEMP_DATA
#IF CHECKSUM
, L799
#ENDIF
;
IF (V34 == 0) THEN GOTO L331;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A30[(V24 - 1)..0], CAPTURE A31[(V24 - 1)..0];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L333;
L331:
IF (V74) THEN GOTO L332;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A50[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L333;
L332:
DRSCAN V24, A30[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L333:
IF (!V40) THEN V39 = 1;
#IF CHECKSUM
IF (V173 && (V10 < 95)) THEN CALL L799;
#ENDIF
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L334 USES DEVICE_DATA, TEMP_DATA, L682, L698, L330;
V39 = 0;
V40 = 1;
IF (V49) THEN CALL L682;
IF (V34 == 1) THEN GOTO L335;
V30 = V89;
V31 = V30 + (V24 - 1);
GOTO L336;
L335:
V30 = 0;
V31 = V24 - 1;
L336:
IF (!V45) THEN GOTO L337;
b = 0;
CALL L698;
L337:
CALL L330;
IF (!V45) THEN GOTO L338;
b = 1;
CALL L698;
L338:
V89 = V89 + V24;
IF (!V39 || (V34 == 1)) THEN
GOTO L339;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L339:
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L340 USES DEVICE_DATA, TEMP_DATA
#IF CHECKSUM
, L815
#ENDIF
;
IF (V34 == 0) THEN GOTO L341;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A30[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L344;
L341:
IF (V74) THEN GOTO L343;
IF (V10 == 0) THEN GOTO L342;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A53[V31..V30],
A30[(V24 - 1)..0], V40;
IF (!V40) THEN V39 = 1;
GOTO L344;
L342:
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L344;
L343:
DRSCAN V24, A30[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L344:
IF (!V40) THEN V39 = 1;
#IF CHECKSUM
IF (V110) THEN CALL L815;
#ENDIF
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L345 USES DEVICE_DATA, TEMP_DATA, L340;
V39 = 0;
V40 = 1;
IF (V34 == 1) THEN GOTO L346;
V30 = V89;
V31 = V30 + (V24 - 1);
GOTO L347;
L346:
V30 = 0;
V31 = V24 - 1;
L347:
CALL L340;
V89 = V89 + V24;
IF (!V39 || (V34 == 1)) THEN
GOTO L348;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L348:
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L349 USES DEVICE_DATA, TEMP_DATA;
IF (V34 == 0) THEN GOTO L350;
DRSCAN V24, A30[(V24 - 1)..0], CAPTURE A31[V31..V30];
GOTO L354;
L350:
IF (V74) THEN GOTO L352;
IF (V206 > 0) THEN GOTO L353;
IF (V10 < 4) THEN GOTO L351;
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A99[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L354;
L351:
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A31[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L354;
L352:
DRSCAN V24, A30[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
GOTO L354;
L353:
DRSCAN V24, A30[(V24 - 1)..0], COMPARE A100[V31..V30],
A30[(V24 - 1)..0], V40;
L354:
IF (!V40) THEN V39 = 1;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L355 USES DEVICE_DATA, TEMP_DATA, L349;
V39 = 0;
V40 = 1;
IF (V34 == 1) THEN GOTO L356;
V30 = V89;
V31 = V30 + (V24 - 1);
GOTO L357;
L356:
V30 = 0;
V31 = V24 - 1;
L357:
CALL L349;
V89 = V89 + V24;
IF (!V39 || (V34 == 1)) THEN
GOTO L358;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L358:
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L359 USES DEVICE_DATA, TEMP_DATA, L458
#IF CHECKSUM
, L819
#ENDIF
;
A18[9..0] = A19[9..0];
A18[19..10] = A19[19..10];
A18[20] = 1;
IF (V57) THEN GOTO L360;
CALL L458;
GOTO L361;
L360:
V57 = 0;
CALL L458;
V57 = 1;
L361:
A18[20] = 0;
WAIT 15 USEC;
A18[9..0] = A20[9..0];
CALL L458;
IF (V34 == 0) THEN GOTO L362;
IF (!USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], CAPTURE A31[V31..V30];
IF (USE_FIXED_ALGORITHM) THEN
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A31[V31..V30],
A57[V31..V30], V40;
GOTO L364;
L362:
IF (V74) THEN GOTO L363;
DRSCAN V24, A29[(V24 - 1)..0], COMPARE A24[V31..V30],
A30[(V24 - 1)..0], V40;
GOTO L364;
L363:
DRSCAN V24, A29[(V24 - 1)..0],
COMPARE A30[(V24 - 1)..0], A30[(V24 - 1)..0],
V40;
L364:
IF (!V40) THEN V39 = 1;
#IF CHECKSUM
IF (V110) THEN CALL L819;
#ENDIF
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L365 USES DEVICE_DATA, TEMP_DATA, L685, L458, L359, L700;
V39 = 0;
V40 = 1;
IF (V49) THEN CALL L685;
IF (V34 == 1) THEN GOTO L366;
V30 = V15;
V31 = V30 + (V24 - 1);
GOTO L367;
L366:
V30 = 0;
V31 = V24 - 1;
L367:
V28 = 0;
IF ((V10 & 64512) == 1024) THEN GOTO L368;
IF ((V10 & 64512) == 2048) THEN GOTO L375;
GOTO L378;
L368:
IF (V29 == 0) THEN
A19[9..0] = $042;
IF (V29 == 0) THEN
A19[19..10] = $042;
IF (V29 == 1) THEN
A19[9..0] = $03E;
IF (V29 == 1) THEN
A19[19..10] = $062;
IF (V29 == 2) THEN
A19[9..0] = $03E;
IF (V29 == 2) THEN
A19[19..10] = $03E;
V81 = 0;
IF ((V10 >= 1059) && (V10 <= 1172)) THEN
V28 = 4;
IF (V28 == 0) THEN GOTO L369;
A18[9..0] = $396;
CALL L458;
DRSCAN V22, A27[(V22 - 1)..0];
L369:
FOR i = 0 TO V28;
IF (i == V28) THEN V81 = 1;
PUSH i;
#IF CHECKSUM
V119 = i;
#ENDIF
FOR j = 0 TO 4;
IF (V10 > 1172) THEN GOTO L371;
k = 10 * j;
A20[9..0] = A36[(k + 9)..k];
#IF CHECKSUM
V120 = j;
#ENDIF
PUSH j;
CALL L359;
IF (V29 != 0) THEN GOTO L370;
A19[9..0] = $03E;
CALL L359;
A19[9..0] = $042;
L370:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L371:
IF (V10 < 1059) THEN GOTO L373;
k = 10 * j;
A20[9..0] = A37[(k + 9)..k];
PUSH j;
CALL L359;
IF (V29 != 0) THEN GOTO L372;
A19[9..0] = $03E;
CALL L359;
A19[9..0] = $042;
L372:
POP j;
V30 = V30 + V24;
V31 = V31 + V24;
L373:
NEXT j;
IF (V81) THEN GOTO L374;
A18[9..0] = $396;
CALL L458;
POP i;
DRSCAN V22, A27[(((i + 2) * V22) - 1)..((i + 1) * V22)];
PUSH i;
L374:
POP i;
NEXT i;
GOTO L383;
L375:
IF (V29 == 0) THEN
A19[9..0] = $03A;
IF (V29 == 0) THEN
A19[19..10] = $03A;
IF (V29 == 1) THEN
A19[9..0] = $036;
IF (V29 == 1) THEN
A19[19..10] = $052;
IF (V29 == 2) THEN
A19[9..0] = $036;
IF (V29 == 2) THEN
A19[19..10] = $036;
FOR i = 0 TO (V33 - 1);
V57 = 1;
j = 10 * i;
A20[9..0] = A38[(j + 9)..j];
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L376;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L376:
NEXT j;
#IF CHECKSUM
V120 = i;
#ENDIF
PUSH i;
CALL L359;
IF (V29 != 0) THEN GOTO L377;
A19[9..0] = $036;
V57 = 1;
CALL L359;
A19[9..0] = $03A;
L377:
POP i;
V30 = V30 + V24;
V31 = V31 + V24;
NEXT i;
GOTO L383;
L378:
IF (V29 == 0) THEN
A19[9..0] = $04A;
IF (V29 == 0) THEN
A19[19..10] = $04A;
IF (V29 == 1) THEN
A19[9..0] = $046;
IF (V29 == 1) THEN
A19[19..10] = $05E;
IF (V29 == 2) THEN
A19[9..0] = $046;
IF (V29 == 2) THEN
A19[19..10] = $046;
IF ((V10 & 64512) == 4096) THEN
A20[9..0] = $032;
IF ((V10 & 64512) == 8192) THEN
A20[9..0] = $02E;
IF (V10 != 8192) THEN GOTO L379;
A18[9..0] = $04E;
CALL L458;
L379:
IF (!V45) THEN GOTO L380;
b = 0;
CALL L700;
L380:
CALL L359;
IF (V29 != 0) THEN GOTO L381;
A19[9..0] = $046;
CALL L359;
A19[9..0] = $04A;
L381:
IF (!V45) THEN GOTO L382;
b = 1;
CALL L700;
L382:
V30 = V30 + V24;
V31 = V31 + V24;
L383:
V15 = V30;
IF (!V39 || (V34 == 1)) THEN
GOTO L384;
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
L384:
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L385 USES DEVICE_DATA, TEMP_DATA, L458, L712;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 1) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L387;
V2 = A12[j];
IF (V11 >= (A0[V2] - 108)) THEN GOTO L386;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 1;
IF (V11 < 108) THEN A28[(107 + V30) - V11] = 1;
GOTO L387;
L386:
IF ((A17[j] & 8) == 0) THEN V49 = 1;
A17[j] = A17[j] | 8;
L387:
V30 = V31 + 1;
NEXT j;
A18[9..0] = $01E;
CALL L458;
DRSCAN V30, A28[(V30 - 1)..0];
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
V2 = A12[j];
IF (((A17[j] & 1) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L388;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 0;
IF (V11 < 108) THEN A28[(107 + V30) - V11] = 0;
L388:
V30 = V31 + 1;
NEXT j;
IF (V49 && (V11 == V52)) THEN
CALL L712;
V10 = V11;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L389 USES DEVICE_DATA, TEMP_DATA, L458;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 256) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L391;
V2 = A12[j];
IF (V11 >= A0[V2]) THEN GOTO L390;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 1;
GOTO L391;
L390:
IF ((A17[j] & 8) == 0) THEN V49 = 1;
A17[j] = A17[j] | 8;
L391:
V30 = V31 + 1;
NEXT j;
A18[9..0] = $00E;
CALL L458;
DRSCAN V30, A28[(V30 - 1)..0];
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
V2 = A12[j];
IF (((A17[j] & 256) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L392;
V31 = V31 + (A0[V2] - 1);
A28[V31 - V11] = 0;
L392:
V30 = V31 + 1;
NEXT j;
V10 = V11;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L393 USES DEVICE_DATA, TEMP_DATA, L458;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 2048) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L394;
V2 = A12[j];
V31 = V31 + (A0[V2] - 1);
FOR k = 0 TO A0[V2] - 1;
A28[V30 + k] = 0;
IF ((V11 & (1 << k)) != 0) THEN A28[V30 + k] = 1;
NEXT k;
GOTO L395;
L394:
A28[V30] = 0;
L395:
V30 = V31 + 1;
NEXT j;
A18[9..0] = $10E;
V91 = 1;
CALL L458;
V91 = 0;
DRSCAN V30, A28[(V30 - 1)..0], CAPTURE A28[(V30 - 1)..0];
V10 = V11;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L396 USES DEVICE_DATA, TEMP_DATA, L458;
V30 = 0;
FOR j = 0 TO V1;
V31 = V30;
IF (((A17[j] & 16384) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L398;
V2 = A12[j];
IF (V206 == 0) THEN GOTO L397;
V11 = V213[V2 - 32];
IF (V206 == 1) THEN GOTO L397;
V11 = V11 + 256;
IF (V206 == 2) THEN GOTO L397;
V11 = V11 + 256;
IF (V206 == 3) THEN GOTO L397;
V11 = V11 + 32;
L397:
V31 = V31 + (A0[V2] - 1);
FOR k = 0 TO A0[V2] - 1;
A28[V30 + k] = 0;
IF ((V11 & (1 << (A0[V2] - 1 - k))) != 0) THEN A28[V30 + k] = 1;
NEXT k;
GOTO L399;
L398:
A28[V30] = 0;
L399:
V30 = V31 + 1;
NEXT j;
A18[9..0] = $203;
V91 = 1;
CALL L458;
V91 = 0;
DRSCAN V30, A28[(V30 - 1)..0], CAPTURE A28[(V30 - 1)..0];
V10 = V11;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L400 USES DEVICE_DATA, TEMP_DATA, L458;
V31 = 0;
A18[9..0] = $01E;
CALL L458;
IF ((V11 == 1035) || ((V11 & 64512) == 1024)) THEN GOTO L404;
IF ((V11 == 2069) || ((V11 & 64512) == 2048)) THEN GOTO L407;
IF ((V11 == 4097) || (V11 == 4869) || ((V11 & 64512) == 4096)) THEN GOTO L410;
IF ((V11 == 8192) || (V11 == 8193) || (V11 == 8965) || ((V11 & 64512) == 8192)) THEN GOTO L413;
IF (V11 == 0) THEN GOTO L401;
L401:
i = V11;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L402;
V31 = V31 + 790;
A28[V31 - i] = 1;
L402:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L403;
V31 = V31 + 790;
A28[V31 - i] = 0;
L403:
V31 = V31 + 1;
NEXT j;
GOTO L417;
L404:
i = V11 - 1035;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L405;
V31 = V31 + 790;
A28[V31 - 619 - i] = 1;
A28[V31 - 467 - i] = 1;
A28[V31 - 315 - i] = 1;
A28[V31 - 163 - i] = 1;
A28[V31 - 11 - i] = 1;
L405:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L406;
V31 = V31 + 790;
A28[V31 - 619 - i] = 0;
A28[V31 - 467 - i] = 0;
A28[V31 - 315 - i] = 0;
A28[V31 - 163 - i] = 0;
A28[V31 - 11 - i] = 0;
L406:
V31 = V31 + 1;
NEXT j;
GOTO L417;
L407:
i = V11 - 2069;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L408;
V31 = V31 + 790;
A28[V31 - 765 - i] = 1;
A28[V31 - 629 - i] = 1;
A28[V31 - 613 - i] = 1;
A28[V31 - 477 - i] = 1;
A28[V31 - 461 - i] = 1;
A28[V31 - 325 - i] = 1;
A28[V31 - 309 - i] = 1;
A28[V31 - 173 - i] = 1;
A28[V31 - 157 - i] = 1;
A28[V31 - 21 - i] = 1;
L408:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L409;
V31 = V31 + 790;
A28[V31 - 765 - i] = 0;
A28[V31 - 629 - i] = 0;
A28[V31 - 613 - i] = 0;
A28[V31 - 477 - i] = 0;
A28[V31 - 461 - i] = 0;
A28[V31 - 325 - i] = 0;
A28[V31 - 309 - i] = 0;
A28[V31 - 173 - i] = 0;
A28[V31 - 157 - i] = 0;
A28[V31 - 21 - i] = 0;
L409:
V31 = V31 + 1;
NEXT j;
GOTO L417;
L410:
i = V11 - 4097;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L411;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L411:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L412;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L412:
V31 = V31 + 1;
NEXT j;
GOTO L417;
L413:
IF (V11 == 8192) THEN GOTO L416;
i = V11 - 8193;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L414;
V31 = V31 + 790;
A28[V31 - 1 - i] = 1;
L414:
V31 = V31 + 1;
NEXT j;
DRSCAN V31, A28[(V31 - 1)..0];
V31 = 0;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L415;
V31 = V31 + 790;
A28[V31 - 1 - i] = 0;
L415:
V31 = V31 + 1;
NEXT j;
GOTO L417;
L416:
DRSCAN V17, A28[(V17 - 1)..0];
L417:
A18[9..0] = $392;
CALL L458;
V10 = V11;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L418 USES DEVICE_DATA, TEMP_DATA, L682, L458, L187;
V30 = V14;
IF (V49) THEN CALL L682;
V31 = V30 + (V23 - 1);
IF (V75) THEN GOTO L419;
A18[9..0] = $016;
CALL L458;
DRSCAN V23, A21[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
A18[9..0] = $01A;
CALL L458;
DRSCAN V23, A21[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
GOTO L420;
L419:
A18[9..0] = $016;
CALL L458;
DRSCAN V23, A29[(V23 - 1)..0];
A18[9..0] = $01A;
CALL L458;
DRSCAN V23, A29[(V23 - 1)..0];
L420:
CALL L187;
V14 = V30;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L421 USES DEVICE_DATA, TEMP_DATA, L682, L458, L389;
V30 = V89;
IF (V49) THEN CALL L682;
V31 = V30 + (V23 - 1);
IF (V75) THEN GOTO L422;
DRSCAN V23, A50[V31..V30];
GOTO L423;
L422:
IF (V44) THEN DRSCAN V23, A30[(V23 - 1)..0];
IF (!V44) THEN DRSCAN V23, A29[(V23 - 1)..0];
L423:
IF ((V97 && (V10 > 2)) || USE_REV0_PROG_ALG) THEN
GOTO L424;
V11 = V10;
CALL L389;
WAIT 1000 USEC;
A18[9..0] = $012;
CALL L458;
L424:
WAIT (V37 * 100) USEC;
V89 = V89 + V23;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L425 USES DEVICE_DATA, TEMP_DATA, L685, L187, L458;
V30 = V14;
IF (V49) THEN CALL L685;
V31 = V30 + (V23 - 1);
IF ((V10 & 64512) == 0) THEN GOTO L426;
IF ((V10 & 64512) == 1024) THEN GOTO L427;
IF ((V10 & 64512) == 2048) THEN GOTO L429;
IF ((V10 & 64512) == 4096) THEN GOTO L431;
IF ((V10 & 64512) == 8192) THEN GOTO L432;
L426:
CALL L187;
GOTO L434;
L427:
IF (V10 > 1172) THEN GOTO L428;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A34[(j + 9)..j];
PUSH i;
CALL L458;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L187;
L428:
IF (V10 < 1059) THEN GOTO L434;
FOR i = 0 TO 4;
j = 10 * i;
A18[9..0] = A35[(j + 9)..j];
PUSH i;
CALL L458;
POP i;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
NEXT i;
CALL L187;
GOTO L434;
L429:
FOR i = 0 TO (V33 - 1);
j = 10 * i;
A18[9..0] = A38[(j + 9)..j];
V57 = 1;
FOR j = 0 TO V1;
IF (((A17[j] & 2) == 0) ||
((A17[j] & 4) == 0)) THEN GOTO L430;
V2 = A12[j];
IF (i >= A7[V2]) THEN
A17[j] = A17[j] | 8;
L430:
NEXT j;
PUSH i;
CALL L458;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L187;
POP i;
NEXT i;
GOTO L434;
L431:
A20[9..0] = $032;
GOTO L433;
L432:
A20[9..0] = $02E;
L433:
A18[9..0] = A20[9..0];
CALL L458;
DRSCAN V23, A23[V31..V30];
V30 = V30 + V23;
V31 = V31 + V23;
CALL L187;
L434:
V14 = V30;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX7000AE || MAX9000
PROCEDURE L435 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458
#IF MAX7000
, L385, L418
#ENDIF
#IF MAX7000AE
, L389, L698, L421
#ENDIF
#IF MAX9000
, L400, L425
#ENDIF
;
IF (V107 == 0) THEN GOTO L449;
CALL L106;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L436;
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L436:
NEXT i;
IF (!V106 && (V75 == 0)) THEN
GOTO L449;
IF (V106 && (V75 == 0)) THEN
GOTO L441;
#IF MAX7000
IF (V4 != 1) THEN GOTO L437;
V11 = 108;
CALL L385;
CALL L418;
GOTO L441;
L437:
#ENDIF
#IF MAX7000AE
IF (V4 != 256) THEN GOTO L440;
CALL L682;
V11 = 1;
CALL L389;
b = 0;
CALL L698;
IF (USE_REV0_PROG_ALG) THEN GOTO L438;
A18[9..0] = $016;
CALL L458;
GOTO L439;
L438:
A18[9..0] = $012;
V91 = 1;
CALL L458;
V91 = 0;
L439:
V44 = 1;
CALL L421;
b = 1;
CALL L698;
GOTO L441;
L440:
#ENDIF
V11 = 0;
#IF MAX9000
CALL L400;
CALL L425;
#ENDIF
L441:
IF (!V106) THEN GOTO L449;
IF (V4 == 1) THEN
A18[9..0] = $03E;
IF ((V4 == 2) || (V4 == 256)) THEN
A18[9..0] = $3FF;
CALL L458;
CALL L106;
V75 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L444;
IF ((A17[i] & 16) != 0) THEN GOTO L442;
A17[i] = A17[i] | 16;
GOTO L443;
L442:
A17[i] = A17[i] & ~16;
L443:
IF (((V4 == 1) || (V4 == 256)) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] | 8;
IF ((V4 == 2) &&
((A17[i] & 16) == 0)) THEN
A17[i] = A17[i] & ~4;
IF ((A17[i] & 16) != 0) THEN V75 = 1;
L444:
NEXT i;
IF (V75 == 0) THEN GOTO L449;
#IF MAX7000
IF (V4 != 1) THEN GOTO L445;
V11 = 108;
CALL L385;
CALL L418;
GOTO L449;
L445:
#ENDIF
#IF MAX7000AE
IF (V4 != 256) THEN GOTO L448;
CALL L682;
V11 = 1;
CALL L389;
b = 0;
CALL L698;
IF (USE_REV0_PROG_ALG) THEN GOTO L446;
A18[9..0] = $016;
CALL L458;
GOTO L447;
L446:
A18[9..0] = $012;
V91 = 1;
CALL L458;
V91 = 0;
L447:
V44 = 1;
CALL L421;
b = 1;
CALL L698;
GOTO L449;
L448:
#ENDIF
V11 = 0;
#IF MAX9000
CALL L400;
CALL L425;
#ENDIF
L449:
V75 = 0;
V44 = 0;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L450 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L396, L708, L355, L215;
CALL L106;
CALL L682;
V11 = 0;
CALL L396;
A18[9..0] = $205;
CALL L458;
CALL L708;
V89 = 0;
FOR i = 0 to 3;
CALL L355;
NEXT i;
IF (V42 == 0) THEN GOTO L452;
IF (V207 == 0) THEN PRINT "Failed to verify Program done bit(s)";
IF (V207 == 0) THEN GOTO L451;
PRINT "Failed to verify Security bit(s)";
L451:
CALL L215;
L452:
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L453 USES DEVICE_DATA, TEMP_DATA, L106, L682, L458, L396, L708, L450;
PRINT "programming MAXII security bit(s)...";
V37 = 100;
CALL L106;
CALL L682;
V11 = 0;
CALL L396;
A18[9..0] = $2F4;
CALL L458;
V207 = 1;
V208 = 0;
CALL L708;
V89 = 0;
FOR i = 0 to 3;
V30 = V89;
V31 = V30 + (V23 - 1);
V89 = V89 + V23;
DRSCAN V23, A31[V31..V30];
WAIT IDLE, 3 CYCLES, V37 USEC, IDLE;
NEXT i;
CALL L450;
V208 = 1;
ENDPROC;
#ENDIF
#IF MAX7000 || MAX7000AE || MAX9000
PROCEDURE L454 USES DEVICE_DATA, TEMP_DATA
#IF MAX7000
, L455
#ENDIF
#IF MAX7000AE
, L456
#ENDIF
#IF MAX9000
, L457
#ENDIF
;
#IF MAX7000
IF (V4 == 1) THEN CALL L455;
#ENDIF
#IF MAX7000AE
IF (V4 == 256) THEN CALL L456;
#ENDIF
#IF MAX9000
IF (V4 == 2) THEN CALL L457;
#ENDIF
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L455 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
V2 = A12[i];
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN
IF (A0[V2] > V32) THEN
V32 = A0[V2];
NEXT i;
V32 = V32 - 108;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L456 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
V2 = A12[i];
IF (((A17[i] & 256) != 0) &&
((A17[i] & 4) != 0)) THEN
IF (A0[V2] > V32) THEN
V32 = A0[V2];
NEXT i;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L457 USES DEVICE_DATA, TEMP_DATA;
V32 = 8983;
ENDPROC;
#ENDIF
PROCEDURE L458 USES DEVICE_DATA, TEMP_DATA;
PUSH i;
PUSH j;
V41 = 0;
V27 = 0;
IF (!V56) THEN GOTO L459;
V56 = 0;
V41 = 50;
IF (!USE_EXTEND_IR_DELAY_METHOD) THEN GOTO L459;
V27 = 50;
A32[49..0] = A30[49..0];
L459:
FOR i = 0 TO V1;
IF ((A17[i] & 8) != 0) THEN GOTO L460;
IF (((A17[i] & V4) != 0) &&
((A17[i] & 4) != 0)) THEN GOTO L462;
A33[(A25[i] - 1)..0] = A39[(A25[i] - 1)..0];
IF (((A17[i] & 1) != 0) &&
((A17[i] & 4) != 0)) THEN
A33[(A25[i] - 1)..0] = $03E;
A32[(V27 + (A25[i] - 1))..V27] = A33[(A25[i] - 1)..0];
V27 = V27 + A25[i];
GOTO L465;
L460:
IF ((A17[i] & 2) != 0) THEN GOTO L461;
A32[(V27 + 9)..V27] = $3FF;
IF ((A17[i] & 1) != 0) THEN
A32[(V27 + 9)..V27] = $03E;
V27 = V27 + 10;
GOTO L465;
L461:
IF (!V57) THEN GOTO L462;
A32[(V27 + 9)..V27] = $02A;
V27 = V27 + 10;
GOTO L465;
L462:
l = 0;
IF ((A18[20] == 1) && ((A17[i] & 64) != 0)) THEN
l = 10;
#IF MAX7000AE || MAXII
IF ((V203 == 1) && ((A17[i] & 8192) == 0) &&
(V204 == 0)) THEN
GOTO L463;
IF ((V203 == 2) && ((A17[i] & 8192) != 0) &&
(V204 == 0)) THEN
GOTO L464;
#ENDIF
A32[(V27 + 9)..V27] = A18[(l + 9)..l];
V27 = V27 + 10;
GOTO L465;
#IF MAX7000AE || MAXII
L463:
A32[(V27 + 9)..V27] = A39[9..0];
V27 = V27 + 10;
GOTO L465;
L464:
A32[(V27 + 9)..V27] = $0CE;
IF(V4 == 16384) THEN A32[(V27 + 9)..V27] = $233;
V27 = V27 + 10;
GOTO L465;
#ENDIF
L465:
NEXT i;
IF ((V41 == 0) || USE_EXTEND_IR_DELAY_METHOD) THEN
GOTO L466;
STATE DRPAUSE;
WAIT DRPAUSE, 5 USEC, DRPAUSE;
L466:
IRSCAN V27, A32[(V27 - 1)..0];
V57 = 0;
WAIT IRPAUSE, V83 USEC, IRPAUSE;
IF (V91) THEN GOTO L467;
STATE IDLE;
WAIT 3 CYCLES;
L467:
POP j;
POP i;
ENDPROC;
#IF PFL
PROCEDURE L468 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
IF (((A13[i] & 1024) == 0) ||
((A13[i] & 4) == 0)) THEN GOTO L469;
V77 = 0;
V78 = 0;
FOR j = 0 TO V1;
IF (i > j) THEN V77 = V77 + 1;
IF (i < j) THEN V78 = V78 + 1;
NEXT j;
L469:
NEXT i;
PREDR V77;
POSTDR V78;
ENDPROC;
#ENDIF PFL
#IF PFL
PROCEDURE L470 USES TEMP_DATA;
V77 = 0;
V78 = 0;
PREDR V77;
POSTDR V78;
ENDPROC;
#ENDIF PFL
#IF PFL
PROCEDURE L471 USES DEVICE_DATA, TEMP_DATA, L472;
V234[4..0] = $00;
CALL L472;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L472 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00E;
CALL L458;
A32[4..0] = V234[4..0];
A32[5] = 1;
DRSCAN 6, A32[5..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L473 USES TEMP_DATA, DEVICE_DATA, L479, L482, L480, L849;
m = 0;
V30 = 0;
V271 = 0;
PRINT "erasing PFL device(s)...";
ba[31..0] = $00000000;
i = 0;
L474:
j = 0;
L475:
PUSH i;
PUSH j;
IF (V272 == 0 && V265[m] == 0) THEN GOTO L476;
V42 = 0;
IF V246 == 1 THEN CALL L479;
IF V249 == 1 THEN CALL L482;
IF V276 == 1 THEN CALL L480;
L476:
WAIT IDLE, 1 CYCLES;
POP j;
POP i;
IF V42 == 0 THEN V271 = 0;
IF V42 != 0 THEN V271 = V271 + 1;
IF V42 != 0 && V271 < 5 THEN GOTO L475;
m = m + 1;
V30 = V30 + (V255[i]>>16)*256*8;
IF V42 != 0 || V30 >= V236 THEN GOTO L477;
j = j + 1;
IF j <= (V255[i]&65535) THEN GOTO L475;
i = i + 1;
IF i < V254 THEN GOTO L474;
L477:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L478 USES TEMP_DATA, DEVICE_DATA, L564, L569, L850;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L564;
V235[15..0] = $0060;
CALL L569;
V235[15..0] = $00D0;
CALL L569;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L479 USES TEMP_DATA, DEVICE_DATA, L564, L569, L483, L478, L850;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L564;
IF (V244==1 || V243==1) THEN CALL L478;
V235[15..0] = $0020;
CALL L569;
V235[15..0] = $00D0;
CALL L569;
CALL L483;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L480 USES TEMP_DATA, DEVICE_DATA, L566, L565, L569, L483, L850;
V237[26..0] = $0055;
CALL L566;
V235[15..0] = $0020;
CALL L569;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L565;
V235[15..0] = $00D0;
CALL L569;
CALL L483;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L481 USES TEMP_DATA, DEVICE_DATA, L566, L569;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $00AA;
CALL L569;
IF V253>=16 THEN V237[26..0] = $000002AA;
IF V253==8 THEN V237[26..0] = $00000555;
CALL L566;
V235[15..0] = $0055;
CALL L569;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $0020;
CALL L569;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L482 USES TEMP_DATA, DEVICE_DATA, L566, L569, L483, L564, L850;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $00AA;
CALL L569;
IF V253>=16 THEN V237[26..0] = $000002AA;
IF V253==8 THEN V237[26..0] = $00000555;
CALL L566;
V235[15..0] = $0055;
CALL L569;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $0080;
CALL L569;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $00AA;
CALL L569;
IF V253>=16 THEN V237[26..0] = $000002AA;
IF V253==8 THEN V237[26..0] = $00000555;
CALL L566;
V235[15..0] = $0055;
CALL L569;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L564;
V235[15..0] = $0030;
CALL L569;
CALL L483;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L483 USES TEMP_DATA, DEVICE_DATA, L570;
V42 = 0;
CALL L570;
V238[8] = 0;
A57[16..0] = $00100;
i = 0;
DRSCAN V253+1, A30[V253..0], COMPARE V238[V253..0], A57[V253..0], V40;
IF V40 == 0 THEN GOTO L485;
V238[8] = 1;
L484:
DRSCAN V253+1, A30[V253..0], COMPARE V238[V253..0], A57[V253..0], V40;
IF V40 == 1 THEN GOTO L486;
WAIT 15000 USEC;
i = i + 1;
IF i < 100 THEN goto L484;
L485:
V42 = 10;
L486:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L487 USES TEMP_DATA, DEVICE_DATA, L481, L478, L538, L539, L540, L564, L569, L850, L565, L541;
V30 = 0;
m = 0;
PRINT "programming PFL device(s)...";
i = 0;
L488:
j = 0;
L489:
V256 = (V255[i]>>16)*256*8;
PUSH i;
PUSH j;
IF V265[m] == 0 THEN GOTO L490;
IF (V244 == 1 || V243 == 1) THEN CALL L478;
IF V249 == 1 THEN CALL L481;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L565;
IF V30 + V256 > V236 THEN V256 = V236 - V30;
IF V249 == 1 THEN CALL L540;
IF V244 == 1 THEN CALL L538;
IF (V245 == 1 || V243 == 1) THEN CALL L539;
IF V276 == 1 THEN CALL L541;
L490:
WAIT IDLE, 1 CYCLES;
m = m + 1;
POP j;
POP i;
V30 = V30 + V256;
IF V42 != 0 || V30 >= V236 THEN GOTO L491;
j = j + 1;
IF j <= (V255[i]&65535) THEN GOTO L489;
i = i + 1;
IF i < V254 THEN GOTO L488;
L491:
IF (V247 == 0) THEN GOTO L492;
V235[15..0] = $0090;
CALL L569;
V235[15..0] = $0000;
CALL L569;
L492:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L493 USES L479, L482, TEMP_DATA, DEVICE_DATA, L849;
V30 = 0;
m = 0;
n = 0;
PRINT "Pre-Checking PFL pof...";
i = 0;
L494:
j = 0;
L495:
V256 = (V255[i]>>16)*256*8;
PUSH i;
PUSH j;
j = 0;
V263 = 0;
L496:
IF (A124[n] == 0) THEN V263 = 1;
j = j + 2048;
n = n + 1;
IF j >= V256 THEN GOTO L497;
GOTO L496;
L497:
POP j;
POP i;
V30 = V30 + V256;
WAIT IDLE, 1 CYCLES;
if V263 == 1 THEN V265[m] = 1;
m = m + 1;
IF V42 != 0 || V30 >= V236 THEN GOTO L498;
j = j + 1;
IF j <= (V255[i]&65535) THEN GOTO L495;
i = i + 1;
IF i < V254 THEN GOTO L494;
L498:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L499 USES TEMP_DATA, DEVICE_DATA, L850, L569, L565, L570;
IF V42 != 0 && V271 == 1 THEN V42 = 0;
V271 = V271 + 1;
V30 = 0;
m = 0;
i = 0;
IF (V74) THEN PRINT "blank checking PFL device(s)...";
IF (!V74) THEN PRINT "verifying PFL device(s)...";
V238[V253..1] = A112[V253-1..0];
IF (V246 == 1 || V276 == 1) THEN V235[15..0] = $00FF;
IF V249 == 1 THEN V235[15..0] = $00F0;
CALL L569;
L500:
j = 0;
L501:
PUSH i;
PUSH j;
V256 = (V255[i]>>16)*256*8;
IF V265[m] == 0 THEN GOTO L504;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
CALL L565;
CALL L570;
A57[16..0]=$1FFF0;
j = 0;
IF (!V74 && V30 == 0) THEN DRSCAN V253+1, A29[V253..0], COMPARE V238[V253..0], A57[V253..0], V40;
IF (!V74 && V30 == 0) THEN GOTO L503;
L502:
IF (!V74) THEN DRSCAN V253+1, A29[V253..0], COMPARE A112[V30+V253+j-1..V30+j-1], A57[V253..0], V40;
IF (V74) THEN DRSCAN V253+1, A29[V253..0], COMPARE A30[V253..0], A57[V253..0], V40;
L503:
IF (V74 && V40 == 0) THEN V42 = 9;
IF (!V74 && V40 == 0) THEN V42 = 11;
IF (V40 == 0) THEN PRINT "Failure at ", (j+V30)/8;
IF (V40 == 0) THEN GOTO L505;
j = j + V253;
IF j < V256 THEN GOTO L502;
L504:
WAIT IDLE, 1 CYCLES;
m = m + 1;
POP j;
POP i;
V30 = V30 + V256;
IF V42 != 0 || V30 >= V236 THEN GOTO L505;
j = j + 1;
IF j <= (V255[i]&65535) THEN GOTO L501;
i = i + 1;
IF i < V254 THEN GOTO L500;
L505:
IF V40 == 0 THEN POP j;
IF V40 == 0 THEN POP i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L506 USES TEMP_DATA, DEVICE_DATA, L850, L849, L569, L565, L570, L472, L458;
V30 = 0;
m = 0;
i = 0;
IF (V74) THEN PRINT "Blank checking PFL device(s) with CRC checking...";
IF (!V74) THEN PRINT "Verifying PFL device(s) with CRC checking...";
IF (V246 == 1 || V276 == 1) THEN V235[15..0] = $00FF;
IF V249 == 1 THEN V235[15..0] = $00F0;
CALL L569;
V256 = 16384;
L507:
j = 0;
L508:
k = (V255[i]>>16)/16;
L509:
PUSH i;
IF V265[m] == 0 THEN GOTO L510;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
CALL L565;
V234[4..0] = $12;
CALL L472;
A18[9..0] = $00C;
CALL L458;
V234[4..0] = $1C;
CALL L472;
A18[9..0] = $00C;
CALL L458;
if (V253 == 8) THEN WAIT IDLE, 5000 CYCLES;
if (V253 > 8) THEN WAIT IDLE, 2500 CYCLES;
V234[4..0] = $1D;
CALL L472;
A18[9..0] = $00C;
CALL L458;
PUSH j;
PUSH k;
ba[15..0] = $0000;
DRSCAN 16, A29[15..0], CAPTURE ba[15..0];
Call L849;
j = i;
ba[15..0] = $0000;
if (V74) THEN ba[15..0] = $E03E;
if (!V74) THEN ba[15..0] = A114[(V30/1024)+15..(V30/1024)];
CALL L849;
k = i;
IF (j != k) then V42 = 11;
POP j;
POP k;
L510:
POP i;
IF V42 != 0 THEN GOTO L511;
V30 = V30 + V256;
IF V30 >= V236 THEN GOTO L511;
k = k - 1;
IF k > 0 THEN GOTO L509;
m = m + 1;
j = j + 1;
IF j <= (V255[i]&65535) THEN GOTO L508;
i = i + 1;
IF i < V254 THEN GOTO L507;
L511:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L512 USES L479, L537, L482, L480, TEMP_DATA, L472, DEVICE_DATA, L458, L529, L527, L531, L526, L569, L522, L524, L850;
V30 = 0;
m = 0;
V268 = 0;
PRINT "Speed Mode Programming PFL device(s)...";
V267 = 32;
IF (V273 == 1 && V253 == 8) THEN V267 = 64;
IF (V273 == 0 && V243 == 0 && V253 == 16) THEN V267 = 16;
IF (V276 == 1 && V253 == 32) THEN V267 = 8;
i = 0;
L513:
j = 0;
L514:
PUSH i;
PUSH j;
V256 = (V255[i]>>16)*256*8;
IF V265[m] == 0 THEN GOTO L518;
V234[4..0] = $1F;
CALL L472;
A32[4..0] = $01;
CALL L537;
CALL L522;
IF (V243 == 0 && V245 == 0 && V248 == 0 && V273 == 0 && V276 ==0) THEN GOTO L515;
CALL L524;
L515:
CALL L526;
V234[4..0] = $01;
CALL L472;
IF V30 + V256 > V236 THEN V256 = V236 - V30;
IF (V243 == 1 || V245 == 1 || V248 == 1 || V273 == 1 || V276 == 1) THEN CALL L529;
IF (V243 == 0 && V245 == 0 && V248 == 0 && V273 == 0 && V276 == 0) THEN CALL L527;
CALL L531;
IF V264 == 0 THEN GOTO L518;
V234[4..0] = $0F;
CALL L472;
IF (V243 == 1 || V245 == 1 || V248 == 1 || V273 == 1 || V276 == 1) THEN GOTO L516;
IF (V243 == 0 && V245 == 0 && V248 == 0 && V273 == 0 && V276 == 0 && V244 == 1) THEN GOTO L516;
V235[15..0] = $0090;
CALL L569;
V235[15..0] = $0000;
CALL L569;
L516:
k = 0;
L517:
k = k + 1;
IF V246 == 1 THEN CALL L479;
IF V249 == 1 THEN CALL L482;
IF V276 == 1 THEN CALL L480;
IF V42 != 0 && k > 5 THEN GOTO L519;
IF V42 != 0 THEN GOTO L517;
IF (V262 == 1 && V243 == 1 && V268 == 0) THEN V268 = 550;
IF V269 == 2 THEN V268 = V268 + 200;
IF V269 == 4 THEN V268 = V268 + 200;
IF V269 == 6 THEN GOTO L519;
IF V262 == 1 THEN V268 = V268 + 50;
IF V268 > 2500 THEN GOTO L519;
POP j;
POP i;
GOTO L514;
L518:
WAIT IDLE, 1 CYCLES;
m = m + 1;
POP j;
POP i;
V30 = V30 + V256;
IF V42 != 0 || V30 >= V236 THEN GOTO L520;
j = j + 1;
IF j <= (V255[i]&65535) THEN GOTO L514;
i = i + 1;
IF i < V254 THEN GOTO L513;
L519:
POP j;
POP i;
V42 = 10;
PRINT "Failure at ", V30/8;
L520:
V234[4..0] = $0F;
CALL L472;
IF V247 == 0 THEN GOTO L521;
V235[15..0] = $0090;
CALL L569;
V235[15..0] = $0000;
CALL L569;
L521:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L522 USES TEMP_DATA, L472, L458, L537, L849;
PUSH i;
A32[4..0] = $0D;
CALL L537;
A18[9..0] = $00C;
CALL L458;
IF V239 >= 6 THEN DRSCAN 13, V278[12..0];
IF V239 < 6 THEN DRSCAN 12, V278[11..0];
POP i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L523 USES TEMP_DATA, L849;
PUSH i;
V278[11] = 1;
IF (V243 == 1 || V245 == 1 || V248 == 1 || V273 == 1 || V276 == 1) THEN V278[11] = 0;
IF V246 == 1 THEN V278[10] = 1;
IF V276 == 1 THEN V278[12] = 1;
IF (V249 == 1 && V248 == 0 && V273 == 0) THEN V278[9..8] = $3;
IF (V249 == 1 && V248 == 0 && V273 == 0) THEN V278[7..0] = $02;
IF V244 == 1 THEN V278[7..0] = $02;
IF (V248 == 1 && V253 == 8) THEN V278[7..0] = $25;
IF (V273 == 1 && V253 == 8) THEN V278[7..0] = $45;
IF (V248 == 1 && V253 == 16) THEN V278[7..0] = $15;
IF (V273 == 1 && V253 == 16) THEN V278[7..0] = $25;
IF (V245 == 1 && V253 == 8) THEN V278[7..0] = $23;
IF (V245 == 1 && V253 == 16) THEN V278[7..0] = $13;
IF (V276 == 1 && V253 == 32) THEN V278[7..0] = $b;
IF V243 == 1 THEN V278[7..0] = $23;
ba[31..0] = $00000000;
ba[12..0] = V278[12..0];
CALL L849;
POP i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L524 USES TEMP_DATA, L472, L458, L537, L849;
V234[4..0] = $0C;
CALL L472;
A18[9..0] = $00C;
CALL L458;
IF V239 >= 6 THEN DRSCAN 32, V279[15..0];
IF V239 < 6 THEN DRSCAN 16, V279[15..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L525 USES TEMP_DATA, L849;
PUSH i;
IF (V243 == 1 || V245 == 1 || V276 == 1) THEN V279[7..0] = $E8;
IF (V248 == 1 || V273 == 1) THEN V279[7..0] = $25;
V279[15..8] = $1F;
IF (V273 == 1 && V253 == 8) THEN V279[15..8] = $3F;
IF (V276 == 1 && V253 == 32) THEN V279[15..8] = $07;
IF (V273 == 0 && V243 == 0 && V253 == 16) THEN V279[15..8] = $0F;
ba[31..0] = $00000000;
ba[15..0] = V279[15..0];
CALL L849;
POP i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L526 USES TEMP_DATA, L472, L850, L458, L537;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
V234[4..0] = $0B;
CALL L472;
A18[9..0] = $00C;
CALL L458;
IF V253 == 32 THEN DRSCAN V240, V237[V240+1..2];
IF V253 == 16 THEN DRSCAN V240, V237[V240..1];
IF V253 == 8 THEN DRSCAN V240, V237[V240-1..0];
POP i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L527 USES TEMP_DATA, L458, DEVICE_DATA, L472, L537;
PUSH V30;
PUSH i;
PUSH j;
IF V244 == 1 THEN GOTO L528;
A32[4..0] = $03;
CALL L537;
A32[4..0] = $04;
CALL L537;
A32[4..0] = $0E;
CALL L537;
L528:
A32[4..0] = $05;
CALL L537;
A18[9..0] = $00C;
CALL L458;
FOR i = 0 to V256/V253 -1;
if V246 == 1 THEN V238[V253..1] = $0040;
if V249 == 1 THEN V238[V253..1] = $00A0;
V238[0] = 1;
DRSCAN V253+1, V238[V253..0];
V238[V253..1] = A112[V30+V253*(i+1)-1..V30+V253*i];
V238[0] = 0;
DRSCAN V253+1, V238[V253..0];
WAIT IDLE, V268 CYCLES;
Next i;
POP j;
POP i;
POP V30;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L529 USES TEMP_DATA, L472, DEVICE_DATA, L850, L458, L537, L483;
PUSH V30;
PUSH i;
PUSH j;
FOR j = 0 to V256/(V267*V253)-1;
A18[9..0] = $00E;
CALL L458;
IF (V243 == 1 || V245 == 1 || V276 == 1) THEN GOTO L530;
A32[4..0] = $03;
CALL L537;
A32[4..0] = $04;
CALL L537;
L530:
A32[4..0] = $06;
CALL L537;
A32[4..0] = $07;
CALL L537;
A32[4..0] = $05;
CALL L537;
A18[9..0] = $00C;
CALL L458;
V238[0] = 0;
FOR i = 0 to (V267 - 1);
IF i == (V267 - 1) THEN V238[0] = 1;
V238[V253..1] = A112[V30+V253-1..V30];
DRSCAN V253+1, V238[V253..0];
V30 = V30 + V253;
next i;
IF (V243 == 1 || V245 == 1 || V276 == 1) THEN V234[4..0] = $08;
IF (V248 == 1 || V273 == 1 ) THEN V234[4..0] = $09;
CALL L472;
A18[9..0] = $00C;
CALL L458;
DRSCAN 1, A30[0..0];
WAIT IDLE, V268 CYCLES;
Next j;
POP j;
POP i;
POP V30;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L531 USES TEMP_DATA, L458, L472, L537;
PUSH i;
V234[4..0] = $0A;
CALL L472;
A18[9..0] = $00C;
CALL L458;
i = 0;
V262 = 0;
V264 = 0;
L532:
V266[2..0] = #000;
DRSCAN 3, A29[2..0], CAPTURE V266[2..0];
IF V266[0] == 1 THEN GOTO L533;
IF V266[1] == 1 THEN GOTO L534;
IF V266[2] == 1 THEN GOTO L535;
GOTO L532;
L533:
V269 = V269 + 1;
V264 = 1;
IF V266[2] == 1 THEN V262 = 1 ;
GOTO L536;
L534:
IF V266[2] == 1 THEN V264 = 1;
IF V266[2] == 1 THEN V262 = 1;
IF V266[2] == 0 THEN V269 = 0;
GOTO L536;
L535:
V262 = 1;
V264 = 1;
L536:
POP i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L537 USES TEMP_DATA;
A32[5] = 1;
DRSCAN 6, A32[5..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L538 USES TEMP_DATA, DEVICE_DATA, L569, L567;
CALL L567;
V238[0]=0;
FOR i = 0 to V256/V253-1;
V238[V253..1] = $0040;
V238[0] = 1;
DRSCAN V253+1, V238[V253..0];
V238[V253..1] = A112[V30+V253*(i+1)-1..V30+V253*i];
V238[0] = 0;
DRSCAN V253+1, V238[V253..0];
WAIT 200 USEC;
NEXT i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L539 USES TEMP_DATA, DEVICE_DATA, L569, L567, L564, L850;
PUSH V30;
FOR j = 0 to V256/(16*V253)-1;
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L564;
PUSH i;
CALL L567;
POP i;
V238[0] = 1;
V238[16..1] = $00E8;
DRSCAN V253+1, V238[V253..0];
V238[16..1] = $000F;
DRSCAN V253+1, V238[V253..0];
V238[0]=0;
FOR i = 0 to 15;
IF i == 15 THEN V238[0] = 1;
V238[V253..1] = A112[V30+V253-1..V30];
DRSCAN V253+1, V238[V253..0];
V30 = V30 + V253;
NEXT i;
V238[16..1] = $00D0;
DRSCAN V253+1, V238[V253..0];
WAIT 1000 USEC;
NEXT j;
POP V30;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L540 USES TEMP_DATA, DEVICE_DATA, L567;
CALL L567;
V238[0]=0;
FOR i = 0 to V256/V253-1;
V238[V253..1] = $00A0;
V238[0] = 1;
DRSCAN V253+1, V238[V253..0];
V238[V253..1] = A112[V30+V253*(i+1)-1..V30+V253*i];
V238[0] = 0;
DRSCAN V253+1, V238[V253..0];
WAIT 600 USEC;
NEXT i;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L541 USES TEMP_DATA, DEVICE_DATA, L569, L567, L565, L566, L850;
PUSH V30;
FOR j = 0 to V256/(8*V253)-1;
V237[26..0] = $00AA;
CALL L566;
PUSH i;
CALL L567;
POP i;
V238[0] = 1;
V238[V253-1..1] = $000000E8;
DRSCAN V253+1, V238[V253..0];
PUSH i;
i = V30/8;
CALL L850;
V237[26..0] = ba[26..0];
POP i;
CALL L565;
PUSH i;
CALL L567;
POP i;
V238[0] = 1;
V238[V253-1..1] = $00000007;
DRSCAN V253+1, V238[V253..0];
V238[0]=0;
FOR i = 0 to 7;
IF i == 7 THEN V238[0] = 1;
V238[V253..1] = A112[V30+V253-1..V30];
DRSCAN V253+1, V238[V253..0];
V30 = V30 + V253;
NEXT i;
V238[V253-1..1] = $000000D0;
DRSCAN V253+1, V238[V253..0];
WAIT 1000 USEC;
NEXT j;
POP V30;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L542 USES TEMP_DATA, DEVICE_DATA, L458, L472, L565, L570, L571, L569;
IF V42 != 0 && V271 == 1 THEN V42 = 0;
V271 = 1;
IF (V74) THEN PRINT "blank checking PFL device(s)...";
IF (!V74) THEN PRINT "verifying PFL device(s)...";
IF (V246 == 1 || V276 == 1) THEN V235[15..0] = $00FF;
IF V249 == 1 THEN V235[15..0] = $00F0;
CALL L569;
V237[26..0]=$0000000;
CALL L565;
CALL L570;
V30 = 0;
A57[16..0]=$1FFF0;
V238[V253..1] = A112[V253-1..0];
IF (!V74) THEN DRSCAN V253+1, A29[V253..0], COMPARE V238[V253..0], A57[V253..0], V40;
IF (V74) THEN DRSCAN V253+1, A29[V253..0], COMPARE A30[V253..0], A57[V253..0], V40;
V30 = V30 + V253;
if (V74 && V40 == 0) THEN V42 = 9;
if (!V74 && V40 == 0) THEN V42 = 11;
if (V40 == 0) THEN PRINT "Failure at ", V30/8;
if (V40 == 0) THEN GOTO L544;
L543:
V31 = V30 + V253-1;
IF (!V74) THEN DRSCAN V253+1, A29[V253..0], COMPARE A112[V31..V30-1], A57[V253..0], V40;
IF (V74) THEN DRSCAN V253+1, A29[V253..0], COMPARE A30[V253..0], A57[V253..0], V40;
if (V74 && V40 == 0) THEN V42 = 9;
if (!V74 && V40 == 0) THEN V42 = 11;
if (V40 == 0) THEN PRINT "Failure at ", V30/8;
if (V40 == 0) THEN GOTO L544;
V30 = V31 + 1;
IF V30 < V236 THEN GOTO L543;
L544:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L545 USES TEMP_DATA, DEVICE_DATA, L458;
INTEGER node_instance[256];
INTEGER node_mfg_id[256];
INTEGER node_id[256];
INTEGER node_vers[256];
INTEGER node=0;
INTEGER num_nodes=0;
A18[9..0] = $006;
CALL L458;
DRSCAN 32, A29[31..0], CAPTURE A31[31..0];
A18[9..0] = $00E;
CALL L458;
DRSCAN 32, A29[31..0];
A18[9..0] = $00C;
CALL L458;
FOR node = 0 to num_nodes+1;
FOR i = 0 to 7;
DRSCAN 4, A29[3..0], CAPTURE A31[((4 * (i + 1)) - 1)..(4 * i)];
NEXT i;
j = 0;
FOR i = 0 TO 31;
IF (A31[i]) THEN
j = j| (1 << i);
NEXT i;
node_instance[node] = j & 255;
j = j >> 8;
node_mfg_id[node] = j & 2047;
j = j >> 11;
node_id[node] = j & 255;
j = j >> 8;
node_vers[node] = j & 31;
num_nodes = node_id[0];
NEXT node;
V239 = node_vers[1];
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L546 USES TEMP_DATA, DEVICE_DATA, L458;
INTEGER sfl_node_instance[256];
INTEGER sfl_node_mfg_id[256];
INTEGER sfl_node_id[256];
INTEGER sfl_node_vers[256];
INTEGER sfl_node=0;
INTEGER sfl_num_nodes=0;
INTEGER node_partial_bit=0;
V285 = -1;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L549;
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
node_partial_bit = 4 + V290 + V289;
V217 = 32 + V290 + V289;
A18[9..0] = $006;
CALL L458;
DRSCAN V217, A29[V217-1..0], CAPTURE A31[V217-1..0];
A18[9..0] = $00E;
CALL L458;
DRSCAN V217, A29[V217-1..0];
A18[9..0] = $00C;
CALL L458;
FOR sfl_node = 0 to sfl_num_nodes+1;
FOR i = 0 to 7;
DRSCAN node_partial_bit, A29[node_partial_bit-1..0], CAPTURE A45[node_partial_bit-1..0];
A31[((4 * (i + 1)) - 1)..(4 * i)] = A45[V290+3..V290];
NEXT i;
j = 0;
FOR i = 0 TO 31;
IF (A31[i]) THEN
j = j| (1 << i);
NEXT i;
sfl_node_instance[sfl_node] = j & 255;
j = j >> 8;
sfl_node_mfg_id[sfl_node] = j & 2047;
j = j >> 11;
sfl_node_id[sfl_node] = j & 255;
j = j >> 8;
sfl_node_vers[sfl_node] = j & 31;
sfl_num_nodes = sfl_node_id[0];
NEXT sfl_node;
IF (V285 != -1) THEN GOTO L547;
IF ((sfl_node_id[1] == 4) && (sfl_node_vers[1] == V292) && (sfl_node_mfg_id[0] == 110)) THEN V285 = V292;
IF (V285 == -1) THEN V42 = 6;
IF (V42 != 0) THEN GOTO L548;
GOTO L549;
L547:
IF ((sfl_node_id[1] == 4) && (sfl_node_vers[1] == V285) && (sfl_node_mfg_id[0] == 110)) THEN GOTO L549;
V42 = 6;
V285 = -1;
L548:
V288 = 0;
L549:
NEXT V288;
IF (V285 == -1) THEN PRINT "Error in reading SFL VERSION";
IF (V285 == 0 || V285 == 2) THEN PRINT "SFL version is ", V285;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L854 USES TEMP_DATA, DEVICE_DATA, L458;
V38 = 5000000;
FOR V288 = V1 TO 0 STEP -1;
j = 0;
IF (A115[V288] == 0) THEN GOTO L853;
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
IF (V285 == 0) THEN V217 = 5 + V290 + V289;
IF (V285 != 0) THEN V217 = 13 + V290 + V289;
A18[9..0] = $00E;
CALL L458;
A32[V217..0] = A29[V217..0];
IF (V285 == 0) THEN A32[3+V290..V290] = $02;
IF (V285 == 0) THEN A32[4+V290] = 1;
IF (V285 != 0) THEN A32[12+V290..V290] = $1FFF;
L851:
DRSCAN V217, A32[V217-1..0], CAPTURE A31[V217-1..0];
IF (V285 == 0 && A31[3+V290] == 1) THEN GOTO L853;
IF (V285 != 0 && A31[11+V290] == 1) THEN GOTO L853;
IF(j >= V38/400) THEN PRINT "SFL ASMI access on device #", V287 + 1, " is not granted";
IF(j >= V38/400) THEN V42 = 14;
IF(j >= V38/400) THEN GOTO L852;
WAIT 400 USEC;
j = j + 1;
GOTO L851;
L852:
V288 = 0;
L853:
NEXT V288;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN A17[V288] = A17[V288] | 8;
IF (A115[V288] != 0) THEN A17[V288] = A17[V288] & ~8;
NEXT V288;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L856 USES TEMP_DATA, DEVICE_DATA, L660, L663;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN A17[V288] = A17[V288] | 8;
IF (A115[V288] != 0) THEN A17[V288] = A17[V288] & ~8;
NEXT V288;
IF (V285 == 0) THEN V219[3..0] = $01;
IF (V285 == 0) THEN CALL L660;
IF (V285 == 0) THEN GOTO L855;
V291[12..0] = $1F00;
CALL L663;
L855:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L550 USES TEMP_DATA, DEVICE_DATA, L458, L472, L545, L564, L566, L569, L570, L571, L849;
CALL L545;
IF V239 < 3 THEN GOTO L551;
V251[22] = 1;
V234[4..0] = $11;
CALL L472;
A18[9..0] = $00C;
CALL L458;
IF (V239 == 4 || V239 == 5) THEN DRSCAN 23, V251[22..0];
IF (V239 == 6 || V239 == 7) THEN DRSCAN 31, V251[30..0];
V251[22] = 0;
L551:
V234[4..0] = $11;
CALL L472;
A18[9..0] = $00C;
CALL L458;
IF V239 < 3 THEN DRSCAN 6, V251[5..0], CAPTURE V251[5..0];
IF V239 < 3 THEN GOTO L552;
IF (V239 == 4 || V239 == 5) THEN DRSCAN 23, V251[22..0], CAPTURE V251[22..0];
IF (V239 == 6 || V239 == 7) THEN DRSCAN 31, V251[30..0], CAPTURE V251[30..0];
IF (V239 == 6 || V239 == 4) THEN V261 = 0;
IF (V239 == 7 || V239 == 5) THEN V261 = 1;
L552:
j = 0;
FOR i = 0 TO 21;
IF (V251[i]) THEN
j = j| (1 << i);
NEXT i;
j = j >> 2;
V252 = j & 1;
j = j >> 1;
V240 = (j & 7) + 18;
IF (V240 <= 26) THEN GOTO L553;
V42 = 6;
GOTO L561;
L553:
DRSTOP IDLE;
V253 = 32;
L554:
IF V253>=16 THEN V237[26..0] = $0000055;
IF V253==8 THEN V237[26..0] = $00000AA;
CALL L566;
V235[15..0] = $98;
CALL L569;
V237[26..0] = $0000020;
CALL L564;
CALL L570;
CALL L571;
ba[31..0] = $00000000;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF i != 81 THEN GOTO L556;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF i != 82 THEN GOTO L556;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF i != 89 THEN GOTO L556;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V242 = i;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V242 = V242 + (i<<8);
V237[26..0] = $0000000;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V277 = i;
V237[26..0] = $000004E;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V241 = i;
IF V253 == 16 THEN V241 = V241-1;
IF V253 == 32 THEN V241 = V241-2;
IF V242 == 1 THEN V246 = 1;
IF (V242 == 3 && V277 == 137) THEN V246 = 1;
IF (V242 == 3 && V277 == 32) THEN V276 = 1;
IF (V242 == 2 || V242 == 4) THEN V249 = 1;
IF (V246 == 0 && V276 ==0) THEN GOTO L555;
V237[26..0] = $0000002;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V250 = i;
IF (V250 & 240) == 16 THEN V245 = 1;
IF (V250 & 240) == 192 THEN V244 = 1;
IF (V250 & 255) == 206 THEN V244 = 1;
IF (V250 & 255) == 206 THEN V276 = 0;
IF (V250 & 255) == 206 THEN V246 = 1;
IF (V250 & 255) == 207 THEN V244 = 1;
IF (V250 & 255) == 207 THEN V276 = 0;
IF (V250 & 255) == 207 THEN V246 = 1;
IF (V250 & 65264) == 34832 THEN V243 = 1;
IF (V250 & 65264) == 34848 THEN V243 = 1;
IF V243 == 1 THEN V245 = 0;
IF V243 == 0 THEN GOTO L555;
V237[26..0] = $000214;
CALL L564;
ba[31..0] = $00000000;
CALL L570;
FOR j = 0 to 8;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF j == 0 && i != 80 THEN GOTO L556;
IF j == 1 && i != 82 THEN GOTO L556;
IF j == 2 && i != 73 THEN GOTO L556;
IF j == 8 && i == 64 THEN PRINT "This is Dual Die CFI";
IF j == 8 && i == 64 THEN V241 = V241 + 1;
IF j == 8 && i == 64 THEN V270 = 1;
NEXT j;
L555:
ba[31..0] = $00000000;
V237[26..0] = $0000054;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V274 = i;
ba[31..0] = $00000000;
V237[26..0] = $0000058;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V254 = i;
FOR j = 0 TO V254-1;
V255[j] = 0;
FOR k = 0 TO 3;
PUSH j;
PUSH k;
CALL L571;
POP k;
POP j;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF V276 == 0 THEN V255[j] = V255[j] + (i<<(k*8));
NEXT k;
IF V250 == 34871 THEN V255[0] = 4194307;
IF V250 == 34871 THEN V255[1] = 2097159;
IF V250 == 34871 THEN V255[2] = 16777277;
IF V250 == 34872 THEN V255[3] = 4194307;
IF V250 == 34872 THEN V255[2] = 2097159;
IF V250 == 34872 THEN V255[1] = 16777277;
IF V250 == 34873 THEN V255[0] = 2097159;
IF V250 == 34873 THEN V255[1] = 16777277;
IF V250 == 34874 THEN V255[1] = 2097159;
IF V250 == 34874 THEN V255[0] = 16777277;
NEXT j;
IF V270 == 0 THEN GOTO L558;
FOR j = 0 TO V254-1;
V255[V254 + j] = 0;
V255[V254 + j] = V255[V254 - j -1];
NEXT j;
V254 = 2*V254;
GOTO L558;
L556:
IF (V253==32 || V253==16 )THEN GOTO L557;
PRINT "Could not read CFI string QRY/PRI";
V42 = 6;
GOTO L561;
L557:
V240 = V240 + 1;
IF V253==16 THEN V253 = 8;
IF V253==32 THEN V253 = 16;
GOTO L554;
L558:
IF V236 <= 1<<(V241+(V253/8)-1+3) THEN GOTO L559;
PRINT "Attached CFI device V30ze ", 1<<(V241+(V253/8)-1+3-20), "Mb is smaller than attached POF V30ze ",V236/1024/1024, "Mb";
V42 = 6;
GOTO L561;
L559:
IF V236 <= 1<<(V240+(V253/8)-1+3) THEN GOTO L560;
PRINT "PFL IP V30ze ", 1<<(V240+(V253/8)-1+3-20), "Mb is smaller than attached POF V30ze ", V236/1024/1024, "Mb";
V42 = 6;
L560:
IF V240 >= V241 THEN GOTO L561;
PRINT "PFL IP V30ze ", 1<<(V240+(V253/8)-1+3-20), "Mb is smaller than attached CFI device V30ze ", 1<<(V241+(V253/8)-1+3-20), "Mb";
V42 = 6;
L561:
IF (V249 != 1 || V42 == 1) THEN GOTO L562;
V235[15..0] = $00F0;
CALL L569;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $00AA;
CALL L569;
IF V253>=16 THEN V237[26..0] = $000002AA;
IF V253==8 THEN V237[26..0] = $00000555;
CALL L566;
V235[15..0] = $0055;
CALL L569;
IF V253>=16 THEN V237[26..0] = $00000555;
IF V253==8 THEN V237[26..0] = $00000AAA;
CALL L566;
V235[15..0] = $0090;
CALL L569;
V237[26..0] = $0000000;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF ((i & 255) != 32 && (i & 255) != 1) THEN V42 = 6;
IF ((i & 255) != 32 && (i & 255) != 1) THEN GOTO L562;
IF (i & 255) == 32 THEN V247 = 1;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
IF (i & 255) != 126 THEN GOTO L562;
V237[26..0] = $000001C;
CALL L564;
CALL L570;
CALL L571;
ba[V253-1..0] = V238[V253-1..0];
CALL L849;
V248 = 0;
V273 = 0;
IF ((i & 255) == 35 && V274 == 5 )THEN V248 = 1;
IF ((i & 255) == 34 && V274 == 5 )THEN V248 = 1;
IF ((i & 255) == 33 && V274 == 5 )THEN V248 = 1;
IF ((i & 255) == 12 && V274 == 5 )THEN V248 = 1;
IF ((i & 255) == 29 && V274 == 5 )THEN V248 = 1;
IF ((i & 255) == 40 && V274 == 6 )THEN V273 = 1;
IF ((i & 255) == 35 && V274 == 6 )THEN V273 = 1;
IF ((i & 255) == 34 && V274 == 6 )THEN V273 = 1;
IF ((i & 255) == 33 && V274 == 6 )THEN V273 = 1;
IF (i & 255) == 12 THEN V248 = 1;
IF (i & 255) == 16 THEN V248 = 1;
IF (i & 255) == 33 THEN V248 = 1;
IF (V248 == 0 && V273 == 0) THEN GOTO L562;
L562:
IF V247 == 0 THEN GOTO L563;
V235[15..0] = $00F0;
CALL L569;
L563:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L564 USES DEVICE_DATA, TEMP_DATA, L472, L458;
V234[4..0] = $14;
CALL L472;
A18[9..0] = $00C;
CALL L458;
IF V253 >= 16 THEN DRSCAN V240, V237[V240..1];
IF V253 == 8 THEN DRSCAN V240, V237[V240-1..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L565 USES DEVICE_DATA, TEMP_DATA, L472, L458;
V234[4..0] = $14;
CALL L472;
A18[9..0] = $00C;
CALL L458;
IF V253 == 32 THEN DRSCAN V240, V237[V240+1..2];
IF V253 == 16 THEN DRSCAN V240, V237[V240..1];
IF V253 == 8 THEN DRSCAN V240, V237[V240-1..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L566 USES DEVICE_DATA, TEMP_DATA, L472, L458;
V234[4..0] = $14;
CALL L472;
A18[9..0] = $00C;
CALL L458;
DRSCAN V240, V237[V240-1..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L567 USES DEVICE_DATA, TEMP_DATA, L472, L458;
V234[4..0] = $18;
CALL L472;
A18[9..0] = $00C;
CALL L458;
L568:
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L569 USES DEVICE_DATA, TEMP_DATA, L472, L458;
V234[4..0] = $18;
CALL L472;
A18[9..0] = $00C;
CALL L458;
A31[16..1] = V235[15..0];
A31[0] = 1;
DRSCAN V253+1, A31[V253..0];
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L570 USES DEVICE_DATA, TEMP_DATA, L472, L458;
V234[4..0] = $12;
CALL L472;
A18[9..0] = $00C;
CALL L458;
ENDPROC;
#ENDIF
#IF PFL
PROCEDURE L571 USES DEVICE_DATA, TEMP_DATA;
IF V253 == 32 THEN GOTO L572;
IF V253 == 16 THEN GOTO L573;
DRSCAN 9, A29[8..0], CAPTURE A31[8..0];
V238[7..0] = A31[8..1];
DRSCAN 9, A29[8..0], CAPTURE A31[8..0];
V238[15..8] = A31[8..1];
GOTO L574;
L572:
DRSCAN 33, A29[32..0], CAPTURE A31[32..0];
V238[31..0] = A31[32..1];
GOTO L574;
L573:
DRSCAN 17, A29[16..0], CAPTURE A31[16..0];
V238[15..0] = A31[16..1];
L574:
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L575 USES DEVICE_DATA, TEMP_DATA;
V218 = 0;
FOR i = 0 TO V1;
V2 = A105[i];
IF (((A17[i] & 32768) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0) &&
(V11 >= A7[V2])) THEN GOTO L576;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L577;
V218 = 1;
GOTO L577;
L576:
A17[i] = A17[i] | 8;
L577:
NEXT i;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L578 USES DEVICE_DATA, TEMP_DATA, L106, L649, L458, L575, L623, L682, L660;
PRINT "reading ASC device(s)...";
CALL L106;
V89 = 0;
V11 = 0;
L579:
V219[3..0] = $01;
CALL L660;
CALL L575;
IF (!V218) THEN GOTO L587;
V209 = 0;
CALL L682;
V24 = V24 + V0;
FOR i = V1 + V258 TO 0 STEP -1;
A57[i] = 0;
NEXT i;
V27 = V1 + V258;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L580;
FOR j = 0 TO 32;
A57[V27 + j] = 0;
NEXT j;
FOR j = 33 TO A5[41] - 1;
A57[V27 + j] = 1;
NEXT j;
V27 = V27 + A5[41];
L580:
NEXT i;
A57[V27] = 0;
V27 = V27 + 1;
FOR V10 = V11 TO A7[41] - 1;
V30 = V89;
V31 = V30 + (V24 - 1);
V89 = V89 + V24;
V217 = A5[41];
CALL L649;
A18[9..0] = $00C;
CALL L458;
IF (V74) THEN GOTO L582;
IF (V10 == V11) THEN GOTO L581;
DRSCAN V24 + V258, A104[(V31+V0)..(V30+V0)], COMPARE A104[V31..V30-V258], A57[(V24 + V258 - 1)..0], V40;
GOTO L583;
L581:
A45[V24 + V258 - 1..V258] = A104[V31..V30];
DRSCAN V24 + V258, A104[(V31+V0)..(V30+V0)], COMPARE A45[V24 + V258 - 1..0], A57[(V24 + V258 - 1)..0], V40;
GOTO L583;
L582:
DRSCAN V24 + V258, A104[(V31+V0)..(V30+V0)], COMPARE A30[(V24 + V258 - 1)..0], A57[(V24 + V258 - 1)..0], V40;
L583:
IF(!V40) THEN GOTO L585;
IF (V10 == A7[36] - 1) THEN
GOTO L584;
IF (V10 == A7[37] - 1) THEN
GOTO L584;
IF (V10 == A7[38] - 1) THEN
GOTO L584;
IF (V10 == A7[39] - 1) THEN
GOTO L584;
IF (V10 == A7[40] - 1) THEN
GOTO L584;
GOTO L586;
L584:
V11 = V10 + 1;
V209 = 1;
V10 = A7[41] - 1;
GOTO L586;
L585:
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
V10 = A7[41] - 1;
L586:
NEXT V10;
IF ((V209) && (V42 == 0)) THEN GOTO L579;
V209 = 0;
L587:
V219[3..0] = $01;
CALL L660;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L588 USES DEVICE_DATA, TEMP_DATA, L106, L85, L458, L602, L621, L663;
PRINT "reading ASC device(s)...";
V40 = 1;
CALL L621;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L593;
V290 = 0;
V289 = 0;
V222 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
V217 = 2100 + V290 + V289;
FOR m = 0 to (2100 + V290 + V289);
IF (m >= (V290+33) && m < (V290 + 33 + 2048)) THEN A121[m] = 1;
IF !(m >= (V290+33) && m < (V290 + 33 + 2048)) THEN A121[m] = 0;
NEXT m;
V291[12..0] = $1009;
CALL L663;
A18[9..0] = $00C;
CALL L458;
k = A115[V288 + 1 + V0] * 2048;
A119[V290+31..V290] = A123[31..0];
DRSCAN V217, A119[(V217 - 1)..0];
V291[12..0] = $1081;
CALL L663;
A18[9..0] = $00C;
CALL L458;
FOR m = 0 TO (A115[V288] - 1);
V222 = V222 + 32;
A119[V290+31..V290] = A123[V222+31..V222];
IF (!V74) THEN GOTO L589;
DRSCAN V217, A119[(V217 - 1)..0], COMPARE A121[(V217 - 1)..0], A121[(V217 - 1)..0], V40;
GOTO L590;
L589:
A120[V290+2048+33-1..V290+33] = A118[k+2048-1..k];
DRSCAN V217, A119[(V217 - 1)..0], COMPARE A120[(V217 - 1)..0], A121[(V217 - 1)..0], V40;
L590:
IF (!V40) THEN GOTO L591;
k = k + 2048;
GOTO L592;
L591:
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
m = (A115[V288] - 1);
L592:
NEXT m;
IF (!V40) THEN V288 = 0;
L593:
NEXT V288;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L594 USES DEVICE_DATA, TEMP_DATA, L106, L85, L458, L602, L621, L663;
PRINT "CRC verify ASC device(s)...";
V40 = 1;
CALL L621;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L600;
V290 = 0;
V289 = 0;
V222 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
IF (!V74) THEN GOTO L595;
FOR l = 0 TO 511;
A120[((l*16)+V290+15)..((l*16)+V290)] = $1AC7;
NEXT l;
L595:
V217 = 2100 + V290 + V289;
FOR m = 0 to (8192 + V290 + V289);
IF (m >= V290 && m < (V290 + 8192)) THEN A121[m] = 1;
IF !(m >= V290 && m < (V290 + 8192)) THEN A121[m] = 0;
NEXT m;
V291[12..0] = $1009;
CALL L663;
A18[9..0] = $00C;
CALL L458;
k = A115[V288 + 1 + V0] * 16;
l = 0;
A119[V290+31..V290] = A123[31..0];
DRSCAN V217, A119[(V217 - 1)..0];
V291[12..0] = $1081;
CALL L663;
A18[9..0] = $00C;
CALL L458;
FOR m = 0 TO (A115[V288] - 1);
l = l + 1;
V222 = V222 + 32;
A119[V290+31..V290] = A123[V222+31..V222];
DRSCAN V217, A119[(V217 - 1)..0];
IF (l != 512) THEN GOTO L599;
V291[12..0] = $1089;
CALL L663;
A18[9..0] = $00C;
CALL L458;
V217 = 8192 + V290 + V289;
IF (V74) THEN GOTO L596;
A120[V290+8192-1..V290] = A117[k+8192-1..k];
L596:
DRSCAN V217, A119[(V217 - 1)..0], COMPARE A120[(V217 - 1)..0], A121[(V217 - 1)..0], V40;
L597:
IF (!V40) THEN GOTO L598;
V217 = 2100 + V290 + V289;
V291[12..0] = $1009;
CALL L663;
A18[9..0] = $00C;
CALL L458;
k = k + 8192;
l = 0;
A119[V290+31..V290] = A123[V222+31..V222];
DRSCAN V217, A119[(V217 - 1)..0];
V291[12..0] = $1081;
CALL L663;
A18[9..0] = $00C;
CALL L458;
GOTO L599;
L598:
IF (V74) THEN V42 = 9;
IF (!V74) THEN V42 = 11;
m = (A115[V288] - 1);
L599:
NEXT m;
IF (!V40) THEN V288 = 0;
L600:
NEXT V288;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L601 USES DEVICE_DATA, TEMP_DATA, L106;
PUSH j;
PUSH i;
ba[31..0] = $00000000;
i = m * 256;
FOR j = 0 to 23;
IF (i&(1<<j))!=0 THEN ba[23-j]=1;
NEXT j;
V31 = A115[V288 + 1 + V0];
V31 = V31 + m;
V30 = V31 * 2048;
A119[V217+7..V217] = $60;
A119[V217+15..V217+8] = $00;
A119[V217+23..V217+16] = $40;
A119[V217+47..V217+24] = ba[23..0];
A119[V217+2095..V217+48] = A118[V30+2048-1..V30];
POP i;
POP j;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L602 USES DEVICE_DATA, TEMP_DATA, L106;
PUSH j;
PUSH i;
A119[V290+7..V290] = $C0;
ba[31..0] = $00000000;
i = n * 256;
FOR j = 0 to 23;
IF (i&(1<<j))!=0 THEN ba[23-j]=1;
NEXT j;
A119[V290+31..V290+8] = ba[23..0];
POP i;
POP j;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L603 USES DEVICE_DATA, TEMP_DATA, L106, L649, L458, L575, L623, L682, L650, L660;
PRINT "programming ASC device(s)...";
CALL L106;
V37 = 2000;
V89 = 0;
V11 = 0;
L604:
V219[3..0] = $01;
CALL L660;
CALL L575;
IF (!V218) THEN GOTO L608;
V209 = 0;
CALL L682;
V23 = V23 + V0;
FOR V10 = V11 TO A7[41] - 1;
V30 = V89;
V31 = V30 + (V23 - 1);
V89 = V89 + V23;
CALL L623;
V217 = A1[40];
CALL L649;
A18[9..0] = $00C;
CALL L458;
DRSCAN V23, A103[V31..V30];
CALL L650;
IF (V42 != 0) THEN GOTO L606;
IF (V10 == A7[36] - 1) THEN
GOTO L605;
IF (V10 == A7[37] - 1) THEN
GOTO L605;
IF (V10 == A7[38] - 1) THEN
GOTO L605;
IF (V10 == A7[39] - 1) THEN
GOTO L605;
IF (V10 == A7[40] - 1) THEN
GOTO L605;
GOTO L607;
L605:
V11 = V10 + 1;
V209 = 1;
L606:
V10 = A7[41] - 1;
L607:
NEXT V10;
IF (V209) THEN GOTO L604;
V209 = 0;
L608:
V219[3..0] = $01;
CALL L660;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L609 USES DEVICE_DATA, TEMP_DATA, L106, L458, L575, L625, L656, L663, L601, L621;
PRINT "programming ASC device(s)...";
V38 = 500000;
V218 = 1;
V289 = 0;
V290 = 0;
V222 = 0;
CALL L621;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN A17[V288] = A17[V288] | 8;
IF (A115[V288] == 0) THEN V284[V288] = 1;
IF (A115[V288] != 0) THEN A17[V288] = A17[V288] & ~8;
IF (A115[V288] != 0) THEN V284[V288] = 0;
NEXT V288;
V291[12..0] = $1041;
CALL L663;
A18[9..0] = $00C;
CALL L458;
V284[V0] = 0;
FOR m = 0 TO (A115[V0] - 1) STEP 1;
L610:
V218 = 0;
FOR V288 = 0 TO V1;
IF (V284[V288] == 1) THEN GOTO L611;
IF (!(m < A115[V288])) THEN GOTO L611;
V31 = A115[V288 + 1 + V0];
V31 = V31 + m;
IF (A116[V31] == 0) THEN V218 = 1;
IF (A116[V31] == 0) THEN V288 = V1;
L611:
NEXT V288;
IF (V218 == 0) THEN GOTO L618;
V217 = 0;
FOR V288 = 0 TO V1;
IF (V284[V288] == 1) THEN GOTO L614;
IF (!(m < A115[V288])) THEN GOTO L612;
IF (V218 == 0) THEN GOTO L613;
V217 = V217 + 2100;
GOTO L615;
L612:
A17[V288] = A17[V288] | 8;
V284[V288] = 1;
V218 = 0;
L613:
V217 = V217 + 2100;
GOTO L615;
L614:
A119[V217] = 0;
V217 = V217 + 1;
L615:
NEXT V288;
V284[V0] = 1;
DRSCAN V217, A122[(V217 - 1 + V222)..V222];
IF (V293 == 0) THEN GOTO L616;
V291[12..0] = $1FFF;
CALL L663;
CALL L656;
IF (V42 != 0) THEN m = A115[V0] - 1;
IF (V42 != 0) THEN GOTO L618;
V291[12..0] = $1041;
CALL L663;
A18[9..0] = $00C;
CALL L458;
GOTO L617;
L616:
WAIT V37 USEC;
L617:
IF (V218) THEN V222 = V222 + V217;
IF (V218) THEN GOTO L618;
CALL L621;
FOR V288 = 0 TO V1;
A17[V288] = A17[V288] & ~8;
IF (V284[V288] == 1) THEN A17[V288] = A17[V288] | 8;
NEXT V288;
V291[12..0] = $1041;
CALL L663;
A18[9..0] = $00C;
CALL L458;
V284[V0] = 0;
m = m - 1;
L618:
NEXT m;
IF(V284[V0] == 0) THEN GOTO L620;
DRSCAN V217, A119[(V217 - 1)..0];
IF (V293 == 0) THEN GOTO L619;
V291[12..0] = $1FFF;
CALL L663;
CALL L656;
V291[12..0] = $1041;
CALL L663;
A18[9..0] = $00C;
CALL L458;
GOTO L620;
L619:
WAIT V37 USEC;
L620:
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L621 USES DEVICE_DATA, TEMP_DATA, L106, L458, L663;
PUSH V290;
PUSH V289;
PUSH V288;
PUSH V286;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L622;
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
V217 = 8 + V290 + V289;
V291[12..0] = $1001;
CALL L663;
A18[9..0] = $00C;
CALL L458;
A31[V290+7..V290] = $A5;
DRSCAN V217, A31[(V217 - 1)..0];
V291[12..0] = $1001;
CALL L663;
A18[9..0] = $00C;
CALL L458;
A31[V290+7..V290] = $00;
DRSCAN V217, A31[(V217 - 1)..0];
L622:
NEXT V288;
POP V286;
POP V288;
POP V289;
POP V290;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L623 USES DEVICE_DATA, TEMP_DATA, L106, L649, L458;
V217 = 9;
CALL L649;
A18[9..0] = $00C;
CALL L458;
V27 = 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L624;
A31[(V27 + 7)..V27] = $60;
V27 = V27 + 9;
L624:
NEXT i;
V27 = V27 + V0 + V258;
DRSCAN V27, A31[(V27 - 1)..0];
V27 = 0;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L625 USES TEMP_DATA, L106, L458, L663;
PUSH V217;
V217 = 8 + V290 + V289;
V291[12..0] = $1001;
CALL L663;
A18[9..0] = $00C;
CALL L458;
A31[V290+7..V290] = $60;
DRSCAN V217, A31[(V217 - 1)..0];
V291[12..0] = $1010;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217, A31[(V217 - 1)..0];
POP V217;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L626 USES DEVICE_DATA, TEMP_DATA, L106, L649, L458, L623, L650, L660;
CALL L106;
PRINT "erasing ASC device(s)...";
CALL L623;
V217 = 9;
CALL L649;
A18[9..0] = $00C;
CALL L458;
V27 = 0;
V37 = 100000000;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L627;
A31[(V27 + 7)..V27] = $E3;
V27 = V27 + 9;
L627:
NEXT i;
V27 = V27 + V0 + V258;
DRSCAN V27, A31[(V27 - 1)..0];
CALL L650;
V27 = 0;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L628 USES DEVICE_DATA, TEMP_DATA, L106, L458, L625, L656, L663;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L629;
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
CALL L625;
V217 = 16 + V290 + V289;
V291[12..0] = $1100;
CALL L663;
A18[9..0] = $00C;
CALL L458;
A31[V290+7..V290] = $80;
A31[V290+15..V290+8] = $00;
DRSCAN V217, A31[(V217 - 1)..0];
V291[12..0] = $1200;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217, A31[(V217 - 1)..0];
L629:
NEXT V288;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN A17[V288] = A17[V288] | 8;
IF (A115[V288] != 0) THEN A17[V288] = A17[V288] & ~8;
NEXT V288;
WAIT 15000 USEC;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L630 USES DEVICE_DATA, TEMP_DATA, L106, L458, L625, L656, L663;
PRINT "erasing ASC device(s)...";
V38 = 120000000;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L631;
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
CALL L625;
V217 = 8 + V290 + V289;
V291[12..0] = $1001;
CALL L663;
A18[9..0] = $00C;
CALL L458;
A31[V290+7..V290] = $E3;
DRSCAN V217, A31[(V217 - 1)..0];
V291[12..0] = $1010;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217, A31[(V217 - 1)..0];
L631:
NEXT V288;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN A17[V288] = A17[V288] | 8;
IF (A115[V288] != 0) THEN A17[V288] = A17[V288] & ~8;
NEXT V288;
CALL L656;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L632 USES DEVICE_DATA, TEMP_DATA, L106, L85, L649, L458;
CALL L106;
CALL L85;
V4 = 32768;
V217 = 41;
CALL L649;
A18[9..0] = $00C;
CALL L458;
V27 = 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L633;
A31[(V27 + 7)..V27] = $D5;
V27 = V27 + 41;
L633:
NEXT i;
V27 = V27 + V0 + V258;
DRSCAN V27, A31[(V27 - 1)..0], CAPTURE A45[(V27 - 1)..0];
V27 = V1 + V258;
FOR i = V1 TO 0 STEP -1;
V2 = A105[i];
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L635;
k = 0;
FOR j = 0 TO 7;
IF (A45[V27 + 40 - j] == 1) THEN k = k + (1 << j);
NEXT j;
j = 5 * 3 * (V2 - 1);
V27 = V27 + 41;
IF(A11[j] != k) THEN GOTO L634;
PRINT "Device #", V0 - i ," Silicon ID is ", k;
A113[i] = 1;
GOTO L635;
L634:
V42 = 6;
A113[i] = 0;
L635:
NEXT i;
IF (V42 == 0) THEN GOTO L639;
V42 = 0;
V217 = 33;
CALL L649;
A18[9..0] = $00C;
CALL L458;
V27 = 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
(A113[i] == 1) ||
((A17[i] & 8) != 0)) THEN GOTO L636;
A31[(V27 + 7)..V27] = $F9;
V27 = V27 + 33;
L636:
NEXT i;
V27 = V27 + V0 + V258;
DRSCAN V27, A31[(V27 - 1)..0], CAPTURE A45[(V27 - 1)..0];
V27 = V1 + V258;
FOR i = V1 TO 0 STEP -1;
V2 = A105[i];
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
(A113[i] == 1) ||
((A17[i] & 8) != 0)) THEN GOTO L638;
k = 0;
FOR j = 0 TO 7;
IF (A45[V27 + 32 - j] == 1) THEN k = k + (1 << j);
NEXT j;
j = 5 * 3 * (V2 - 1);
V27 = V27 + 33;
IF(A11[j] != k) THEN GOTO L637;
PRINT "Device #", V0 - i ," Silicon ID is ", k;
A113[i] = 1;
GOTO L638;
L637:
V42 = 6;
i = 0;
L638:
NEXT i;
L639:
V27 = 0;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L640 USES DEVICE_DATA, TEMP_DATA, L106, L85, L458, L663;
CALL L106;
CALL L85;
V4 = 32768;
V294 = 0;
V295 = 0;
FOR i = 0 TO 99;
V296[i] = 0;
NEXT i;
V37 = 2000;
FOR V288 = V1 TO 0 STEP -1;
IF (A115[V288] == 0) THEN GOTO L643;
V2 = A105[V288];
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
V217 = 40 + V290 + V289;
V222 = 33 + V290;
A31[(V290 + 7)..V290] = $D5;
V291[12..0] = $1002;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217, A31[(V217-1)..0];
V291[12..0] = $1020;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217+1, A31[V217..0], CAPTURE A45[V217..0];
k = 0;
FOR j = 0 to 7;
IF (A45[V222 + 7 - j] == 1) THEN k = k + (1 << j);
NEXT j;
j = 5 * 3 * (V2 - 1);
IF (A11[j] == k) THEN PRINT "Device #", V287 + 1, " Silicon ID is ", k;
IF (A11[j] == k) THEN GOTO L643;
V217 = 32 + V290 + V289;
A31[(V290 + 7)..V290] = $F9;
V291[12..0] = $1400;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217, A31[(V217-1)..0];
V291[12..0] = $1800;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217+1, A31[V217..0], CAPTURE A45[V217..0];
V222 = 25 + V290;
k = 0;
FOR j = 0 to 7;
IF (A45[V222 + 7 - j] == 1) THEN k = k + (1 << j);
NEXT j;
j = 5 * 3 * (V2 - 1);
IF (A11[j] == k && k == 24) THEN PRINT "Device #", V287 + 1, " Silicon ID is ", k;
IF (A11[j] == k && k == 24) THEN V37 = 3000;
IF (A11[j] == k && k == 24) THEN GOTO L643;
V222 = 9 + V290;
k = 0;
FOR j = 0 to 7;
IF (A45[V222 + 7 - j] == 1) THEN k = k + (1 << j);
NEXT j;
IF (k == 31) THEN GOTO L641;
IF (k == 32) THEN GOTO L642;
V42 = 6;
GOTO L643;
L641:
V222 = 17 + V290;
k = 0;
FOR j = 0 to 7;
IF (A45[V222 + 7 - j] == 1) THEN k = k + (1 << j);
NEXT j;
IF (k != 102 && k != 68 && k !=69 && k != 70) THEN V42 = 6;
IF (k != 102 && k != 68 && k !=69 && k != 70) THEN PRINT "Device #", V287 + 1, " from ATMEL is not supported";
IF (k != 102 && k != 68 && k !=69 && k != 70) THEN GOTO L643;
j = 5 * 3 * (V2 - 1);
IF (A11[j] != 18 && A11[j] != 20) THEN V42 = 6;
IF (A11[j] != 18 && A11[j] != 20) THEN PRINT "Failure at Device #", V287 + 1, " : Only 4Mb/8Mb/16Mb Serial Flash devices are supported for Atmel device";
IF (A11[j] != 18 && A11[j] != 20) THEN GOTO L643;
IF (k == 68 || k == 102) THEN m = 18;
IF (k == 69 || k == 70) THEN m = 20;
IF (A11[j] != m) THEN V42 = 6;
IF (A11[j] != m && A11[j] == 18) THEN PRINT "Expected Atmel Flash Device ID is 68 or 102 but read Device ID is ", k, " at device #", V287 + 1;
IF (A11[j] != m && A11[j] == 20) THEN PRINT "Expected Atmel Flash Device ID is 69 or 70 but read Device ID is ", k, " at device #", V287 + 1;
IF (A11[j] != m) THEN GOTO L643;
IF (k == 69) THEN PRINT "Device #", V287 + 1, " Device ID is ", k, " (Atmel 8Mb Serial Flash Device)";
IF (k != 69) THEN PRINT "Device #", V287 + 1, " Device ID is ", k, " (Atmel Serial Flash Device)";
V294 = 1;
IF (k == 69 && A115[V288] != 4096) THEN PRINT "Device #", V287 + 1, " is 8Mb Serial Flash device but attached program data is 16Mb";
IF (k == 69 && A115[V288] != 4096) THEN V42 = 6;
IF (k == 69 && A115[V288] != 4096) THEN GOTO L643;
IF (k == 69) THEN V296[V288] = 1;
IF (k == 102) THEN V295 = 1;
GOTO L643;
L642:
V222 = 25 + V290;
k = 0;
FOR j = 0 to 7;
IF (A45[V222 + 7 - j] == 1) THEN k = k + (1 << j);
NEXT j;
IF (k != 19 && k != 20 && k !=21) THEN V42 = 6;
IF (k != 19 && k != 20 && k !=21) THEN PRINT "Device #", V287 + 1, " from ST Micro is not supported";
IF (k != 19 && k != 20 && k !=21) THEN GOTO L643;
j = 5 * 3 * (V2 - 1);
IF (A11[j] != 18 && A11[j] != 20) THEN V42 = 6;
IF (A11[j] != 18 && A11[j] != 20) THEN PRINT "Failure at Device #", V287 + 1, " : Only 4Mb/8Mb/16Mb Serial Flash devices are supported for ST Micro device";
IF (A11[j] != 18 && A11[j] != 20) THEN GOTO L643;
IF (k == 19) THEN m = 18;
IF (k == 20 || k == 21) THEN m = 20;
IF (A11[j] != m) THEN V42 = 6;
IF (A11[j] != m && A11[j] == 18) THEN PRINT "Expected ST Micro Flash Device ID is 19 but read Device ID is ", k, " at device #", V287 + 1;
IF (A11[j] != m && A11[j] == 20) THEN PRINT "Expected ST Micro Flash Device ID is 20 or 21 but read Device ID is ", k, " at device #", V287 + 1;
IF (A11[j] != m) THEN GOTO L643;
IF (k == 20) THEN PRINT "Device #", V287 + 1, " Device ID is ", k, " (ST Micro 8Mb Serial Flash Device)";
IF (k == 20) THEN V296[V288] = 1;
IF (k == 20 && A115[V288] != 4096) THEN PRINT "Device #", V287 + 1, " is 8Mb Serial Flash device but attached program data is 16Mb";
IF (k == 20 && A115[V288] != 4096) THEN V42 = 6;
IF (k == 20 && A115[V288] != 4096) THEN GOTO L643;
IF (k != 20) THEN PRINT "Device #", V287 + 1, " Device ID is ", k, " (ST Micro Serial Flash Device)";
L643:
NEXT V288;
IF (V295) THEN V37 = 8200;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L644 USES DEVICE_DATA, TEMP_DATA, L660, L458;
V219[3..0] = $04;
IF (V215) THEN V219[3..0] = $02;
CALL L660;
A18[9..0] = $00C;
CALL L458;
V27 = 0;
V222 = 0;
FOR i = 0 TO V1;
V222 = 0;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L647;
IF (i == V1) THEN GOTO L646;
FOR j = V1 TO (i + 1) STEP -1;
IF (((A17[j] & 32768) == 0) ||
((A17[j] & 4) == 0) ||
((A17[j] & 8) != 0)) THEN GOTO L645;
V222 = V222 + V217;
L645:
NEXT j;
L646:
IF(!V215) THEN V222 = V222 + V217 - 1;
V222 = V222 + V258;
FOR k = 0 TO 26;
b = 0;
IF (((V222 + V1 - i) & (1 << k)) != 0) THEN b = 1;
A31[V27] = b;
V27 = V27 + 1;
NEXT k;
GOTO L648;
L647:
A31[V27] = 0;
V27 = V27 + 1;
L648:
NEXT i;
DRSCAN V27, A31[(V27 - 1)..0];
V27 = 0;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L649 USES DEVICE_DATA, TEMP_DATA, L660, L644;
V215 = 1;
CALL L644;
V215 = 0;
CALL L644;
V219[3..0] = $08;
CALL L660;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L650 USES DEVICE_DATA, TEMP_DATA, L660, L649, L458;
j = 0;
V217 = 17;
L651:
CALL L649;
A18[9..0] = $00C;
CALL L458;
V27 = 0;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L652;
A31[(V27 + 7)..V27] = $A0;
V27 = V27 + 17;
L652:
NEXT i;
V27 = V27 + V0 + V258;
WAIT 400 USEC;
DRSCAN V27, A31[(V27 - 1)..0], CAPTURE A45[(V27 - 1)..0];
j = j + 1;
b = 0;
V27 = V1 + V258;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L654;
IF (A45[V27 + 17 - 1] == 1) THEN GOTO L653;
V27 = V27 + 17;
GOTO L654;
L653:
i = 0;
b = 1;
L654:
NEXT i;
IF (b == 0) THEN GOTO L655;
IF (j >= V37/400) THEN GOTO L655;
GOTO L651;
L655:
IF (b == 1) THEN V42 = 14;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L656 USES DEVICE_DATA, TEMP_DATA, L663, L458;
PUSH V217;
PUSH j;
j = 0;
FOR V288 = V1 TO 0 STEP -1;
IF ((A17[V288] & 8) != 0) THEN A121[V288] = 1;
IF ((A17[V288] & 8) != 0) THEN A121[V0 + V288] = 1;
IF ((A17[V288] & 8) == 0) THEN A121[V288] = 0;
IF ((A17[V288] & 8) == 0) THEN A121[V0 + V288] = 0;
NEXT V288;
L657:
WAIT 400 USEC;
FOR V288 = V1 TO 0 STEP -1;
IF (A121[V288] == 1) THEN GOTO L658;
V290 = 0;
V289 = 0;
FOR V286 = V1 TO 0 STEP -1;
IF (V286 != V288) THEN A17[V286] = A17[V286] | 8;
IF (V286 == V288) THEN A17[V286] = A17[V286] & ~8;
NEXT V286;
V287 = V1 - V288;
V289 = V287;
V290 = V288;
V217 = 16 + V290 + V289;
V291[12..0] = $1100;
CALL L663;
A18[9..0] = $00C;
CALL L458;
A31[V290+7..V290] = $A0;
DRSCAN V217, A31[(V217 - 1)..0];
V291[12..0] = $1200;
CALL L663;
A18[9..0] = $00C;
CALL L458;
DRSCAN V217+1, A31[V217..0], CAPTURE A45[V217..0];
IF(A45[16 + V290] == 0) THEN A121[V288] = 1;
L658:
NEXT V288;
V286 = 0;
FOR V288 = V1 TO 0 STEP -1;
IF (A121[V288] == 1) THEN V286 = V286 + 1;
NEXT V288;
IF(V286 == V0) THEN GOTO L659;
j = j + 1;
IF(j >= V38/400) THEN PRINT "Fail Enhanced Status Polling";
IF(j >= V38/400) THEN V42 = 14;
IF(j >= V38/400) THEN GOTO L659;
GOTO L657;
L659:
FOR V288 = V1 TO 0 STEP -1;
IF (A121[V0 + V288] == 1) THEN A17[V288] = A17[V288] | 8;
IF (A121[V0 + V288] == 0) THEN A17[V288] = A17[V288] & ~8;
NEXT V288;
POP j;
POP V217;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L660 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $00E;
CALL L458;
V27 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 32768) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L661;
A32[V27 + 3..V27] = V219[3..0];
V27 = V27 + 4;
A32[V27] = 1;
GOTO L662;
L661:
A32[V27] = 0;
L662:
V27 = V27 + 1;
NEXT i;
DRSCAN V27, A32[(V27 - 1)..0];
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE L663 USES DEVICE_DATA, TEMP_DATA, L458;
PUSH V217;
PUSH n;
A18[9..0] = $00E;
CALL L458;
V217 = 0;
FOR i = 0 to V1;
IF ((A17[i] & 8) != 0) THEN A32[V217] = 0;
IF ((A17[i] & 8) != 0) THEN V217 = V217 + 1;
IF ((A17[i] & 8) == 0) THEN A32[V217+12..V217] = V291[12..0];
IF ((A17[i] & 8) == 0) THEN V217 = V217 + 13;
NEXT i;
DRSCAN V217, A32[V217-1..0];
POP n;
POP V217;
ENDPROC;
#ENDIF
#IF SFL
PROCEDURE SFL_PREPAD_ONE USES TEMP_DATA;
V258 = V258 + 1;
ENDPROC;
PROCEDURE SFL_PREPAD_TWO USES TEMP_DATA;
V258 = V258 + 2;
ENDPROC;
PROCEDURE SFL_PREPAD_FOUR USES TEMP_DATA;
V258 = V258 + 4;
ENDPROC;
PROCEDURE SFL_PREPAD_EIGHT USES TEMP_DATA;
V258 = V258 + 8;
ENDPROC;
PROCEDURE SFL_PREPAD_SIXTEEN USES TEMP_DATA;
V258 = V258 + 16;
ENDPROC;
PROCEDURE DO_STANDARD_VERIFY_EPCS USES TEMP_DATA;
V280 = 1;
ENDPROC;
PROCEDURE DO_EPCS_STATUS_POLLING USES TEMP_DATA;
V293 = 1;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L671 USES DEVICE_DATA, TEMP_DATA, L458;
IF (!V146) THEN GOTO L672;
A18[9..0] = $065;
CALL L458;
WAIT 1000 USEC;
L672:
A18[9..0] = $044;
V91 = (V38 != 0);
CALL L458;
V91 = 0;
IF (V38 == 0) THEN GOTO L675;
k = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L673;
A31[k] = 0;
A57[k] = 1;
IF (V182) THEN A29[k] = 1;
k = k + 1;
A31[k] = 1;
A57[k] = 1;
L673:
k = k + 1;
NEXT i;
DRSCAN k, A29[(k - 1)..0], COMPARE A31[(k - 1)..0],
A57[(k - 1)..0], V40;
IF (!V40) THEN V42 = 10;
k = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L674;
IF (V182) THEN A29[k] = 0;
k = k + 1;
L674:
k = k + 1;
NEXT i;
L675:
WAIT 1000 USEC;
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L676 USES DEVICE_DATA, TEMP_DATA, L458;
A18[9..0] = $03E;
CALL L458;
WAIT 20 USEC;
j = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L677;
j = j + 2;
L677:
j = j + 1;
NEXT i;
DRSCAN j, A30[(j - 1)..0], COMPARE A29[(j - 1)..0],
A30[(j - 1)..0], V40;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L678 USES DEVICE_DATA, TEMP_DATA;
j = 0;
V40 = 1;
V39 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L679;
A29[j] = 1;
A28[j] = 0;
j = j + 1;
A29[j] = 1;
A28[j] = 1;
j = j + V175 - 2;
L679:
j = j + 1;
NEXT i;
DRSTOP DRPAUSE;
DRSCAN j, A30[(j - 1)..0], CAPTURE A28[(j - 1)..0];
DRSTOP IDLE;
j = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L680;
IF ((A28[j + 1] != 1) || (A28[j] != 0)) THEN V40 = 0;
IF (((A17[i] & 4096) != 0) &&
((A28[j + 1] != 1) || (A28[j] != 0))) THEN V39 = 1;
A29[j] = 0;
j = j + 1;
A29[j] = 0;
j = j + V175 - 2;
L680:
j = j + 1;
NEXT i;
ENDPROC;
#ENDIF
#IF EPC || EPV
PROCEDURE L681 USES DEVICE_DATA, TEMP_DATA
#IF EPC
, L676
#ENDIF
#IF EPV
, L678
#ENDIF
;
j = V38 / 10;
IF (j < 1) THEN j = 1;
FOR i = 0 TO j - 1;
PUSH i; PUSH j;
#IF EPC
IF (V4 == 512) THEN WAIT IDLE, 10000 USEC, IDLE;
IF (V4 == 512) THEN CALL L676;
#ENDIF
#IF EPV
IF (V4 == 2048) THEN CALL L678;
IF (!V40 && (V4 == 2048)) THEN
WAIT DRPAUSE, 10000 USEC, DRPAUSE;
#ENDIF
POP j; POP i;
IF (V40) THEN i = j - 1;
NEXT i;
#IF EPV
IF (V39) THEN V40 = 1;
#ENDIF
ENDPROC;
#ENDIF
PROCEDURE L682 USES DEVICE_DATA, TEMP_DATA;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF(V216) THEN V25 = 0;
IF(V216) THEN V26 = 0;
IF (((A17[i] & V4) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L683;
V2 = A12[i];
IF(V216) THEN V2 = A105[i];
V25 = A1[V2];
V26 = A5[V2];
GOTO L684;
L683:
IF (V74 && !V216) THEN A30[V24] = 0;
L684:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
#IF MAX9000
PROCEDURE L685 USES DEVICE_DATA, TEMP_DATA, L688, L689, L690, L691;
V23 = 0;
V24 = 0;
FOR i = 0 TO (V19 - 1);
A30[i] = 1;
NEXT i;
FOR i = 0 TO V1;
V25 = 1;
V26 = 1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L686;
V2 = A12[i];
IF (((V10 >= 1035) && (V10 <= 1197)) ||
(V10 == 0)) THEN
CALL L688;
IF ((V10 >= 2069) && (V10 <= 2074)) THEN
CALL L689;
IF (((V10 >= 4097) && (V10 <= 4114)) ||
((V10 >= 4869) && (V10 <= 4886))) THEN
CALL L690;
IF (((V10 >= 8192) && (V10 <= 8210)) ||
((V10 >= 8965) && (V10 <= 8982))) THEN
CALL L691;
GOTO L687;
L686:
IF (V74) THEN A30[V24] = 0;
L687:
V23 = V23 + V25;
V24 = V24 + V26;
NEXT i;
V49 = 0;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L688 USES DEVICE_DATA, TEMP_DATA;
V25 = A1[V2];
V26 = A5[V2];
ENDPROC;
PROCEDURE L689 USES DEVICE_DATA, TEMP_DATA;
V25 = A2[V2];
V26 = V25;
ENDPROC;
PROCEDURE L690 USES DEVICE_DATA, TEMP_DATA;
V25 = A3[V2];
V26 = V25;
ENDPROC;
PROCEDURE L691 USES DEVICE_DATA, TEMP_DATA;
V25 = A4[V2];
V26 = V25;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L692 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
k = j;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L693;
V2 = A12[i];
k = k + (A5[V2] - 1);
IF (V10 != A9[3 * (V2 - 1)]) THEN
GOTO L693;
V27 = (16 * (A6[V2] -
A9[(3 * (V2 - 1)) + 2])) -
A9[(3 * (V2 - 1)) + 1] - 1;
IF (V43) THEN A29[V27 + j] = b;
IF (V44) THEN A30[V27 + j] = b;
L693:
j = k + 1;
NEXT i;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L694 USES DEVICE_DATA, TEMP_DATA;
j = 317;
IF (V51 == -1) THEN V51 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L695;
V2 = A12[i];
IF (V51 >= A9[3 * (V2 - 1)]) THEN
GOTO L695;
IF (j > (A9[3 * (V2 - 1)] - V51)) THEN
j = A9[3 * (V2 - 1)] - V51;
L695:
NEXT i;
IF (j != 317) THEN V51 = V51 + j;
IF (j == 317) THEN V51 = -1;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L696 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
k = j;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L697;
V2 = A12[i];
k = k + (A5[V2] - 1);
V27 = (16 * (A6[V2] -
A10[(2 * (V2 - 1)) + 1])) -
A10[2 * (V2 - 1)] - 1;
A30[V27 + j] = b;
L697:
j = k + 1;
NEXT i;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L698 USES DEVICE_DATA, TEMP_DATA;
j = 0;
l = 0;
IF (V75) THEN l = 1;
FOR i = 0 TO V1;
k = j;
IF (((A17[i] & 256) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L699;
V2 = A12[i];
k = k + (A5[V2] - 1);
V27 = (80 * (A6[V2] >> 1)) + A52[i] -
A51[V2 - 13] - 1 + l;
IF (V75 && ((V2 == 13) || (V2 == 19) || (V2 == 23))) THEN V27 = V27 - 2;
A30[V27 + j] = b;
L699:
j = k + 1;
NEXT i;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L700 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L701;
V2 = A12[i];
j = j + (A3[V2] - 1);
FOR V27 = 27 TO 31;
A30[j - V27] = b;
NEXT V27;
L701:
j = j + 1;
NEXT i;
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L702 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 to (V23 - 1);
A31[i] = A53[i];
NEXT i;
FOR i = 0 TO V1;
k = 1;
IF (((A17[i] & 512) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L703;
V2 = A12[i];
k = A1[V2];
A31[j + 30] = b;
L703:
j = j + k;
NEXT i;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L704 USES DEVICE_DATA, TEMP_DATA, L393, L458;
IF (V27 == 0) THEN GOTO L705;
PUSH V27;
V11 = 32768;
CALL L393;
A18[9..0] = $1A6;
CALL L458;
DRSCAN V24, A30[(V24 - 1)..0], CAPTURE A31[(V24 - 1)..0];
POP V27;
GOTO L706;
L705:
FOR i = 0 to (V24 - 1);
A31[i] = A63[V89 + i];
NEXT i;
L706:
j = 0;
FOR i = 0 TO V1;
A31[j] = 0;
k = 1;
IF (((A17[i] & 2048) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L707;
V2 = A12[i];
FOR k = 2 TO (A1[V2] + 1);
A31[j + k - V27] = A31[j + k];
IF (k == 15) THEN A31[j + 15 - V27] = b;
NEXT k;
k = A1[V2] + 2;
IF (V27 != 0) THEN V27 = V27 + 2;
L707:
j = j + k;
NEXT i;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L708 USES DEVICE_DATA, TEMP_DATA;
j = 0;
FOR i = 0 to (4*V23 - 1);
A31[i] = A99[i];
NEXT i;
FOR l = 0 TO 3;
FOR i = 0 TO V1;
k = 1;
IF (((A17[i] & 16384) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L711;
V2 = A12[i];
k = A1[V2];
IF((A101[V2 - 32]/k) != l) THEN GOTO L709;
A31[j + (k - 1 - (A101[V2 - 32] % k))] = V207;
L709:
IF((A102[V2 - 32]/k) != l) THEN GOTO L710;
A31[j + (k - 1 - (A102[V2 - 32] % k))] = V208;
L710:
IF((A107[V2 - 32]/k) != l) THEN GOTO L711;
A31[j + (k - 1 - (A107[V2 - 32] % k))] = V208;
L711:
j = j + k;
NEXT i;
NEXT l;
ENDPROC;
#ENDIF
#IF MAX7000
PROCEDURE L712 USES DEVICE_DATA, TEMP_DATA;
j = 317;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 0) ||
((A17[i] & 4) == 0)) THEN GOTO L713;
V2 = A12[i];
IF (V52 >= (A0[V2] - 108)) THEN
GOTO L713;
IF (j > A0[V2]) THEN j = A0[V2];
L713:
NEXT i;
IF (j != 317) THEN V52 = j - 108;
IF (j == 317) THEN V52 = -1;
ENDPROC;
#ENDIF
#IF EPV
PROCEDURE L714 USES DEVICE_DATA, TEMP_DATA;
FOR i = 0 TO V1;
V2 = A12[i];
IF (((A17[i] & 2048) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0) &&
(V11 >= (A7[V2] * 65536))) THEN
A17[i] = A17[i] | 8;
NEXT i;
ENDPROC;
#ENDIF
#IF MAXII
PROCEDURE L715 USES DEVICE_DATA, TEMP_DATA;
V205 = 0;
FOR i = 0 TO V1;
V2 = A12[i];
IF (((A17[i] & 16384) != 0) &&
((A17[i] & 4) != 0) &&
((A17[i] & 8) == 0) &&
(V11 >= A7[V2])) THEN GOTO L716;
IF (((A17[i] & 16384) == 0) ||
((A17[i] & 4) == 0) ||
((A17[i] & 8) != 0)) THEN GOTO L717;
V205 = 1;
GOTO L717;
L716:
A17[i] = A17[i] | 8;
L717:
NEXT i;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L718 USES DEVICE_DATA, TEMP_DATA;
INTEGER V93 = V48;
IF ((V2 != 16) && (V2 != 18) && (V2 != 22) && (V2 != 26) && (V2 != 27) && (V2 != 31)) THEN GOTO L719;
V93 = V93 >> 1;
IF (((V48 & 3) % 3) != 0) THEN
V93 = V93 | (A6[V2] >> 2);
L719:
V48 = V93;
ENDPROC;
#ENDIF
#IF CHECKSUM
#IF MAX7000
PROCEDURE L720 USES DEVICE_DATA, TEMP_DATA, L106, L107, L682, L712, L694, L848, L723, L746;
CALL L106;
V113 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 1) == 1) && ((A17[i] & 4) == 4)) THEN V113 = V113 + 1;
NEXT i;
IF (V113 > 1) THEN PRINT "Multi-device checksum is not currently supported for MAX7000S devices";
IF (V113 > 1) THEN GOTO L722;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 1) == 0) || ((A17[i] & 4) == 0)) THEN GOTO L721;
V2 = A12[i];
V113 = i;
V112 = 0;
V110 = 1;
PUSH i;
CALL L106;
CALL L682;
V29 = 1;
V34 = 1;
CALL L712;
CALL L694;
POP i;
V156 = A12[i];
V46 = A6[V156];
V155 = i;
PUSH i;
PRINT "Reading checksum for device #", V0 - i,"...";
CALL L723;
POP i;
PUSH i;
CALL L848;
V110 = 0;
CALL L107;
POP i;
L721:
NEXT i;
V110 = 0;
L722:
ENDPROC;
PROCEDURE L723 USES DEVICE_DATA, TEMP_DATA, L737, L724, L744, L740, L744, L743, L725;
CALL L737;
V112 = 0;
V45 = 0;
V34 = 1;
V29 = 1;
CALL L724;
V170 = 89;
V169 = 13;
V172 = 0;
FOR i = 0 TO 15;
A69[i] = 1;
NEXT i;
V150 = 16;
CALL L744;
V170 = 102;
V169 = 6;
V172 = A70[V156] % 8;
CALL L740;
CALL L744;
CALL L743;
CALL L725;
V112 = V112 + A79[V156];
ENDPROC;
PROCEDURE L724 USES DEVICE_DATA, TEMP_DATA, L385, L317;
FOR V11 = 1 TO 88;
CALL L385;
CALL L317;
i = V155;
FOR k = 0 to (5*2-1);
FOR j = 0 TO (A5[V156]-1);
IF (A31[i]) THEN
V112 = V112 + A65[ (V11 - 1) % 8 ];
i = i + 1;
NEXT j;
i = i + V1;
NEXT k;
NEXT V11;
ENDPROC;
PROCEDURE L725 USES DEVICE_DATA, TEMP_DATA, L385, L317;
INTEGER A91;
INTEGER A90;
INTEGER V171;
INTEGER V165;
INTEGER q;
INTEGER r;
A90 = A89[V156*2];
A91 = A89[V156*2+1];
V171 = (A70[V156] + V46 * 6 * V162) % 8;
k = 0;
FOR i = 0 TO 15;
A69[i] = 0;
IF (A88[k] == i) THEN A69[i] = 1;
IF (A88[k] == i) THEN k = k + 1;
NEXT i;
V150 = k;
V169 = A86[V156];
V172 = (V46 * 88 * 80 + V46 * 13 * 16) % 8;
FOR m = 0 TO 3;
p = 0;
n = m * V149;
FOR o = 1 TO V149;
V11 = A68[n] + 108;
CALL L385;
CALL L317;
i = 0;
FOR j = 0 TO (V46 - 1);
V168 = 0;
FOR l = 15 TO 0 STEP -1;
IF (o > V169) THEN GOTO L726;
IF (!A69[l]) THEN GOTO L726;
IF (A31[i+V155]) THEN
V112 = V112 + A65[ (V168 * V169 + m * V150 * V169 + p + A85[j] * V169 * V150 * 4 + V172 ) % 8 ];
V168 = V168 + 1;
L726:
IF (l != 1) THEN GOTO L735;
IF (A85[j] == A90) THEN GOTO L732;
IF (A85[j] != A91) THEN GOTO L736;
IF (V11 > (108+28)) THEN GOTO L730;
FOR r = 0 TO 10;
q = r;
IF (V156 == 1) THEN GOTO L727;
IF (V156 == 2) THEN GOTO L728;
IF (V11 == (A80[r]+108)) THEN r = 12;
GOTO L729;
L727:
IF (V11 == (A82[r]+108)) THEN r = 12;
GOTO L729;
L728:
IF (V11 == (A81[r]+108)) THEN r = 12;
L729:
NEXT r;
IF (r < 12) THEN GOTO L730;
IF (A31[i+V155]) THEN
V112 = V112 + A65[(V171 + q) % 8];
L730:
IF (m == 0) THEN GOTO L731;
IF (m != 1) THEN GOTO L736;
L731:
IF (A31[i+V155]) THEN
V112 = V112 + A65[(V172 + V46 * V169 * V150 * 4 + (m * 2 + 2) * V149 + p) % 8];
GOTO L736;
L732:
IF (m == 0) THEN GOTO L733;
IF (m != 1) THEN GOTO L734;
L733:
IF (A31[i+V155]) THEN
V112 = V112 + A65[(V172 + V46 * V169 * V150 * 4 + (m * 2 + 1) * V149 + p) % 8];
GOTO L736;
L734:
IF (A31[i+V155]) THEN
V112 = V112 + A65[(V172 + V46 * V169 * V150 * 4 + (m - 2) * 5 * V149 + p) % 8];
GOTO L736;
L735:
IF (l != 3) THEN GOTO L736;
IF (A85[j] != A91) THEN GOTO L736;
V165 = 6 + 108;
IF (V156 <= 2) THEN V165 = 1 + 108;
IF (!((V11 >= V165) && (V11 < (V165+16)))) THEN GOTO L736;
IF (A31[i+V155]) THEN
V112 = V112 + A65[((V171 + 11 + (V11 - V165)) % 8)];
L736:
i = i + 1;
IF ( i == A5[V156] ) THEN i = i + V1;
NEXT l;
NEXT j;
p = p + 1;
n = n + 1;
NEXT o;
NEXT m;
ENDPROC;
PROCEDURE L737 USES TEMP_DATA;
IF( V156 != 7 ) THEN GOTO L738;
FOR i = 0 TO (V46-1);
A85[i] = A84[i];
NEXT i;
GOTO EL742Get;
L738:
k = V46 / 2;
i = 0;
FOR j = 0 TO ( k - 1 );
A85[j] = i;
i = i + 1;
NEXT j;
FOR j = ( V46 - 1 ) TO k STEP -1;
A85[j] = i;
i = i + 1;
NEXT j;
EL742Get:
ENDPROC;
PROCEDURE L740 USES TEMP_DATA;
j = 0;
FOR i = 0 TO 7;
IF ( i == V156 ) THEN GOTO L741;
j = j + A87[j] + 1;
GOTO L742;
L741:
i = 7;
L742:
NEXT i;
V150 = A87[j];
V162 = V150;
j = j + 1;
FOR i = 0 TO 15;
A69[i] = 0;
IF (A87[j] == i) THEN A69[i] = 1;
IF (A87[j] == i) THEN j = j + 1;
NEXT i;
ENDPROC;
PROCEDURE L743 USES TEMP_DATA;
INTEGER V161;
i = A0[V156] - 2 * 108 - 1;
V149 = i / 4;
n = 0;
V161 = 1;
FOR k = 0 TO 3;
IF (k == 0) THEN l = i - V149 + 2;
IF (k == 1) THEN l = i - V149 * 2 + 1;
IF (k == 2) THEN l = i - V149 * 2;
IF (k == 3) THEN l = i - V149 * 3 - 1;
IF (k >= 2) THEN V161 = -1;
FOR j = 0 TO (V149 - 2);
A68[n] = l;
l = l + V161;
n = n + 1;
NEXT j;
A68[n] = l;
IF (k == 0) THEN A68[n] = i - V149 + 1;
IF (k == 3) THEN A68[n] = i - V149 * 3;
n = n + 1;
NEXT k;
ENDPROC;
PROCEDURE L744 USES DEVICE_DATA, TEMP_DATA, L385, L317;
FOR V11 = V170 TO (V170 + V169 - 1);
CALL L385;
CALL L317;
i = 0;
FOR j = 0 TO (V46 - 1);
V168 = V150 - 1;
FOR l = 15 TO 0 STEP -1;
IF (!A69[l]) THEN GOTO L745;
IF (A31[i+V155]) THEN
V112 = V112 + A65[ (V168 * V169 + V11 - V170 + A85[j] * V169 * V150 + V172 ) % 8 ];
V168 = V168 - 1;
L745:
i = i + 1;
IF ( i == A5[V156] ) THEN i = i + V1;
NEXT l;
NEXT j;
NEXT V11;
ENDPROC;
PROCEDURE L746 USES TEMP_DATA, DEVICE_DATA;
j = 0;
V21 = 0;
FOR i = 0 TO V1;
IF ((A17[i] & 4) == 0) THEN GOTO L747;
V2 = A12[i];
FOR k = 0 TO (A1[V2] - 1);
A26[j] = 0;
IF ((k % 5) == 4) THEN A26[j] = 1;
j = j + 1;
NEXT k;
V21 = V21 + A1[V2];
GOTO L748;
L747:
V21 = V21 + 1;
A26[j] = 0;
j = j + 1;
L748:
NEXT i;
A26[j] = 0;
ENDPROC;
#ENDIF
#IF MAX7000AE
PROCEDURE L749 USES TEMP_DATA, DEVICE_DATA, L752, L848, L106, L682, L107, L797;
CALL L106;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 256) == 0) || ((A17[i] & 4) == 0)) THEN GOTO L751;
IF (((A12[i] >=13) && (A12[i] <=16)) || A12[i] >= 23) THEN GOTO L750;
GOTO L751;
L750:
IF (A12[i] >= 13) THEN V167 = 13;
IF (A12[i] >= 19) THEN V167 = 19;
IF (A12[i] >= 23) THEN V167 = 23;
V110 = 1;
V113 = i;
V2 = A12[i];
PUSH i;
CALL L106;
CALL L682;
POP i;
V156 = A12[i];
V46 = A6[V156];
V155 = i;
PUSH i;
PRINT "Reading checksum for device #", V0 - i,"...";
CALL L752;
POP i;
CALL L848;
V110 = 0;
PUSH i;
CALL L107;
POP i;
L751:
NEXT i;
CALL L797;
ENDPROC;
PROCEDURE L752 USES DEVICE_DATA, TEMP_DATA, L389, L458, L334, L753, L794, L791;
V11 = 2;
CALL L389;
A18[9..0] = $016;
CALL L458;
V45 = 0;
V34 = 1;
V29 = 1;
V112 = 0;
CALL L794;
CALL L791;
FOR V10 = 2 TO V96;
CALL L334;
CALL L753;
NEXT V10;
ENDPROC;
PROCEDURE L753 USES TEMP_DATA, L790, L775, L772, L767, L762,
L763, L764, L766,
L757, L758, L759, L760, L761;
IF ((V10 >= 2) && (V10 < (2+88))) THEN CALL L790;
FOR V147 = 0 TO ((41+3)*4-1);
IF (A68[V147] == V10) THEN CALL L775;
IF (A68[V147] == 255) THEN V147 = (41+3)*4;
NEXT V147;
IF ((V10 >= 90) && (V10 <= 92)) THEN CALL L772;
IF ((V10 == 93) || (V10 == 94)) THEN CALL L767;
IF ((V10 == 95) && (V156 >= 23)) THEN CALL L767;
IF (V156 < 23) THEN GOTO L754;
IF ((V10>=7) && (V10<(7+8))) THEN CALL L757;
IF ((V10>=5) && (V10<(5+2))) THEN CALL L758;
IF ((V10>=2) && (V10<(2+3))) THEN CALL L759;
IF ((V10==16) && (V156 != 23)) THEN CALL L760;
IF ((V10==15) && (V156 == 23)) THEN CALL L760;
IF ((V10>=2) && (V10<(2+32))) THEN CALL L761;
GOTO EL742Array;
L754:
IF ((V10 >= 2) && (V10 < (2+3))) THEN CALL L762;
IF (V10 == 6) THEN CALL L763;
IF (V156 != 13) THEN GOTO L755;
IF ((V10 >= 2) && (V10 < (2+16))) THEN CALL L766;
GOTO EL742Array;
L755:
IF ((V10 >= 2) && (V10 < (2+32))) THEN CALL L764;
EL742Array:
ENDPROC;
PROCEDURE L757 USES TEMP_DATA, L765;
i = A73[(V156-13)*2];
j = A74[V156-13];
k = 7;
CALL L765;
ENDPROC;
PROCEDURE L758 USES TEMP_DATA, L765;
i = A73[(V156-13)*2];
j = A74[V156-13];
j = (j+8)%8;
k = 5;
CALL L765;
ENDPROC;
PROCEDURE L759 USES TEMP_DATA, L765;
i = A73[(V156-13)*2];
j = A74[V156-13];
j = (j+8+2)%8;
k = 2;
CALL L765;
ENDPROC;
PROCEDURE L760 USES TEMP_DATA, L765;
i = A73[(V156-13)*2];
j = A74[V156-13];
j = (j+8+2+3)%8;
k = 16;
IF (V156 == 23) THEN k = 15;
CALL L765;
ENDPROC;
PROCEDURE L761 USES TEMP_DATA, L765;
i = A73[(V156-13)*2+1];
j = A74[V156-13];
j = (j+8+2+3+1)%8;
k = 2;
CALL L765;
ENDPROC;
PROCEDURE L762 USES TEMP_DATA, L765;
i = A73[(V156-13)*2];
j = A74[V156-13];
k = 2;
CALL L765;
ENDPROC;
PROCEDURE L763 USES TEMP_DATA, L765;
i = A73[(V156-13)*2];
j = A74[V156-13] + 3;
k = 6;
CALL L765;
ENDPROC;
PROCEDURE L764 USES TEMP_DATA, L765;
i = A73[(V156-13)*2+1];
j = A74[V156-13] + 3 + 1;
k = 2;
CALL L765;
ENDPROC;
PROCEDURE L765 USES TEMP_DATA;
i = A5[V156] - 1 - i + V155;
IF (A31[i]) THEN
V112 = V112 + A65[(j+(V10-k))%8];
ENDPROC;
PROCEDURE L766 USES TEMP_DATA, L765;
i = A73[(V156-13)*2+1];
j = A74[V156-13] + 3 + 1;
k = 2;
CALL L765;
i = 81;
j = A74[V156-13] + 3 + 1 + 16;
k = 2;
CALL L765;
ENDPROC;
PROCEDURE L767 USES TEMP_DATA, L770;
IF (V10 == 93) THEN V151 = 0;
IF (V10 == 94) THEN V151 = V150;
IF (V10 == 95) THEN V151 = V151 + V150;
IF (V10 == 93) THEN V150 = A72[(V156-V167)*2];
IF ((V10 == 93) && (V156 >= 23)) THEN V150 = 5;
IF (V10 == 94) THEN V150 = A72[(V156-V167)*2+1];
IF ((V10 == 94) && ((V156 >= 23) && (V156 <= 26)))
THEN V150 = 4;
IF ((V10 == 94) && (V156 == 27)) THEN V150 = 5;
IF ((V10 == 95) && (V156 >= 23)) THEN V150 = 3;
FOR i = 0 TO 15;
A69[i] = 1;
NEXT i;
IF ((V156 != 15) && (V156 !=16) &&
(V156 < 25)) THEN GOTO L768;
A69[1] = 0;
A69[6] = 0;
A69[9] = 0;
A69[14] = 0;
IF ((V156 != 16) && (V156 < 26)) THEN GOTO L768;
A69[3] = 0;
A69[11] = 0;
IF (V156 != 27) THEN GOTO L768;
A69[5] = 0;
A69[7] = 0;
A69[12] = 0;
L768:
LAB = V154;
A83[0] = A71[V156-13] + V151;
FOR V153 = 0 TO (V46-1);
IF ((V156 != 27) && (V156 != 18)) THEN GOTO L769;
A69[2] = 0;
IF (((V153 >= 4) && (V153 <= 10)) || ((V153 >= 21) && (V153 <= 27)) || (V153 == 14) || (V153 == 17))
THEN A69[2] = 1;
L769:
V148 = A77[LAB];
CALL L770;
LAB = LAB + 1;
NEXT V153;
ENDPROC;
PROCEDURE L770 USES TEMP_DATA;
INTEGER V174;
l = 0;
V174 = A72[(V156-V167)*2]+
A72[(V156-V167)*2+1];
IF ((V156 >= 23) && (V156 <= 26)) THEN V174 = 5 + 4 + 3;
IF (V156 == 27) THEN V174 = 5 + 5 + 3;
FOR j = 0 TO 15;
IF (!A69[j]) THEN GOTO L771;
m = A83[V153] + l * V174;
FOR k = 0 TO (V150-1);
i = A5[V156] - 1 - (V148 + j * 5 + k) + V155;
IF (( k >= 1) && ((V156 >= 23) && (V156 <= 26)) && (V10 == 94)) THEN i = i - (2-1);
IF (A31[i]) THEN
V112 = V112 + A65[(m + k) % 8];
NEXT k;
l = l + 1;
L771:
NEXT j;
A83[V153+1] = A83[V153] + l * V174;
ENDPROC;
PROCEDURE L772 USES TEMP_DATA, SUB_L772;
IF (V10 == 90) THEN V150 = 5;
IF (V10 == 90) THEN V151 = 0;
IF (V10 == 91) THEN V150 = 5;
IF (V10 == 91) THEN V151 = 5;
IF ((V10 == 92) && (V156 < 23)) THEN V150 = 4;
IF ((V10 == 92) && (V156 >= 23)) THEN V150 = 5;
IF (V10 == 92) THEN V151 = 5+5;
LAB = V154;
FOR V153 = 0 TO (V46-1);
V148 = A77[LAB];
CALL SUB_L772;
LAB = LAB + 1;
NEXT V153;
ENDPROC;
PROCEDURE SUB_L772 USES TEMP_DATA;
FOR j = 0 TO 15;
l = j * 14 + V151;
IF (V156<23) THEN GOTO L774;
l = j * 15 + V151;
L774:
FOR k = 0 TO (V150-1);
i = A5[V156] - 1 - (V148 + j * 5 + k) + V155;
IF (A31[i]) THEN
V112 = V112 + A65[(l + k) % 8];
NEXT k;
NEXT j;
ENDPROC;
PROCEDURE L775 USES TEMP_DATA, L781, L776;
LAB = V154;
FOR V153 = 0 TO (V46-1);
V148 = A78[LAB];
CALL L781;
LAB = LAB + 1;
NEXT V153;
CALL L776;
ENDPROC;
PROCEDURE L776 USES TEMP_DATA;
j = 6;
IF ((V156 == 27) || (V156 == 18)) THEN j = 10;
IF ((V156 != 16) && (V156 != 26) &&
(V156 != 27) && (V156 != 18)) THEN GOTO L777;
k = 0;
IF ((V156 == 27) || (V156 == 18)) THEN k = 784;
A76[0] = 785+k;
A76[1] = 784+k;
A76[2] = 786+k;
A76[3] = 784+k;
A76[4] = 786+k;
A76[5] = 785+k;
A76[6] = 787+k;
A76[7] = 787+k;
A76[8] = 788+k;
A76[9] = 788+k;
GOTO L779;
L777:
IF ((V156 != 13) && (V156 != 23)) THEN GOTO L778;
A76[0] = 84;
A76[1] = 84;
A76[2] = 83;
A76[3] = 84;
A76[4] = 83;
A76[5] = 84;
GOTO L779;
L778:
IF ((V156 == 15) || (V156 == 25)) THEN k = 178;
IF ((V156 == 14) || (V156 == 24)) THEN k = 0;
A76[0] = k + 178;
A76[1] = k + 178;
A76[2] = k + 178 + 1;
A76[3] = k + 178;
A76[4] = k + 178 + 1;
A76[5] = k + 178;
L779:
FOR k = 0 TO (j - 1);
IF ((V147/V149) != A75[k]) THEN GOTO L780;
IF (A31[A5[V156]-1-A76[k]+V155]) THEN
V112 = V112 + A65[(k*V149+(V147-V147/V149*V149))%8];
L780:
NEXT k;
ENDPROC;
PROCEDURE L781 USES TEMP_DATA;
INTEGER V158;
INTEGER V159;
INTEGER V160;
V158 = V149;
IF ((V156 == 14) || (V156 == 13) ||
(V156 == 23) || (V156 == 24)) THEN V158 = V158 - 1;
IF (((V156 == 14) || (V156 == 13)) &&
((V147%V149) == V158)) THEN GOTO L789;
IF (((V156 == 24) || (V156 == 23)) &&
((V147%V149) == V166)) THEN GOTO L789;
j = A5[V156] - 1 - V148 + V155;
k = V147/V149*V158;
l = V147/V149*V149;
IF (((V156 == 24) || (V156 == 23)) &&
((V147%V149) > V166)) THEN l = l + 1;
IF ((V156 < 16) || ((V156 >=23) && (V156 <= 25)))
THEN GOTO L788;
IF ((V156 == 16) || (V156 == 26)) THEN GOTO L783;
V159 = 1;
V160 = 7;
IF (V153 < (V46/2)) THEN GOTO L782;
V159 = 3;
V160 = 5;
L782:
IF (((V153 & 3) == 1) || ((V153 & 3) == 2)) THEN GOTO L786;
GOTO L785;
L783:
V157 = V153 / 4;
V159 = 1;
V160 = 7;
IF (V157 < 2) THEN GOTO Is1aL7427;
V159 = 5;
V160 = 3;
Is1aL7427:
IF ((V157 & 1) == 0) THEN GOTO L786;
L785:
V157 = V159;
V159 = V160;
V160 = V157;
L786:
IF ((V147/V149) >= 2) THEN j = j - 36;
i = j;
FOR V157 = 0 TO 8;
IF (V157 == 0) THEN GOTO L787;
IF ((V157 & 1) == 0) THEN i = i - V160;
IF ((V157 & 1) != 0) THEN i = i - V159;
L787:
IF (A31[i]) THEN
V112 = V112 + A65[(V153*V158*9*4+k*9+V157*V158+V147-l)%8];
NEXT V157;
GOTO L789;
L788:
FOR i = j TO (j-(9-1)*2) STEP -2;
IF (A31[i]) THEN
V112 = V112 + A65[(k*9+(j-i)/2*V158+V147-l)%8];
NEXT i;
L789:
ENDPROC;
PROCEDURE L790 USES TEMP_DATA;
j = (V10 - 2) % 8;
LAB = V154;
FOR k = 0 TO (V46-1);
i = A5[V156] - 1 - A77[LAB] + V155;
l = i - (80 - 1);
FOR i = i TO l STEP -1;
IF (A31[i]) THEN
V112 = V112 + A65[j];
Next i;
LAB = LAB + 1;
NEXT k;
ENDPROC;
PROCEDURE L791 USES TEMP_DATA;
V154 = 0;
FOR i = V167 TO (V167+5);
IF (i != V156) THEN GOTO L792;
i = V167+5;
GOTO L793;
L792:
V154 = V154 + A6[i];
L793:
NEXT i;
IF ((V156>18) && (V156 >(V167+3)))
THEN V154 = V154 + A6[17];
ENDPROC;
PROCEDURE L794 USES TEMP_DATA;
INTEGER V161;
FOR i = 0 TO ((41+3)*4-1);
A68[i] = 255;
NEXT i;
l = V156 - V167;
IF (V156 == 27) THEN l = l + 1;
V149 = A67[l*5]+1;
V166 = A67[l*5];
IF (V156 >= 23) THEN V149 = V149 + 2;
n = 0;
V161 = 1;
IF (V156 >= 23) THEN GOTO L795;
FOR k = 0 TO 3;
l = A67[(V156-V167)*5+1+k];
IF (k >= 2) THEN V161 = -1;
FOR j = 0 TO (V149 - 2);
A68[n] = l;
l = l + V161;
n = n + 1;
NEXT j;
A68[n] = l;
IF (k == 0) THEN A68[n] = l - V149;
IF (k == 3) THEN A68[n] = l + V149;
n = n + 1;
NEXT k;
GOTO L796;
L795:
FOR k = 0 TO 3;
l = A66[(V156-23)*12+k];
IF (k >= 2) THEN V161 = -1;
FOR j = 0 TO (V149 - 4);
A68[n] = l;
l = l + V161;
n = n + 1;
NEXT j;
l = A66[(V156-23)*12+4+k];
A68[n] = l;
n = n + 1;
l = A66[(V156-23)*12+4*2+k];
A68[n] = l;
n = n + 1;
IF ((k & 1) == 1) THEN l = l - 1;
IF ((k & 1) == 0) THEN l = l + 1;
A68[n] = l;
n = n + 1;
NEXT k;
L796:
ENDPROC;
PROCEDURE L797 USES DEVICE_DATA, TEMP_DATA, L106, L682, L107, L389, L458, L334, L848;
CALL L106;
FOR i = V1 TO 0 STEP -1;
IF (((A17[i] & 256) == 0) ||
(A12[i] != 18) ||
((A17[i] & 4) == 0)) THEN GOTO L798;
V2 = A12[i];
V113 = i;
V112 = 0;
V110 = 1;
V173 = 1;
PRINT "Reading checksum for device #", V0 - i,"...";
PUSH i;
CALL L106;
CALL L682;
V29 = 1;
V34 = 1;
V11 = 2;
CALL L389;
A18[9..0] = $016;
CALL L458;
V45 = 1;
FOR V10 = 2 TO 6;
CALL L334;
NEXT V10;
V45 = 0;
FOR V10 = 7 TO V96;
CALL L334;
NEXT V10;
V112 = V112 - 284713;
CALL L848;
V110 = 0;
V173 = 0;
CALL L107;
POP i;
L798:
NEXT i;
ENDPROC;
PROCEDURE L799 USES DEVICE_DATA, TEMP_DATA;
V117 = V10;
V114 = V30 + V113;
V115 = V31 + V113 - V1;
PUSH i;
FOR i = V114 TO V115;
V118 = V115 - i;
IF (V118 < 1280) THEN GOTO L800;
IF (V118 < 1864) THEN GOTO L803;
V118 = V118 - 584;
L800:
V118 = V118 % 80;
IF (V117 >= 90) THEN GOTO L801;
V116 = (V117 - 2) & 7;
GOTO L811;
L801:
IF (V117 >= 93) THEN GOTO L802;
V116 = (V142[V117 - 90] + V118 + (V118 / 5)) & 7;
GOTO L811;
L802:
IF (V117 >= 95) THEN GOTO L812;
V116 = (3 + (V117 * 5) + (V118 % 5)) & 7;
GOTO L811;
L803:
V118 = V118 - 1280;
V143 = V118 % 72;
IF (V118 >= 216) THEN V143 = V118 - 216;
IF (V118 >= 295) THEN V143 = (V118 - 295) % 72;
IF (V118 >= 511) THEN V143 = V118 - 511;
V143 = V143 >> 1;
IF (V143 >= 18) THEN GOTO L804;
V116 = (V117 + (V143 & 6)) & 7;
IF (V117 == 44) THEN V116 = (V116 + 5) & 7;
IF (V117 > 44) THEN V116 = (V116 + 3) & 7;
GOTO L811;
L804:
IF (V143 >= 36) THEN GOTO L805;
V116 = (6 - V117 + (V143 & 6)) & 7;
IF (V117 == 43) THEN V116 = (V116 + 2) & 7;
IF (V117 > 43) THEN V116 = (V116 + 1) & 7;
GOTO L811;
L805:
IF (V117 < 43) THEN GOTO L806;
IF (V118 >= 293) THEN GOTO L812;
IF (V117 > 44) THEN GOTO L808;
IF (V117 == 44) THEN GOTO L807;
V116 = V138[V118 - 288];
GOTO L811;
L806:
IF (V118 == 583) THEN GOTO L810;
IF (V118 == 293) THEN GOTO L809;
IF (V118 > 293) THEN GOTO L812;
V116 = (V137[V118 - 288] + (V117 * V140[V118 - 288])) & 7;
GOTO L811;
L807:
V116 = V139[V118 - 288];
GOTO L811;
L808:
V116 = ((V117 * V140[V118 - 288]) + V141[V118 - 288]) & 7;
GOTO L811;
L809:
V116 = (V117 + 2 - (V117 / 5)) & 7;
GOTO L811;
L810:
V116 = (V117 + 6) & 7;
L811:
IF (A31[i]) THEN V112 = V112 + (1 << V116);
L812:
NEXT i;
POP i;
ENDPROC;
#ENDIF
#IF EPC
PROCEDURE L813 USES DEVICE_DATA, TEMP_DATA, L106, L682, L107, L458, L345, L848;
CALL L106;
FOR i = 0 TO V1;
IF (((A17[i] & 512) == 0) ||
(A12[i] != 12) ||
((A17[i] & 4) == 0)) THEN GOTO L814;
V2 = A12[i];
V113 = i;
V112 = 0;
V110 = 1;
PRINT "Reading checksum for device #", V0 - i,"...";
PUSH i;
CALL L106;
CALL L682;
V29 = 1;
V34 = 1;
A18[9..0] = $10A;
CALL L458;
A18[9..0] = $122;
CALL L458;
WAIT 20 USEC;
FOR V10 = 0 TO 26495;
CALL L345;
NEXT V10;
CALL L848;
V110 = 0;
CALL L107;
POP i;
L814:
NEXT i;
ENDPROC;
PROCEDURE L815 USES DEVICE_DATA, TEMP_DATA;
V117 = V10;
V114 = V30 + V113;
V115 = V31 + V113 - V1;
V116 = 0;
IF (V117 == 0) THEN A31[V114 + 30] = 1;
PUSH i;
FOR i = V114 TO V115;
IF (A31[i]) THEN V112 = V112 + (1 << V116);
V116 = (V116 + 1) & 7;
NEXT i;
POP i;
ENDPROC;
#ENDIF
#IF MAX9000
PROCEDURE L816 USES DEVICE_DATA, TEMP_DATA, L106, L685, L400, L365, L848, L107;
CALL L106;
V113 = 0;
FOR i = 0 TO V1;
IF (((A17[i] & 2) == 2) &&
(A12[i] == 11) &&
((A17[i] & 4) == 4)) THEN V113 = V113 + 1;
NEXT i;
IF (V113 > 1) THEN PRINT "Multi-device checksum is not currently supported for MAX9000 devices";
IF (V113 > 1) THEN GOTO L818;
FOR i = 0 TO V1;
IF (((A17[i] & 2) == 0) ||
(A12[i] != 11) ||
((A17[i] & 4) == 0)) THEN GOTO L817;
V2 = A12[i];
V113 = i;
V112 = 0;
V110 = 1;
V111 = 0;
if ((A13[i] & 64) == 64) THEN V111 = 1;
PRINT "Reading checksum for device #", V0 - i,"...";
PUSH i;
CALL L106;
CALL L685;
V29 = 1;
V34 = 1;
FOR i = 0 TO V20 - 1;
A31[i] = 0;
A57[i] = 0;
NEXT i;
V30 = V24 - 1;
FOR V11 = 1035 TO 1196;
CALL L400;
CALL L365;
NEXT V11;
V49 = 1;
FOR V11 = 2069 TO 2074;
CALL L400;
CALL L365;
CALL L107;
NEXT V11;
V49 = 1;
FOR V11 = 4097 TO 4113;
CALL L400;
CALL L365;
NEXT V11;
V45 = 1;
V11 = 4114;
CALL L400;
CALL L365;
V45 = 0;
FOR V11 = 4869 TO 4886;
CALL L400;
CALL L365;
NEXT V11;
V49 = 1;
FOR V11 = 8193 TO 8210;
CALL L400;
CALL L365;
NEXT V11;
FOR V11 = 8965 TO 8982;
CALL L400;
CALL L365;
NEXT V11;
V112 = V112 - 400248;
CALL L848;
V110 = 0;
CALL L107;
POP i;
L817:
NEXT i;
L818:
ENDPROC;
PROCEDURE L819 USES DEVICE_DATA, TEMP_DATA;
V117 = V10;
V114 = V30 + V113;
V115 = V31 + V113 - V1;
PUSH i;
FOR i = V114 TO V115;
V118 = ((V115 - i) * 5) + V119;
IF (V117 < 1035) THEN GOTO L847;
IF (V117 >= 1045) THEN GOTO L820;
V116 = V123[V117 - 1035];
GOTO L846;
L820:
IF (V117 >= 1059) THEN GOTO L821;
V116 = (V117 + 3) & 7;
GOTO L846;
L821:
IF (V117 >= 1083) THEN GOTO L822;
V116 = (V117 + (V118 * 2) + 7) & 7;
GOTO L846;
L822:
IF (V117 >= 1173) THEN GOTO L823;
V116 = (V117 + (V118 * 2) + 5) & 7;
GOTO L846;
L823:
IF (V117 >= 1188) THEN GOTO L824;
V116 = 7 - ((V117 + 5) & 7);
GOTO L846;
L824:
IF (V117 >= 1198) THEN GOTO L825;
V116 = V124[V117 - 1188];
GOTO L846;
L825:
IF (V117 >= 2076) THEN GOTO L827;
V118 = (V115 - i);
IF ((((V118 / 33) ^ ((V118 + 16) / 33)) & 1) == 0) THEN GOTO L826;
V116 = ((((2 - (V118 + V120)) & 3) * 2) + 6 - V117) & 7;
GOTO L846;
L826:
V116 = ((((2 - (V118 + V120)) & 3) * 2) + 7 + V117) & 7;
GOTO L846;
L827:
V118 = (V115 - i);
IF (V117 >= 4107) THEN GOTO L828;
V116 = (((V118 & 3) * 2) + 3 - V117) & 7;
GOTO L846;
L828:
IF (V117 >= 4109) THEN GOTO L830;
IF (((V118 + 4) & 7) < 3) THEN GOTO L829;
V116 = (((V118 & 3) * 2) + 4 + V117) & 7;
GOTO L846;
L829:
V116 = (((V118 & 3) * 2) + 3 - V117) & 7;
GOTO L846;
L830:
IF (V117 >= 4113) THEN GOTO L831;
IF (V118 >= 50) THEN GOTO L847;
IF (((V118 + 1) & 6) != 2) THEN GOTO L847;
V116 = (V125[(V118 + 2) >> 2] + V126[V117 - 4109]) & 7;
GOTO L846;
L831:
IF (V117 >= 4114) THEN GOTO L832;
IF (V118 >= 50) THEN GOTO L847;
IF ((V118 & 7) > 2) THEN GOTO L847;
V116 = V127[((V118 >> 1) & 28) + (V118 & 3)];
GOTO L846;
L832:
IF (V117 >= 4115) THEN GOTO L835;
IF (V118 <= 20) THEN GOTO L833;
IF ((V118 >= 27) && (V118 <= 31)) THEN GOTO L847;
V116 = ((V118 >> 1) & 4) + 2;
GOTO L846;
L833:
IF (V111) THEN GOTO L834;
IF ((V118 >= 2) && (V118 <= 7)) THEN GOTO L847;
IF ((V118 >= 10) && (V118 <= 15)) THEN GOTO L847;
IF ((V118 >= 17) && (V118 <= 20)) THEN GOTO L847;
L834:
V116 = V128[V118];
GOTO L846;
L835:
IF (V117 >= 4871) THEN GOTO L836;
IF ((V118 != 56) && (V118 != 64) && (V118 != 72) && (V118 != 80) &&
(V118 != 88) && (V118 != 96) && (V118 != 104)) THEN GOTO L847;
V116 = ((V118 >> 1) & 4) + ((V117 + 1) & 1);
GOTO L846;
L836:
IF (V117 < 4875) THEN GOTO L847;
IF (V117 >= 4877) THEN GOTO L838;
IF (((V118 + 1) & 7) < 5) THEN GOTO L837;
V116 = (((V118 & 3) * 2) + 5 + V117) & 7;
GOTO L846;
L837:
V116 = (((V118 & 3) * 2) + 4 - V117) & 7;
GOTO L846;
L838:
IF (V117 >= 4887) THEN GOTO L839;
V116 = (((V118 & 3) * 2) + 5 + V117) & 7;
GOTO L846;
L839:
IF (V117 >= 8203) THEN GOTO L841;
IF ((V118 < 78) || (V118 > 245)) THEN GOTO L840;
IF (V117 == 8193) THEN V116 = V130[(V118 + 6) % 12];
IF (V117 == 8194) THEN V116 = V131[(V118 + 6) % 12];
IF (V117 > 8194) THEN V116 = (V132[(V118 + 6) % 12] + V117 + 5) & 7;
GOTO L846;
L840:
IF (V117 == 8193) THEN V116 = V129[V118 % 3];
IF (V117 == 8194) THEN V116 = V129[(V118 % 3) + 3];
IF (V117 > 8194) THEN V116 = ((V117 - 8191) + (2 * (V118 % 3))) & 7;
GOTO L846;
L841:
IF (V117 >= 8211) THEN GOTO L843;
IF (V117 >= 8206) THEN GOTO L842;
IF ((V118 > 80) && (V118 < 246)) THEN GOTO L847;
IF ((V117 != 8205) && (V118 != 76) && ((V118 % 3) != 0)) THEN GOTO L847;
IF ((V118 == 241) || (V118 == 242) ||
(V118 == 405) || (V118 == 406) ||
(V118 == 571) || (V118 == 572)) THEN GOTO L847;
L842:
V116 = (V133[V118 % 3] + V117 + 5) & 7;
IF ((V118 == 75) || (V118 == 76)) THEN V116 = (V116 + 7) & 7;
IF (V118 == 79) THEN V116 = (V116 + 5) & 7;
GOTO L846;
L843:
IF (V117 >= 8973) THEN GOTO L844;
V116 = 8;
IF (((V118 >= 327) && (V118 <= 401)) || ((V118 >= 573) && (V118 <= 647))) THEN
V116 = (V133[V118 % 3] + 4 - V117) & 7;
IF ((V117 == 8969) && (V118 == 568)) THEN V116 = 2;
IF ((V117 == 8970) && (V118 == 568)) THEN V116 = 1;
IF ((V117 == 8971) && (V118 == 569)) THEN V116 = 2;
IF ((V117 == 8972) && (V118 == 569)) THEN V116 = 1;
IF (V116 == 8) THEN GOTO L847;
GOTO L846;
L844:
IF (V117 >= 8981) THEN GOTO L845;
V116 = (V134[V118 % 3] + 5 - V117) & 7;
IF (V118 >= 405 && V118 <= 572) THEN V116 = (V116 + 5 - ((V118 / 3) * 2)) & 7;
GOTO L846;
L845:
IF (V117 >= 8983) THEN GOTO L847;
IF (V117 == 8981) THEN V116 = (V135[V118 % 3] + 5 - V117) & 7;
IF (V117 == 8982) THEN V116 = (V136[V118 % 3] + 5 - V117) & 7;
IF (V118 >= 405 && V118 <= 572) THEN V116 = (V116 + 5 - ((V118 / 3) * 2)) & 7;
L846:
IF (A31[i]) THEN V112 = V112 + (1 << V116);
L847:
NEXT i;
POP i;
ENDPROC;
#ENDIF
#IF CHECKSUM
#IF MAX7000 || MAX7000AE || EPC || MAX9000
PROCEDURE L848 USES DEVICE_DATA, TEMP_DATA;
EXPORT "DEVICE", V0 - V113;
EXPORT "CHECKSUM", V112;
FOR j = 0 TO 7;
V121 = 48 + ((V112 >> (4 * j)) & 15);
IF V121 >= 58 THEN V121 = V121 + 7;
V122[j] = V121;
NEXT j;
PRINT "Device #", V0 - V113," checksum = ",
CHR$(V122[7]), CHR$(V122[6]),
CHR$(V122[5]), CHR$(V122[4]),
CHR$(V122[3]), CHR$(V122[2]),
CHR$(V122[1]), CHR$(V122[0]);
ENDPROC;
#ENDIF
#ENDIF
#ENDIF
PROCEDURE L849 USES TEMP_DATA;
PUSH j;
i = 0;
FOR j = 0 to 31;
IF (ba[j] == 1) THEN i = i + (1<<j);
NEXT j;
POP j;
ENDPROC;
PROCEDURE L850 USES TEMP_DATA;
PUSH j;
ba[31..0] = $00000000;
FOR j = 0 to 31;
IF (i&(1<<j))!=0 THEN ba[j]=1;
NEXT j;
POP j;
ENDPROC;
' END OF FILE
