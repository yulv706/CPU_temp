<optimization_record_list>

<optimization_record>
<recommendation_key>
NONE
</recommendation_key>
<recommendation>
Pin Advisor
</recommendation>
<recommendation_description>
This Advisor helps you to create a valid Pin-Out File (.pin) in the Quartus II software.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="">
	NA
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
HOWTO
</recommendation_key>
<recommendation>
How to use the Pin Advisor
</recommendation>
<recommendation_description>
Follow the recommendations in this advisor to create a valid pin out for your design.
</recommendation_description>
<description>
The Pin Advisor is broken into design flow steps. Some steps are optional. Make sure you cover all the steps described here to obtain a valid Pin-Out File (.pin).
</description>
<more_info_link>
http://www.altera.com/support/software/io-board/sof-qts-io.html
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
PINCNCT
</recommendation_key>
<recommendation>
Pin Connections Guidelines
</recommendation>
<recommendation_description>
Use the pin connection guidelines to make connections for power, configuration, or clock pins in your board layout.
</recommendation_description>
<description>
Device specific pin connection guidelines provide recommendations on how to connect power, configuration, and clock pins when you are creating a board layout.
</description>
<more_info_link>
http://www.altera.com/literature/lit-dpcg.jsp?GSA_pos1&amp;WT.oss_r1&amp;WT.osspin%20connection%20guidelines
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use device specific pin connection guidelines for your device available from More Info link in this advisor
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="2">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DEVSEL
</recommendation_key>
<recommendation>
Device Selection
</recommendation>
<recommendation_description>

</recommendation_description>
<description>

</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="5">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DEVSELONE
</recommendation_key>
<recommendation>
Select FPGA Device
</recommendation>
<recommendation_description>
Select a device in the Device page of the Settings dialog box (Assignments menu). 
</recommendation_description>
<description>
Altera products include a variety of devices to meet your I/O and logic density requirements. Refer to the specific device handbook to learn more about the I/O features and architecture of your preferred device.
</description>
<more_info_link>
http://www.altera.com/literature/lit-index.html
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select the device which meets your requirements on the Device Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_DEVICE
	</action_link>
	<acf_variable_list>
		<acf_variable name="DEVICE">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	DEVSEL
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DEVSELTWO
</recommendation_key>
<recommendation>
Select Vertical Migration and Companion HardCopy Device
</recommendation>
<recommendation_description>
Select a migration device.
</recommendation_description>
<description>
Altera provides vertically migratable devices with different pin counts. You can also choose a HardCopy device as a companion device. Choosing a vertically migratable device and a companion HardCopy device early in I/O planning helps you to understand the migration differences of I/O pins among devices.
</description>
<more_info_link>
http://www.altera.com/literature/lit-index.html
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	To select the migration devices, go to the Device Settings page of the Settings dialog box (Assignments menu) and select the migration devices and companion devices from the available list.
	</action_description>
	<action_link>
	SETD_DEVICE
	</action_link>
	<acf_variable_list>
		<acf_variable name="DEVICE_MIGRATION_LIST">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	DEVSEL
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
QIISET
</recommendation_key>
<recommendation>
Quartus II Project Settings
</recommendation>
<recommendation_description>

</recommendation_description>
<description>

</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<acf_variable_list>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
OPER
</recommendation_key>
<recommendation>
Set Operating Conditions
</recommendation>
<recommendation_description>
Specify the operating voltage of the device, the temperature, and cooling mechanism to be used on the actual board.
</recommendation_description>
<description>
The proper operating conditions results in accurate I/O pin assignment analysis and power analysis of your design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Verify the operating voltage, temperature settings, and cooling mechanism specifications.
	</action_description>
	<action_link>
	SETD_VOLTAGE
	</action_link>
	<acf_variable_list>
		<acf_variable name="POWER_USE_DEVICE_CHARACTERISTICS">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	QIISET
	</parent>
</parent_list>
<logic_algorithm>
ASSIGNMENT
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CONFIG
</recommendation_key>
<recommendation>
Set Configuration Scheme
</recommendation>
<recommendation_description>
Specify the configuration scheme for programming the device.
</recommendation_description>
<description>
A proper configuration scheme must be selected early in your design cycle. Based on your configuration scheme, configuration device and configuration device voltage, the Quartus II Software selects appropriate dual purpose pins as regular I/O pins after configuration is complete. The Quartus II Software performs voltage compatibility checks of those pins during I/O assignment analysis and compilation of your design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click the Configuration tab of the Device and Pin Options dialog box and select the configuration scheme.
	</action_description>
	<action_link>
	SETD_DEVICE_OPTIONS_CONFIGURATION
	</action_link>
	<acf_variable_list>
		<acf_variable name="STRATIXII_CONFIGURATION_SCHEME">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	QIISET
	</parent>
</parent_list>
<logic_algorithm>
ASSIGNMENT
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
UNUSED
</recommendation_key>
<recommendation>
Set Connection Scheme for Unused Pins
</recommendation>
<recommendation_description>
Specify how you want to connect the unused pins in the device.
</recommendation_description>
<description>
You can specify how you want the Quartus II software to handle the unused pins in your device. There are various options. For example one option is "Output driving ground" which means that the Quartus II software would reserve all the unsued pins as outputs driving ground during compilation.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click the Unused Pins tab of the Device and Pin Options dialog box and select a scheme for unused pins.
	</action_description>
	<action_link>
	SETD_DEVICE_OPTIONS_UNUSED_PIN
	</action_link>
	<acf_variable_list>
		<acf_variable name="RESERVE_ALL_UNUSED_PINS">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	QIISET
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DUALPURPOSE
</recommendation_key>
<recommendation>
Set Connection Scheme for Dual Purpose Pins
</recommendation>
<recommendation_description>
Specify how you want to use the dual purpose pins in the device.
</recommendation_description>
<description>
After selecting a configuration scheme, you can specify how you want to use dual purpose pins after configuration. This is very similar to specifying how you want to handle the unused pins during compilation. 
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select a dual purpose pin and specify how you want to handle each dual purpose pin during compilation from the Dual-Purpose Pins tab of the Devices and Options dialog box.
	</action_description>
	<action_link>
	SETD_DEVICE_OPTIONS
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	QIISET
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
EDA
</recommendation_key>
<recommendation>
Select Third Party Tools
</recommendation>
<recommendation_description>
Specify any third paryt tool(s) you want to use.
</recommendation_description>
<description>
Quartus II software provides 3rd party EDA tools interface support through the .pin file and through the FPGA Exchange (.fx) file. The pin file is generated automatically after a full compilation and can be used with PCB design tools from select ACCESS partners. If you are using third party signal integrity analysis tools, Quartus II software generates models and netlists in the IBIS standard format.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii5v2_02.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select the third-party tools you intend to use from the EDA Tool Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_EDA_TOOLS
	</action_link>
	<acf_variable_list>
		<acf_variable name="EDA_OUTPUT_DATA_FORMAT">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	QIISET
	</parent>
</parent_list>
<logic_algorithm>
ASSIGNMENT
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
EARLYPIN
</recommendation_key>
<recommendation>
Define I/O Interfaces using Early I/O Planning Flow (Optional)
</recommendation>
<recommendation_description>
Create your top-level HDL file with the Early I/O Pin Planning flow in the Pin Planner.
</recommendation_description>
<description>
You can use early I/O planning flow to create a top-level HDL file containing I/O interfaces which comprise of Megafunctions or MegaCore functions. This is an optional step. If your design files are complete and/or the top-level file is complete, you can skip to "Run Analysis and Synthesis" step.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="10">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
MFUG
</recommendation_key>
<recommendation>
Create/Import Megafunctions and/or MegaCore functions in Pin Planner
</recommendation>
<recommendation_description>
Create/Import Megafunctions and/or MegaCore functions in the Pin Planner.
</recommendation_description>
<description>
You can use early I/O planning flow to create a top-level HDL file containing I/O interfaces which comprise of Megafunctions or MegaCore functions. This is an optional step. If your design files are complete and/or the top-level file is complete, you can skip to "Run Analysis and Synthesis" step. You can use the Create/Import Megafunction feature in the Pin Planner to create or import Megafunctions which are part of your design. This is very similar to the process where you create a megafunction with the MegaWizard Plug In Manager. When you invoke MegaWizard Plug In Manager from Pin Planner to create or import a megafunction, some of the pin information is transferred seamlessly to Pin Planner through a Pin Planner File (.ppf).
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click Create/Import Megafunction from the Edit menu of the Pin Planner.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	EARLYPIN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
SETUPMFUG
</recommendation_key>
<recommendation>
Configure the Nodes
</recommendation>
<recommendation_description>
Configure the nodes
</recommendation_description>
<description>
After you have created or imported the megafunctions, you can configure the nodes using the Configure Nodes feature in the Pin Planner. This is very similar to making connections in a schematic. You can declare the nodes of megafunctions to be external or internal. The nodes specified as external appear as input, output, or bidirectional ports in the top-level HDL file. The nodes which are specified as internal appear as internal nodes. 
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click Set Up Top-Level Design File from the Edit menu of the Pin Planner.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	EARLYPIN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
TOPLEVEHDL
</recommendation_key>
<recommendation>
Create Top-Level File
</recommendation>
<recommendation_description>
Create a top-level file in Verilog HDL or VHDL.
</recommendation_description>
<description>
After configuring the nodes, you must create a top-level HDL file. All the external type nodes and any user created ports appear as top-level ports in the top-level file
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click Create Top-Level Design File on the Set Up Top-Level Design File dialog box.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	EARLYPIN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ASSIGN
</recommendation_key>
<recommendation>
Pin Placement and I/O Properties
</recommendation>
<recommendation_description>
Make I/O pin assignments with the Pin Planner or the Assignment Editor.
</recommendation_description>
<description>
You can make I/O pin assignments using the Pin Planner or the Assignment Editor, though Altera recommends that you use the Pin Planner. Either way, your assignments are saved to the Quartus II Settings File (.qsf).
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="15">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
SYNTH
</recommendation_key>
<recommendation>
Run Analysis and Synthesis
</recommendation>
<recommendation_description>
Run Analysis &amp; Synthesis
</recommendation_description>
<description>
After Analysis and Synthesis of your design files, all top-level port definitions become available in the Pin Planner.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select Start from the Processing menu and click Analysis &amp; Synthesis to perform the analysis and synthesis step. The analysis and synthesis step can be affected by various other settings in your project. Check the default settings and edit your desired settings on the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_ANALYSIS_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	ASSIGN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="Start Analysis &amp;&amp; Synthesis" quartus_exe="quartus_sh">
dummy.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IMPORT
</recommendation_key>
<recommendation>
Import Pin Assignments
</recommendation>
<recommendation_description>
Import existing pin assignments from specified file formats.
</recommendation_description>
<description>
You can import pin assignments and other assignments with the Import Assignments dialog box from files with the Quartus II Settings File (.qsf), Tcl Script File (.tcl), FPGA Xchange-format File (*.fx), or Comma-Separated Value File (.csv) format.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click Import Assignments in the Assignments menu if you want to import any existing assignments.
	</action_description>
	<action_link>
	IMPORT_ASSIGNMENTS
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	ASSIGN
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
PINPLANNER
</recommendation_key>
<recommendation>
Set I/O Assignments
</recommendation>
<recommendation_description>
Use Pin Planner to create or edit I/O assignments
</recommendation_description>
<description>
Pin Planner in the Quartus II software provides easy to use and intuitive graphical user interface for I/O planning of your design. 
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	ASSIGN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
LIVECHECK
</recommendation_key>
<recommendation>
Enable Live I/O Check
</recommendation>
<recommendation_description>
Enable Live I/O Check
</recommendation_description>
<description>
When you turn on Live I/O Check in the Pin Planner, the Quartus II software performs live checking of I/O rules when you are creating location assignments for top-level pins in your design. Live I/O Check indicates which rules have been violated during the I/O placement. The I/O rules are created for each device after its characterization and embedded in the Quartus II software I/O rules checker. During Live I/O Check, some basic I/O buffer rules are checked. The complete I/O rules are checked when you compile your design.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click Enable Live I/O Check on the Processing menu in the Pin Planner.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	PINPLANNER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IOPROPER
</recommendation_key>
<recommendation>
Set I/O Properties
</recommendation>
<recommendation_description>
Specify all I/O Properties for top-level pins.
</recommendation_description>
<description>
If you used the early I/O planning flow to create or import megafunctions from Pin Planner, many of the I/O properties like I/O standard for top-level pins are specified automatically in the Pin Planner. You can modify the I/O properties in the Pin Planner.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	PINPLANNER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IOSTNDRD
</recommendation_key>
<recommendation>
Set I/O Standard
</recommendation>
<recommendation_description>
Specify appropriate signaling standards for each of the I/O pins in your design.
</recommendation_description>
<description>
Setting the proper I/O standard is very important for your device to work properly. Altera devices support multiple I/O standards. Refer to the specific device handbook to learn more about edge rates and the I/O standards supported by your preferred device. In the Pin Planner's All Pin List, you can view or edit the I/O standard for each of the pins in the I/O standard column. If the I/O Standard column is not visible in the All Pins List, right click in the All Pins List and use the Customize Columns dialog box to add the I/O Standard column. 
</description>
<more_info_link>
http://www.altera.com/literature/lit-index.html
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select the appropriate I/O standard from the list in the I/O Standard column of the Pin Planner.You can also assign I/O standards to a bus or io_group in the Groups window in the Pin Planner. You can also use Tcl commands to set the I/O standards as described in the Quartus II Help.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	IOPROPER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CURRENT
</recommendation_key>
<recommendation>
Set Current Strengths
</recommendation>
<recommendation_description>
Specify a current strength for I/O pins in your design.
</recommendation_description>
<description>
Current strength is an important property of an I/O pin. It affects signal integrity of signal going out of the device. You can set the current strengths as part of the early I/O planning flow in the Pin Planner. You can also change the current strength after the compilation of your design. In the Pin Planner All Pin List, you can view or edit the current strengths for each of the output and bidirectional pin in the Current Strength column. If the Current Strength column is not visible in All Pins List, right click in the All Pins List and use the Customize Columns dialog box to add the Current Strength column. The settings you make in Pin Planner are honored during Live I/O Check, I/O Assignment Analysis and full compilation. To make changes to current drive strength after compilation has finished, you can perform engineering change orders (ECOs). To perform ECOs, you can use Resource Property Editor (RPE) tool in the Quartus II software. Performing ECO compilation does not recompile the whole design but compiles only the changes. To learn about ECOs, refer to the Quartus II Help or the Quartus II Software Handbook.
</description>
<more_info_link>
http://www.altera.com/literature/an/AN476.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select the appropriate current strength from the list in the Current Strength column of the Pin Planner.You can also assign current strength to a bus or io_group in the Groups window in the Pin Planner. You can also use Tcl commands to set the current strengths as described in the Quartus II Help. 
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	IOPROPER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
SLEW
</recommendation_key>
<recommendation>
Set Slew Rates
</recommendation>
<recommendation_description>
Specify proper slew rates in your design.
</recommendation_description>
<description>
Slew rate is an important property of an I/O pin that affects the signal integrity of signal going out of the device. You can set the slew rates as part of the early I/O planning flow in the Pin Planner. You can also edit the slew rate setting after the compilation of your design. Slew rates are not available for all devices. In  the Pin Planner's All Pins List, you can view or edit the slew rate for each of the output and bidirectional pin in the Slew Rate column. If the Slew Rate column is not visible in the All Pins List, right click in the All Pins List and use the Customize Columns dialog box to add the Slew Rate column. The settings you make in Pin Planner are honored during Live I/O Check, I/O Assignment Analysis and full compilation. To make changes to slew after compilation has finished, you can perform engineering change orders (ECOs). To perform ECOs, you can use Resource Property Editor (RPE) tool in the Quartus II software. Performing ECO compilation does not perform place and route on the whole design but compiles only the changes. To learn about ECOs, refer to the Quartus II Help or the Quartus II Software Handbook.
</description>
<more_info_link>
http://www.altera.com/literature/an/AN476.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select the appropriate slew rate from the list in the Slew Rate column of the Pin Planner.You can also assign slew rate to a bus or io_group in the Groups window in the Pin Planner. Alternately you can use Tcl commands to set the slew rates as described in the Quartus II Help.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	IOPROPER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
LOAD
</recommendation_key>
<recommendation>
Set Output Pin Loads
</recommendation>
<recommendation_description>
Select the Output Pin Load logic option assignment in the Assignment Name column of the Assignment Editor to specify the output load capacitance for output and bidirectional pins. If the Output Pin Load logic option assignment is unavailable, specify the board trace topology and network terminations with board trace models.
</recommendation_description>
<description>
Specifying the output loads for output and bidirectional pins results in accurate I/O timing analysis, timing closure, and power analysis of your design. For some families like Stratix III, the Output Pin Load assignment is not available, instead you can specify the board trace parameters in a board trace model schematic. If you do not want to specify the complete topology of the board trace, you can specify the output load using the Far End capacitance value in the board trace model schematic. 
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	You can view or edit the output pin load for each output and bidirectional pin in the Output Pin Load column of the All Pins List in the Pin Planner. If the Output Pin Load column is not visible in the All Pins List, right-click in the All Pins List and click Customize Columns to open the Customize Columns dialog box to add the Output Pin Load column. To view or edit board trace model parameters in the Pin Planner, right-click on a pin and click Board Trace Model. You can also view or edit the board trace model parameters in the All Pins List. Open the Customize columns dialog box to add the columns for board trace model parameters. Alternately, if you want to specify the board trace models globally for an I/O standard, use the Device &amp; Pin Options dialog box and specify the parameters under the Board Trace Model tab. You can also use Tcl commands to specify output pin loads or board trace models as described in the Quartus II Help.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="3">
	IOPROPER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IOLOC
</recommendation_key>
<recommendation>
Set I/O Location Assignments
</recommendation>
<recommendation_description>
Make or edit I/O Location assignments with the Pin Planner.
</recommendation_description>
<description>
You can make or edit I/O pin location assignments to specific pin locations, I/O banks, edges, and Vref groups. If you make I/O pin location assignments to I/O banks, edges, and Vref groups, the Quartus II software automatically assigns the pins to specific pin locations during compilation or I/O pin assignment analysis. The pins assigned by the Quartus II software are shown as Fitter Assigned in the Pin Planner rather than User Assigned which are specific pin locations you assigned.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="4">
	PINPLANNER
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
RSRV
</recommendation_key>
<recommendation>
Reserve Pins
</recommendation>
<recommendation_description>
Reserve specific device pins for future use with the Reverse Pins assignment.
</recommendation_description>
<description>
Reserving pins is useful if you know your design is not complete and you want to reserve a device pin for future use.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	In the Pin Planner package view, right-click on a pin and select an option from the  Reserve menu to reserve the pin.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="0">
	IOLOC
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
SWAP
</recommendation_key>
<recommendation>
Swap Pins
</recommendation>
<recommendation_description>
You can find swappable pins for a specific pin and make the swap with the Find Swappable Pins feature of the Pin Planner.
</recommendation_description>
<description>
The Swappable Pins feature is useful when your I/O pin planning is nearly finished and you want to swap pins for final changes
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click on Find Swappable Pins on the View menu of the Pin Planner.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="2">
	IOLOC
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FNDR
</recommendation_key>
<recommendation>
Find Pins
</recommendation>
<recommendation_description>
You can find specific locations based on I/O Standard or other requirement with the Pin Finder feature of the Pin Planner.
</recommendation_description>
<description>
If your device has a lot of I/O pins, Pin Finder helps in finding the pins matching all the conditions specified in Pin Finder.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click on Pin Finder on the View menu of the Pin Planner.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="4">
	IOLOC
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
MIGRATE
</recommendation_key>
<recommendation>
Use Migration View
</recommendation>
<recommendation_description>
You can see the result of migration differences with the Pin Migration View in the Pin Planner.
</recommendation_description>
<description>
If your Quartus II project contains migration devices or companion HardCopy devices, the Pin Migration view allows you to compare differences between pins among migration devices and decide how to connect them on the board and how to handle them in the Quartus II software.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click on Pin Migration View on the View menu of the Pin Planner.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="6">
	IOLOC
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
VALIDATE
</recommendation_key>
<recommendation>
Validate I/O Assignments
</recommendation>
<recommendation_description>
You must validate all the I/O pin assignments you enter or edit in the Quartus II Software for a successful pin out of your design.
</recommendation_description>
<description>
If you have used Live I/O Check feature during pin placements, many of the I/O pin assignments were verified immediately when you made the assignment. Some placement rules are checked during other I/O pin assignment analysis and when you perform a compilation of your design.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="17">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IOANALYSE
</recommendation_key>
<recommendation>
I/O Assignment Analysis
</recommendation>
<recommendation_description>
Run I/O Assignment Analysis for pin assignment validation.
</recommendation_description>
<description>
If you have used Live I/O check feature during pin placements, many of the I/O assignments have been verified immediately as you made the assignment. Though there are some placements rules which are checked only during I/O assignment analysis and full compilation of your design. Quartus II software performs I/O assignments validation at three levels. First level of check is done with Live I/O check feature ON. A more comprehensive level of check is performed with I/O Assignments Analysis and a full final I/O check including the I/O timing check is done when you fully compile your design. To avoid costly board re-spins, it is important that you perform full validation with full compilation with complete design files and constraints. I/O pin assignment analysis validates your I/O pin assignments against all the placement rules including the ones which are checked during Live I/O Check. During I/O pin assignment analysis, the Fitter runs in a pre-fit mode and places all the user assigned I/O pins to specific pin locations. All the unassigned pins are placed automatically by the Fitter. You can view the user assigned and Fitter assigned pins in the Pin Planner package view. To view Fitter placements, on the View menu of the Pin Planner, point to Show, and click on Show Fitter Placements". 
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52013.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	To start I/O assignment analysis, click on the Start I/O Assignment Analysis button in the Pin Planner or click Start I/O Assignment Analysis on the Processing menu in the Quartus II main window.
	</action_description>
	<action_link>
	PINPLANNER
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="0">
	VALIDATE
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FULLCOMP
</recommendation_key>
<recommendation>
Perform a Compilation
</recommendation>
<recommendation_description>
Perform a compilation
</recommendation_description>
<description>
During compilation, the Quartus II software performs the full placement and routing of your design and performs timing analyses on the entire design. The Pin-Out File (.pin) generated after performing a compilation is considered valid if your full HDL design is ready and compilation is successful with no timing violations. For details on incremental compilation, power optimization, and timing optimization, refer to the appropriate advisors in the Quartus II Software.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click Start Compilation in the Processing menu.
	</action_description>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="5">
	VALIDATE
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
SETTMG
</recommendation_key>
<recommendation>
Create Timing Constraints
</recommendation>
<recommendation_description>
Before performing a compilation, check if the design is complete and constrained for timing.
</recommendation_description>
<description>
With timing information,Quartus II Fitter makes intelligent placements and routing to achieve optimal timing performance in your design. 
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the TimeQuest SDC editor to create timing constraints for inputs, outputs, and bidirectional pins. Specify timing constraints on the Classic Timing Analyzer Settings page of the Settings dialog box (Assignments menu) if you are using the Classic Timing Analyzer.
	</action_description>
	<action_link>
	SETD_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="1">
	FULLCOMP
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FINALISE
</recommendation_key>
<recommendation>
Run Full Compilation
</recommendation>
<recommendation_description>
Perform a compilation and analyze your design after full placement, routing, and timing analysis.
</recommendation_description>
<description>
During compilation, the Quartus II Software performs the full placement and routing of your design and performs timing analysis on the entire design. The Pin-Out File (.pin) generated after a compilation is considered valid if your full HDL design is ready and compilation is successful with no timing violations. Various reports are generated during the compilation. Analyze I/O reports like the I/O Rules Check report and Advanced I/O Timing reports. If your HDL design is updated or your I/O specification changes, you can repeat steps from Analysis &amp; Synthesis  to Validation. If you are using incremental compilation in your design refer to the Incremental Compilation Advisor. For power and timing optimization, refer to Power Optimization and Timing Optimization Advisors.
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	
	</action_description>
	<action_link>
	Run Full Compilation
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="4">
	FULLCOMP
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="Start Compilation" quartus_exe="quartus_sh">
dummy.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
BCKANN
</recommendation_key>
<recommendation>
Back Annotate Fitter Results
</recommendation>
<recommendation_description>
Back-annotate the results to save all I/O pin assignments to the Quartus II Settings File (.qsf).
</recommendation_description>
<description>
Back-annotation writes all the I/O pin assignments including the Fitter placements to the Quartus II Settings File (.qsf). There are options that  allow you to back annotate different kinds of  assignment. For more information on back annotation refer to the Quartus II Help. 
</description>
<more_info_link>

</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	
	</resource_effect>
	<compilation_effect>
	
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Specify Back-annotation assignment settings in the Back-Annotate Assignments dialog box of the Assignments menu.
	</action_description>
	<action_link>
	BACK
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="20">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>
</optimization_record_list>
