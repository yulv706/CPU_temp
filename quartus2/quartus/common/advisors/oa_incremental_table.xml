<optimization_record_list>

<optimization_record>
<recommendation_key>
NONE
</recommendation_key>
<recommendation>
Incremental Compilation Advisor
</recommendation>
<recommendation_description>
This advisor helps you evaluate the quality of your design partitions and fix potential problems by providing a set of heuristics that can be used to measure the effectiveness of your partitioning scheme.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="">
	NA
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
HOWTO
</recommendation_key>
<recommendation>
How to use the Incremental Compilation Advisor
</recommendation>
<recommendation_description>
This Advisor analyzes your design and comes up with some suggestions to help you effectively measure the quality of your partitions.  Implement the recommendations in the Incremental Compilation Advisor to effectively partition your design as part of an incremental design flow.
</recommendation_description>
<description>
The Advisor is broken up into two major types of rules:  timing dependent and timing independent. To analyze timing independent rules, see the 'Check Timing Independent Rules' panel.  To analyze timing dependent rules with TimeQuest, please see 'TimeQuest Timing Analyzer - Check Timing Dependent Recommendations'.  If you are using the Classic Timing Analyzer, please see 'Classic Timing Analyzer - Check Timing Dependent Recommendations' to analyze timing dependent rules.  Use the recommendations provided by the Incremental Compilation Advisor to make project or individual settings and assignments, or make design changes.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
MORE_INFO
</recommendation_key>
<recommendation>
More Information on Incremental Compilation
</recommendation>
<recommendation_description>
Use the Incremental Compilation Resource Center as a starting point to learn about QIC, Chip Planner, TimeQuest, LogicLock Regions and other features that can be used in an incremental design flow.
</recommendation_description>
<description>
Click the link below to visit the Incremental Compilation Resource Center.
</description>
<more_info_link>
http://www.altera.com/support/software/incremental/sof-qts-increment-comp.html
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	Click the link above to visit the Incremental Compilation Resource Center.
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	NONE
	</parent>
</parent_list>
<logic_algorithm>

</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
PROCESS_OTHERS
</recommendation_key>
<recommendation>
Check Timing Independent Recommendations
</recommendation>
<recommendation_description>
Checks all recommendations in this advisor not related to timing.
</recommendation_description>
<description>
Clicking the button below begins the process of checking your design for potential problems. This can take a few minutes for large designs.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click the "Check Recommendations" button below to initiate the rules check. This can take a few minutes for large designs.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Check Recommendations" quartus_exe="quartus_cdb">
oaw_qic_process_non_timing.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
PROCESS_TIMING
</recommendation_key>
<recommendation>
Classic Timing Analyzer - Check Timing Dependent Recommendations
</recommendation>
<recommendation_description>
Checks all recommendations in this advisor related to timing.  Designed for use with the Classic Timing Analyzer.
</recommendation_description>
<description>
Clicking the button below begins the process of checking your design for potential problems related to partitions and critical paths. This can take a few minutes for large designs.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Press the "Check Recommendations" button below to initiate the rules check. This can take a few minutes for large designs.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Check Recommendations (Classic Timing Analyzer)" quartus_exe="quartus_tan">
oaw_qic_process_timing.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
PROCESS_TIMING_STA
</recommendation_key>
<recommendation>
TimeQuest Timing Analyzer - Check Timing Dependent Recommendations
</recommendation>
<recommendation_description>
Checks all recommendations in this advisor related to timing.  Designed for use with the TimeQuest timing analyzer.
</recommendation_description>
<description>
Clicking the button below begins the process of checking your design for potential problems related to partitions and critical paths. This can take a few minutes for large designs.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Press the "Check Recommendations" button below to initiate the rules check. This can take a few minutes for large designs.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Check Recommendations (TimeQuest Timing Analyzer)" quartus_exe="quartus_sta">
oaw_qic_process_sta_timing.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
GEN
</recommendation_key>
<recommendation>
General Recommendations
</recommendation>
<recommendation_description>
The following recommendations are general recommendations for any design. Double-click a category to view the detailed recommendations and potential problems for that category. Categories that have been identified as potential problems are marked with a yellow warning icon.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="5">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
TIMING
</recommendation_key>
<recommendation>
Timing Recommendations
</recommendation>
<recommendation_description>
These recommendations help identify problems with the location of your critical paths.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
BOT_UP
</recommendation_key>
<recommendation>
Bottom-Up Design Recommendations
</recommendation>
<recommendation_description>
These recommendations are important when implementing logic in multiple projects as part of a bottom-up, or team-based, design flow.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
LOCKED_REG
</recommendation_key>
<recommendation>
Ensure all LogicLock Regions are Fixed and Locked
</recommendation>
<recommendation_description>
Ensure that all LogicLock regions in the design have a fixed size and have their origin locked to a specific location on the chip.
</recommendation_description>
<description>
If the bottom-up modules are not given pre-defined, unique locations on which to implement their logic, these modules are likely to place nodes at the same spot. For this reason, the regions must be assigned to fixed locations of known size.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	-1
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	In the LogicLock Window change all regions that are floating or auto-sized to locked to an origin and of fixed size. You may right-click the region and select "Set Size and Origin to Previous Fitter Results" to use the origin and size from the last compilation. This change is necessary to implement only regions that contain logic in a bottom-up partition. To see a list of regions that are not locked and fixed, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	LL
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	BOT_UP
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
REG_PORTS
</recommendation_key>
<recommendation>
Register All Non-Global Ports
</recommendation>
<recommendation_description>
Ensure that all non-global inputs and outputs that drive inter-partition connections are registered.
</recommendation_description>
<description>
Since inter-partition optimizations are not allowed, it is best to register all partition ports in an effort to keep critical paths within a single partition. By registering the ports, the length of the inter-partition register-to-register paths are kept to a minimum. Global signals may be left unregistered if appropriate.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	The modules with unregistered ports should be changed so that their ports are registered. To see a list of all unregistered ports, click the "Check Recommendations" button on the "Check Timing Independent" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
UNCONN_PORTS
</recommendation_key>
<recommendation>
Connect All Ports
</recommendation>
<recommendation_description>
Altera recommends that you not leave any ports unconnected because unconnected ports are usually a bad design practice.
</recommendation_description>
<description>
If a port is left unconnected, optimizations that could remove logic driving that port could improve results. However, these optimizations are not allowed in incremental design, since they involve cross-partition dependence. If you know that a port will not be connected, simply remove it from the module's interface.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Altera recommends that you either connect the ports to an appropriate node or remove them from the design. If you know the port should not be used, consider defining a wrapper module with a port interface that reflects this fact. To see a list of unconnected ports, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CONST_PORTS
</recommendation_key>
<recommendation>
Do Not Connect Ports to VCC or GND
</recommendation>
<recommendation_description>
Because inter-partition optimizations are not allowed, connecting a port to VCC or GND can results in sub-optimal results. 
</recommendation_description>
<description>
Generally when a module's port is driven by a constant (VCC or GND), logic optimizations can be made to improve the quality of results. However, since inter-partition optimizations are not allowed, it is not possible to take advantage of this fact because it would introduce an inter-partition dependence. Consequently, ports connected to ground should be removed from the module's interface
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	If the port is supposed to be connected to VCC or GND, replace the port with VCC or GND in the module's design. This allows optimizations that are forbidden if VCC or GND is connected through a port. To see a list of ports driven by constant values, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
REGION_SIZE
</recommendation_key>
<recommendation>
Avoid LogicLock Regions With Poor Utilization Levels
</recommendation>
<recommendation_description>
Regions should not have extremely high or low utilization of contained resources.
</recommendation_description>
<description>
Overly congested regions can lead to poor results, while regions that are too large result in wasted resources and can also lead to poor results. As a result, regions should not be made too tight or too loose
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Increase or decrease the size of the region to make it an appropriate size. To see a list of regions that should be resized, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	LL
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
OVERLAP_REG
</recommendation_key>
<recommendation>
Do Not Define Overlapping LogicLock Regions
</recommendation>
<recommendation_description>
Ensure that LogicLock regions in the design do not overlap with one another.
</recommendation_description>
<description>
If two bottom-up modules are allocated an overlapping portion of the chip, each may independently claim some common resources in this region. This overlap leads to resource conflicts when importing results into the final design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Move or re-size the regions so that they do not overlap with one another. This change is necessary only if either region contains logic to be implemented in a bottom-up partitions, but it is still recommended in other cases. To see a list of overlapping regions, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	LL
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	BOT_UP
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CRIT_PATH
</recommendation_key>
<recommendation>
Avoid Inter-partition Critical Paths
</recommendation>
<recommendation_description>
Inter-partition paths are difficult to optimize due to restrictions on inter-partition optimizations. Consequently, you should avoid defining partitions that result in inter-partition paths that are timing critical.
</recommendation_description>
<description>
If the most critical paths in the design are inter-partition paths, it is less likely that optimizations can be applied to improve timing on that path. As a result, paths that are likely to be critical should be contained within a single partition to allow as much optimization as possible. Note that the results presented here include only the 1000 most critical paths, for more detailed information please use the TimeQuest Timing Analyzer.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Consider removing the partitions involved in the critical path or merging them into a single partition if possible. If you cannot change the partitioning scheme, try to change the floorplan of the design to improve timing by bringing partitions on the critical paths near one another. To see a list of edges that cross partition boundaries, click the "Check Recommendations" button on the "Check Timing Dependent Recommendations" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	TIMING
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
LLR_OVERFLOW
</recommendation_key>
<recommendation>
Do Not Place Logic From Multiple Partitions in One LogicLock Region
</recommendation>
<recommendation_description>
Each LogicLock region should contain logic from only one partition. 
</recommendation_description>
<description>
Having only one partition's logic in each region helps prevent resource conflicts in bottom-up design and can lead to better performance preservation when locking down parts of a project in top-down design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Place the logic in separate regions or merge the partitions into a single partition. To see a list of LogicLock regions containing logic from more than one partition, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	LL
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	BOT_UP
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
SOFT_REG
</recommendation_key>
<recommendation>
Do Not Use Soft LogicLock Regions
</recommendation>
<recommendation_description>
Soft regions should not be used in incremental compilation. 
</recommendation_description>
<description>
If the bottom-up modules are not given pre-defined, unique locations to implement their logic, these modules are likely to place nodes at the same spot. For this reason, the regions must be assigned to fixed locations of known size. This issue is not the case with soft regions, and so they must be avoided.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	In the LogicLock Window for all soft regions, turn the "Soft" setting off. Right-click the region, click "Properties", click the "General" tab, and turn off "Soft". To see a list of regions that are soft, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	LL
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	BOT_UP
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CONNECTED_REG
</recommendation_key>
<recommendation>
Place Connected Regions Close Together
</recommendation>
<recommendation_description>
If two LogicLock regions have several connections between them, they should be placed near one another. This placement is especially important if any of the connections between the regions is timing critical.
</recommendation_description>
<description>
By placing connected regions near one another, the fitter has more opportunity to optimize inter-region paths. Reducing the criticality of inter-region paths also allows the fitter more flexibility when placing the other logic in each region. Note that the reported distance represents the Manhattan distance between the centers of the regions.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Move the reported regions closer to one another in an effort to improve timing. To see a list of regions that should be moved closer to one another, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
MULTI_PORT_DRIVER
</recommendation_key>
<recommendation>
Partition Ports Should Have Unique Drivers
</recommendation>
<recommendation_description>
Multiple ports on a single partition should not be driven by the same driver. 
</recommendation_description>
<description>
If the same driver feeds multiple ports of a partition, those ports are logically equivalent. However, because inter-partition optimizations are forbidden, the compilation of that partition cannot take advantage of this fact and the ports can no longer be merged. For example, if a single clock is used to drive the read and write clocks of the RAM block and if the RAM block is compiled separately in a bottom-up design flow, it appears that there are two unique clocks when there is really only one.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	If you know the port connectivity will not change (that is, the ports are always driven by the same driver), you should redefine the port interface so that only a single port exists. That port can then internally drive other logic in the partition. You can redefine the port interface by creating a wrapper module around the partition with fewer ports. To see a list of partitions with multiple ports driven by a common driver, click the "Check Recommendations" button on the "Check Timing Independent Recommendations" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="5">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CAPTURE_CRIT_PATH
</recommendation_key>
<recommendation>
Capture Critical Edges Inside A Partition
</recommendation>
<recommendation_description>
Partitions with timing critical logic should have more internal critical edges than external critical edges.
</recommendation_description>
<description>
The following table lists the number of critical inter-partition and intra-partition edges for each partition. If a partition has many critical paths that cross its boundaries, they are difficult to optimize. Capturing as many of the timing critical edges as possible inside a partition allows you to effectively apply optimizations to that partition in an effort to improve timing, while leaving the rest of the design intact. Note that the results presented here include only the 1000 most critical paths, for more detailed information please use the TimeQuest Timing Analyzer.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	If a partition has few internal critical edges and many external critical edges, it may be a bad partition. Also, partitions with many internal critical edges should be isolated and heavily optimized with Physical Synthesis and other tools to improve timing. To see a list of critical edge distribution in the partitions, click the "Check Recommendations" button on the "Check Timing Dependent Recommendations" panel.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	TIMING
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DIRECT_PORTS
</recommendation_key>
<recommendation>
Do Not Directly Connect Ports On A Module
</recommendation>
<recommendation_description>
If two ports on a given module are directly connected, the ports should be removed.
</recommendation_description>
<description>
If two ports on a module are directly connected, the ports are probably unnecessary. If you change the ports, you may allow some synthesis optimizations that could improve the quality of the compilation.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	If two ports on a module are directly connected, consider redefining the module to remove those ports. If an output port drives an input port on the same module, the connection can be made internally without going through any ports. If an input port drives an output port directly, the connection is simply a wire and can probably be implemented without the ports.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DSP_BUDGET
</recommendation_key>
<recommendation>
Constrain the number of DSPs to be used by each partition if multiple partitions use DSPs
</recommendation>
<recommendation_description>
If it is possible that partitioning will cause DSP overuse in the design, DSP usage should be limited by using the 'Max DSP Block Usage' assignment.
</recommendation_description>
<description>
Since partitions are synthesized in isolation, it is possible that the sum of all DSP resources used by partitions will exceed the available DSP resources on the chip.  If this happens, use the 'Max DSP Block Usage' assignment to limit the number of DSPs used by each partition.  Please note that you should restrict the usage for each partition by targeting the partition contents with the assignment as opposed to using the global version of the assignment.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the 'Max DSP Block Usage' assignment to create a DSP budget for each of your partitions.  Partitions constrained to fewer DSPs will tend to implement the multiplier functions in logic.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>
</optimization_record_list>
