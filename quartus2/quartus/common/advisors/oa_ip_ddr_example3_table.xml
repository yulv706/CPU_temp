<optimization_record_list>

<optimization_record>
<recommendation_key>
DDR_EXAMPLE3
</recommendation_key>
<recommendation>
Stratix III 400MHz DDR3 SDRAM Example
</recommendation>
<recommendation_description>
The following recommendations show a design flow to design a 8-bit wide 400-MHz/800-Mbps DDR3 SDRAM memory interface.
</recommendation_description>
<description>
DDR3 SDRAM Example
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="2">
	DDR_EXAMPLES
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
INFO
</recommendation_key>
<recommendation>
Information
</recommendation>
<recommendation_description>
The following recommendations show a design flow to design a 8-bit wide 400-MHz/800-Mbps DDR3 SDRAM memory interface.
</recommendation_description>
<description>
The following recommendations provide a walkthrough for how to use the FPGA-External Memory design flow to design a 8-bit wide, 400-MHz/800-Mbps DDR3 SDRAM memory interface. The example design will also provide some recommended settings, including termination scheme and drive strength setting in order to simplify the design.&lt;p&gt;This example can be found in AN:436 Design Guidelines for Implementing DDR3 SDRAM Interfacs in Stratix II Devices.
</description>
<more_info_link>
http://www.altera.com/literature/an/an436.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Follow the steps outlined in this example to design a 72-bit wide, 400-MHz/800-Mbps DDR3 SDRAM.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="1">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
DEV
</recommendation_key>
<recommendation>
Select Device
</recommendation>
<recommendation_description>
Select Device
</recommendation_description>
<description>
For this example design, choose the EP3SL150F1152-C2, which supports 8-bit wide DDR3 SDRAM at 400 MHz. For the memory device, choose an 8-bit wide, 32-MB DDR3 SDRAM device.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	N/A
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Select the EP3SL150F1152-C2 device.
	</action_description>
	<action_link>
	SETD_DEVICE
	</action_link>
	<acf_variable_list>
		<acf_variable name="DEVICE">
		EP3SL150F1152C2
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="10">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
INSTALL
</recommendation_key>
<recommendation>
Verify Installation
</recommendation>
<recommendation_description>
Verify that ALTMEMPHY is installed?
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	NA
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="HIDE">
		
		</acf_variable>
</conditions>
<image_path>
NA
</image_path>
<parent_list>
	<parent priority="11">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
INSTANTIATE
</recommendation_key>
<recommendation>
Instantiate PHY and Controller
</recommendation>
<recommendation_description>
Run the ALTMEMPHY megafunction to instaniate the PHY and Controller.
</recommendation_description>
<description>
For this example design, instantiate the ALTMEMPHY megafunction using the MegaWizard Plug-In Manager. Find the ALTMEMPHY megafunctionin the I/O section of the MegaWizard Plug-In Manager.&lt;p&gt;For this example, choose ddr3_phy to be the name of the ALTMEMPHY megafunction. You must choose this name for the following recommendations to work correctly.&lt;p&gt;AFter the ALTMEMPHY megafunction is invoked, configure the ALTMEMPHY megafunction to interface with a DDR3 SDRAM memory interface.&lt;p&gt;In the ALTMEMPHY megafunction Memory Settings panel, set the Speed grade fo the Stratix III device used in the design to 2. For this example, select the available memory preset for an 8-bit wide, 32-MB preliminary DDR3 SDRAM device.&lt;p&gt;For this example you can use the default values for all of the other settings.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Click the link below to launch the MegaWizard Plug-in Manager.&lt;p&gt;-Select ALTMEMPHY from the IO category.&lt;p&gt;-Name the output file "ddr3_phy"&lt;p&gt;-Set the Speed grade to "2"&lt;p&gt;-Set the Memory clock frequency to "400"&lt;p&gt;-Set the Memory type to "DDR3 SDRAM"&lt;p&gt;-Select the 256mb x8 memory preset&lt;p&gt;Use the default values for the rest of the options and click Finish to generate the ALTMEMPHY.
	</action_description>
	<action_link>
	MEGAWIZ
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="20">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
RTL_SIM
</recommendation_key>
<recommendation>
Perform RTL/Functional Simulation (Optional)
</recommendation>
<recommendation_description>
Pefrom RTL/Functional Simulation
</recommendation_description>
<description>
During the instantiation of the ALTMEMPHY megafunction, there is an option to generate a simulation model of the ALTMEMPHY megafunction so you can perform functional simulation on your design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Run the simulation
	</action_description>
	<action_link>
	SIM
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="21">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD
</recommendation_key>
<recommendation>
Add Constraints
</recommendation>
<recommendation_description>
The following recommendations will add the correct constraints.
</recommendation_description>
<description>
Add Constraints
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="22">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD_TIMING
</recommendation_key>
<recommendation>
Add Timing Constraints
</recommendation>
<recommendation_description>
Add the timing constraint file to the project.
</recommendation_description>
<description>
Instantiating the ALTMEMPHY megafunction generates constraints files for the design. The timing constraint file, ddr3_py_ddr_timing.sdc, constrains the clock and input/output delay on the ALTMEMPHY megafunction.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	To add the timing constraints, go to the Assignments menu and click the Settings option. In the Settings dialog box, under Timing Analysis Settings, select the TimeQuest Timing Analyzer option. Select the SDC file and click Add.
	</action_description>
	<action_link>
	SETD_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="SDC_FILE">
		ddr3_phy_ddr_timing.sdc
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="1">
	ADD
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD_PIN
</recommendation_key>
<recommendation>
Add Pin Assignments
</recommendation>
<recommendation_description>
Run the tcl script to add pin assignments
</recommendation_description>
<description>
The pin assignment script, ddr3_phy_pin_assignments.tcl, sets up the I/O standards for the DDR3 SDRAM memory interface.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Run the ddr3_phy_pin_assignments.tcl to add the pin assignments.&lt;p&gt;You can either click below to run the script directly or open the Tcl Scripts dialog  to run them manually.
	</action_description>
	<action_link>
	TCL_SCRIPTS
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="2">
	ADD
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Add Pin Assignments" quartus_exe="">
ddr3_phy_pin_assignments.tcl;
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD_DQ
</recommendation_key>
<recommendation>
Add DQ Group Assignments
</recommendation>
<recommendation_description>
Run the tcl script to add DQ group assignments.
</recommendation_description>
<description>
The DQ group assignment script, ddr3_phy_assign_dq_groups.tcl, relates the DQ and DQS pin groups together for the Quartus II fitter to place them correctly. 
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	N
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Run the ddr3_phy_assign_dq_groups.tcl to add the I/O standards and DQ group assignments to the example design.&lt;p&gt;You can either click below to run the script directly or open the Tcl Scripts dialog  to run them manually.
	</action_description>
	<action_link>
	TCL_SCRIPTS
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="3">
	ADD
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Add DQ Group Assignments" quartus_exe="">
ddr3_phy_assign_dq_groups.tcl;
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD_TOP
</recommendation_key>
<recommendation>
Set top-level entity
</recommendation>
<recommendation_description>
Set the top-level entity to be the sample design file.
</recommendation_description>
<description>
Before compiling the design, set the top level entity of the project to the design generated by the ALTMEMPHY megafunction. In this case, the design is called ddr3_phy.v.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the top-level file to the ddr3_phy.v. You can do this on the general page of the Settings dialog box, or by opening the file and using the  Set as Top-Level Entity in the Project menu.
	</action_description>
	<action_link>
	SETD
	</action_link>
	<acf_variable_list>
		<acf_variable name="TOP_LEVEL_ENTITY">
		ddr3_phy
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="4">
	ADD
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD_OPT
</recommendation_key>
<recommendation>
Set Optimization Technique
</recommendation>
<recommendation_description>
Set Analysis and Synthesis to optimize hold timing ao all paths.
</recommendation_description>
<description>
Set up the Quartus II software to ensure the remaining unconstrained paths are routed with the highest speed and efficiency by setting the Optimization technique to Speed.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Optimization Technique to the Speed setting. To do this, click the Assignments tab in the Quartus II software and select Settings. Click Analysis and Synthesis Settings to check the Optimization Techinique in Quartus II.
	</action_description>
	<action_link>
	SETD_ANALYSIS_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="OPTIMIZE_HOLD_TIMING">
		ALL PATHS
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="5">
	ADD
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADD_FIT_EFF
</recommendation_key>
<recommendation>
Set Fitter Effort
</recommendation>
<recommendation_description>
Set the Fitter effort to Auto Fit
</recommendation_description>
<description>
To ensure that the correct fitter effort, the   fitter effort should be set to "Auto Fit"
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	N
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Fitter Effort to the "Auto Fit". To do this, click the Assignments tab in the Quartus II software and select Settings. Click Fitter Settings to check the Fitter effort in Quartus II.
	</action_description>
	<action_link>
	SETD_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="FITTER_EFFORT">
		AUTO FIT
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="6">
	ADD
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
CMP
</recommendation_key>
<recommendation>
Compile Design
</recommendation>
<recommendation_description>
Compile your design
</recommendation_description>
<description>
Once your design instantiates the ALTMEMPHY you can compile the design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Compile the design
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="30">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Start Compilation" quartus_exe="quartus_sh">
dummy.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
VERIFY
</recommendation_key>
<recommendation>
Verify Timing Closure
</recommendation>
<recommendation_description>
Verify timing closure
</recommendation_description>
<description>
After successfully compiling the design in the Quartus II software, run the timing reporting script generated by the ALTMEMPHY megafunction during the megafunction instantiation called ddr3_phy_report_timing.tcl, which will produce the timing report for the design.&lt;p&gt;Running the report timing script reports the following margins on the following paths:&lt;p&gt;Address/command setup and hold margin&lt;p&gt;Half rate address/command setup and hold margin&lt;p&gt;Core setup and hold margin&lt;p&gt;Core reset/removal setup and hold margin&lt;p&gt;Write setup and hold margin&lt;p&gt;Read capture setup and hold margin&lt;p&gt;The report timing script does not perform timing analysis on the write/read leveling circuitry datapath of the DDR3 SDRAM as the timing of these datapaths is guaranteed correct by design.&lt;p&gt;Refer to AN438: Constraining and Analyzing Timing for External Memory Interfaces for detailed information on timing analysis and reporting using the ALTMEMPHY megafunction.
</description>
<more_info_link>
http://www.altera.com/literature/an/an438.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Run the timing script, ddr3_phy_report_timing.tcl. You can run the script direclty by pressing the button below or you can run it manually either in the Tcl Scripts dialog box or in the TimeQuest Timing Analyzer.
	</action_description>
	<action_link>
	TCL_SCRIPTS
	</action_link>
	<action_link>
	TIMEQUEST
	</action_link>
	<action_link>
	TRPT
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="31">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="Report Timing" quartus_exe="quartus_sh">
ddr3_phy_report_timing.tcl;
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ADJUST
</recommendation_key>
<recommendation>
Adjust Constraints
</recommendation>
<recommendation_description>
Adjust Constraints
</recommendation_description>
<description>
The timing margin report shows that there is positive setup and hold margin in both the address/command, read and write datapath. However, the hold time on the address/command datapath is quite small. Adjusting the clock that is feeding the address/command output registers can improve the hold margin on the address/command datapath. To find out which clock is clocking the address/command registers, click on the address/command report in the Report secion in the TimeQuest Timing Analyzer window and select the path that indicates the minimum hold time. &lt;p&gt;This report indicates that clk6 of the PLL is the clock that is clocking the address/command registers. Go to the PLL megafunction and change the phase setting of clk6. for this design, the initial phase setting of clk6 is set to 315 degrees resulting in the address/command being launched too early and resulting in a small hold time. The hold margin reported is 14 ps, so delay clk6 by increasing the phase setting. For this example, clk6 is 200 MHz. To increase the hold margin, delay clk6 to 330 degrees. 15 degrees delay in clk6 results in an increase in the hold margin by 208 ps which results in a final hold margin of 222 ps.&lt;p&gt;After modifying the clk6 phase setting, recompile the design for the new PLL setting to take effect and run the report timing script again.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	not sure what the actions should be, timing report, open wizard, timing script again?
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="32">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
BOARD
</recommendation_key>
<recommendation>
Determine Board Design Constraints
</recommendation>
<recommendation_description>
Review the following recommendations about board design constraints
</recommendation_description>
<description>
Determine Board Design Constraints
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="33">
	DDR_EXAMPLE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
OCT
</recommendation_key>
<recommendation>
On-Chip Termination Resistors
</recommendation>
<recommendation_description>
Choose between series and parallel on-chip termination (OCT) resistors to improve signal integrity.
</recommendation_description>
<description>
The Stratix III devices support both series and parallel on-chip termination (OCT) resistors to imporve signal integrity. Another benefit of using the Stratix III OCT features is eliminating the need for external termination resistors on the FPGA side, which simplifies board design and reduces overall board cost. You can dynamically switch between the series and parallel OCT resistor depending on whether the Stratix III devices are performin a write or a read operation. The OCT features offer user-mode calibration to compensate for any variation in voltage and temperature during normal operation to ensure that the OCT values remain constant. The parallel and series OCT features on the Stratix III devices are availiable in either 25 ohm or 50 ohm settings.&lt;p&gt;Refer to the Selectable I/O Standards in Stratix III chapter of the FPGA Device Handbook for information on the OCT features.
</description>
<more_info_link>
TBD
</more_info_link>
<effect_list>
	<fmax_effect>
	N/A
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="1">
	BOARD
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
ODT
</recommendation_key>
<recommendation>
Output driver impedance control
</recommendation>
<recommendation_description>
To further improve signal integrity, DDR3 SDRAM supports output driver impedance control so the driver impedance will match the transmission line.
</recommendation_description>
<description>
On the DDR3 SDRAM, there is a dynamic parallel on-die termination feature that can be turned on when the FPGA is writing to the DDR3 SDRAM memory and turned off when the FPGA is reading from the DDR3 SDRAM memory. To further improve signal integrity, DDR3 SDRAM supports output driver impedance control so the driver impedance will match the transmission line. The ODT and output driver impedance features are programmable and are controlled by an external resistor, RZQ where the recommended value is 240 ohms with +-1 percent tolerance. For the ODT feature, there are 2 settings for parallel on-die termination (RTT_WR and RTT_NOM). RTT_NOM is used when the ODT signal going to the memory is asserted and there is not a write operation occurring to that chip; RTT_WR is used when the ODT signal going to the memory is asserted and a write is occurring on that specific chip.&lt;p&gt;The output driver impedance is used during reads and is achieved by deasserting the ODT pin on the memory device.&lt;p&gt; Refer to the DDR3 SDRAM datasheet for additional information on available settings of the ODT and the output driver impedance features, and the timing requirements for driving the ODT pin.
</description>
<more_info_link>
TBD
</more_info_link>
<effect_list>
	<fmax_effect>
	N/A
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="2">
	BOARD
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
OTHER
</recommendation_key>
<recommendation>
Other board-related settings
</recommendation>
<recommendation_description>
Other board-related settings
</recommendation_description>
<description>
We could add other items of interest...
</description>
<more_info_link>
TBD
</more_info_link>
<effect_list>
	<fmax_effect>
	N/A
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>

</image_path>
<parent_list>
	<parent priority="3">
	BOARD
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>
</optimization_record_list>
