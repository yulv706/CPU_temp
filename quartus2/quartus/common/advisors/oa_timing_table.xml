<optimization_record_list>

<optimization_record>
<recommendation_key>
NONE
</recommendation_key>
<recommendation>
Timing Summary
</recommendation>
<recommendation_description>
NA
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	NA
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="">
	NA
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
GEN
</recommendation_key>
<recommendation>
General Recommendations
</recommendation>
<recommendation_description>
The following recommendations are general recommendations for any design. Double-click a category to view the recommendations for that category.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FMAX
</recommendation_key>
<recommendation>
Maximum Frequency (fmax)
</recommendation>
<recommendation_description>
The recommendations for improving maximum frequency (fmax) are divided into three stages. Double-click on a stage to get the specific recommendations for that stage.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IO
</recommendation_key>
<recommendation>
I/O Timing (tsu, tco, tpd)
</recommendation>
<recommendation_description>
The following recommendations are provided to improve I/O timing (tsu, tco, tpd). Double-click a category to view the recommendations for that category.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
MDT
</recommendation_key>
<recommendation>
Hold Time &amp; Minimum Delay Timing
</recommendation>
<recommendation_description>
The following recommendations are provided to improve Hold Time &amp; Minimum Delay Timing. Double-click a category to view the recommendations for that category.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
RRT
</recommendation_key>
<recommendation>
Recovery &amp; Removal Timing
</recommendation>
<recommendation_description>
The following recommendations are provided to improve Recovery &amp; Removal Timing. Double-click a category to view the recommendations for that category.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="PHYSICAL_SYNTHESIS_ASYNCHRONOUS_SIGNAL_PIPELINING">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="ENABLE_RECOVERY_REMOVAL_ANALYSIS">
		ON
		</acf_variable>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="5">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FMAX_STAGE1
</recommendation_key>
<recommendation>
Stage 1
</recommendation>
<recommendation_description>
The following are recommendations for Stage 1. Altera recommends implementing the recommendations in Stage 1 before the recommendations in Stage 2 and Stage 3.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	FMAX
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FMAX_STAGE2
</recommendation_key>
<recommendation>
Stage 2
</recommendation>
<recommendation_description>
The following are recommendations for Stage 2. Altera recommends implementing the recommendations in Stage 2 after the recommendations in Stage 1 and before those in Stage 3.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	FMAX
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
FMAX_STAGE3
</recommendation_key>
<recommendation>
Stage 3
</recommendation>
<recommendation_description>
The following are recommendations for Stage 3. Altera recommends implementing the recommendations in Stage 3 after the recommendations in Stage 1 and Stage 2.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	FMAX
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
IO_CLOCK
</recommendation_key>
<recommendation>
Use clock options
</recommendation>
<recommendation_description>
The following are the clock related options to improve the I/O timing. Decreasing the time for the clock signal to get from the input clock pin to an I/O register will decrease Tco and Th timing but can increase Tsu timing.  Using a Global Clock is a good method for doing this.  If your device supports Fast Regional Clocks, a Fast Regional Clock is even quicker. If your device supports PLL, a PLL under default conditions is even better, giving the best Tco timing.  Note that a PLL can be phase adjusted to balance Tco's against Tsu's, providing tight control for optimizing these numbers.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	IO
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
HOWTO
</recommendation_key>
<recommendation>
How to use the Timing Optimization Advisor
</recommendation>
<recommendation_description>
Implement the recommendations in the Timing Optimization Advisor to optimize the maximum frequency (fmax) and I/O timing of your design.
</recommendation_description>
<description>
The Timing Optimization Advisor provides a set of recommendations for each design resource category. Altera recommends following the specific order of the recommendations when optimizing timing for your design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the recommendations provided by the Timing Optimization Advisor to make project or individual settings and assignments, or make design changes to optimize the timing of your design.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="0">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
INFO
</recommendation_key>
<recommendation>
Get more information
</recommendation>
<recommendation_description>
You can use the Support section of the Altera web site or Quartus II Help to obtain more information on the specific recommendations and Quartus II settings and assignments in the Timing Optimization Advisor.
</recommendation_description>
<description>
You can find many of the recommendations in the Timing Optimization Advisor in the Design Optimization for Altera Devices chapter of the Quartus II Handbook. You can also get help on the specific settings and assignments described in the Timing Optimization Advisor by using Quartus II Help.
</description>
<more_info_link>
http://www.altera.com/literature/hb/qts/qts_qii52005.pdf
</more_info_link>
<effect_list>
	<fmax_effect>
	 N/A
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	For more information, use the Design Optimization for Altera Devices chapter of the Quartus II Handbook or Quartus II Help.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R001
</recommendation_key>
<recommendation>
Create a revision
</recommendation>
<recommendation_description>
Create a revision before making the recommended project and individual settings and assignments and design changes.
</recommendation_description>
<description>
You can create a revision before implementing the recommendations in the Timing Optimization Advisor, and then compare the revisions after performing a compilation to view the results.
</description>
<more_info_link>
save.chm::/rev/rev_pro_create.htm
</more_info_link>
<effect_list>
	<fmax_effect>
	 N/A
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Create a revision using the Revisions dialog box (Project Menu), make the recommended changes, perform a compilation, and then view the results of the compilation using the Compare Revisions dialog box (Project menu).
	</action_description>
	<action_link>
	REV
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R002
</recommendation_key>
<recommendation>
Use smart compilation
</recommendation>
<recommendation_description>
Turn on smart compilation to minimize compilation time.
</recommendation_description>
<description>
During a recompilation after a smart compilation, the Compiler determines which Compiler modules are required to process the current design based on the changes made to the design since the smart compilation, and then skips any modules that are not required. Refer to Use Smart Compilation in Quartus II Help using the link below.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Use smart compilation in the Compilation Process page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_COMPILATION
	</action_link>
	<acf_variable_list>
		<acf_variable name="SMART_RECOMPILE">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R003
</recommendation_key>
<recommendation>
Review timing constraints
</recommendation>
<recommendation_description>
An important step in obtaining the highest performance is the application of detailed timing constraints. Timing constraints will affect both timing and logic placement and allow you to specify the desired speed performance for the entire project and specific entities.
</recommendation_description>
<description>
Every clock signal should have an accurate clock setting assignment. All I/Os for which tsu or tco is to be optimized should also have settings. It is important to make any complex timing assignments according to the needs of the design, including multicycle and cut-timing path assignments. This information allows the Quartus II software to make appropriate trade-offs between paths.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Adding timing constraints will help Quartus II to compile and analyze your design
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Make project-wide timing constraints using the Timing Requirements &amp; Options page of the Settings dialog box (Assignments menu) or using the Timing Wizard (Assignments menu), and make individual timing assignments using the Assignment Editor (Assignments menu).
	</action_description>
	<action_link>
	SETD_TIMING
	</action_link>
	<action_link>
	TWIZ
	</action_link>
	<action_link>
	AE_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		^ON
		</acf_variable>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="5">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R004
</recommendation_key>
<recommendation>
Use the Design Assistant
</recommendation>
<recommendation_description>
Run the Design Assistant as part of the compilation to make sure there are no design issues that may affect the timing of your design.
</recommendation_description>
<description>
You can use the Design Assistant to check the reliability of a design based on a set of design rules. The Design Assistant can analyze and generate messages for a design that targets any Altera device supported by the Quartus II software.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Better analysis of your design
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on the Design Assistant in the Design Assistant page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_DESIGN_ASSISTANT
	</action_link>
	<acf_variable_list>
		<acf_variable name="ENABLE_DRC_SETTINGS">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R005
</recommendation_key>
<recommendation>
Specify Fitter effort
</recommendation>
<recommendation_description>
Use Auto Fit or Standard Fit to meet timing requirements.
</recommendation_description>
<description>
You can adjust how much effort the fitter uses to get a fit on your design. Standard fit will try to maximize the design's timing performance. Auto Fit will try to meet a design's timing requirements without spending extra effort to exceed those requirements. The fast fit feature reduces the Fitter effort so that compilation time is shorter, but timing performance may be reduced.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Fitter Effort to Auto Fit if it is currently set to Fast Fit, or set the Fitter Effort to Standard Fit if it is currently set to Auto Fit in the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="FITTER_EFFORT">
		Standard Fit|Auto Fit
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	FMAX_STAGE1
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R006
</recommendation_key>
<recommendation>
Turn off restructure multiplexers
</recommendation>
<recommendation_description>
Turn off the Restructure Multiplexers option
</recommendation_description>
<description>
Turning off restructure multiplexers will increase resource usage but can have a very good effect on timing.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn off Restructure Multiplexers in the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignments menu). The Auto setting means it's on when optimization technique is set to area, and off for speed and balanced.
	</action_description>
	<action_link>
	SETD_ANALYSIS_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="MUX_RESTRUCTURE">
		OFF
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	Cyclone
	</device_family>
	<device_family exclude="">
	Cyclone II
	</device_family>
	<device_family exclude="">
	Stratix
	</device_family>
	<device_family exclude="">
	Stratix GX
	</device_family>
	<device_family exclude="">
	Stratix II
	</device_family>
	<device_family exclude="">
	HardCopy Stratix
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	FMAX_STAGE1
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R007
</recommendation_key>
<recommendation>
Optimize for speed
</recommendation>
<recommendation_description>
Direct Quartus II Integrated Synthesis to optimize the design for speed.
</recommendation_description>
<description>
Most synthesis tools will optimize a design to meet your speed requirements. Some synthesis tools offer an easy way to optimize for speed instead of area. The Quartus II software can optimize a design for speed, choosing a design implementation that has the fastest maximum frequency (fmax).
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	For Quartus II Integrated Synthesis, choose Speed under Optimization Technique in the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignments). It is also recommended to set the optimization technique to Balanced if it is currently set to Area. Balanced technique gives better fmax than Area, worse than Speed. But resource usage is better than with Speed (worse than with Area). You can also specify the Optimization Technique logic option for specific entities in your design using the Assignment Editor (Assignments menu), while leaving the project Optimization Technique setting at Balanced (for the best trade off between area and speed for certain device families) or Area (if area is an important concern).
	</action_description>
	<action_link>
	SETD_ANALYSIS_SYNTHESIS
	</action_link>
	<action_link>
	AE_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="STRATIXII_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="CYCLONE_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="STRATIX_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="MAXII_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="MAX7000_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="APEX20K_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="MERCURY_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="MERCURY_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
		<acf_variable name="FLEX10K_OPTIMIZATION_TECHNIQUE">
		SPEED
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	FMAX_STAGE1
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R008
</recommendation_key>
<recommendation>
Use netlist optimizations
</recommendation>
<recommendation_description>
Use WYSIWYG primitive resynthesis to optimize the design netlist during synthesis.
</recommendation_description>
<description>
These synthesis netlist optimizations occurs during the synthesis stage of the compilation. Operating on the output from either an EDA synthesis tool or Quartus II Integrated Synthesis, these optimizations make changes to the synthesis netlist that improve either area or speed, depending on your selected optimization technique. WYSIWYG primitive resynthesis unmaps the logic elements in an atom netlist to gates and remaps the gates back to Altera LCELL primitives, using the logic optimization technique (achieving maximum speed performance or achieving minimum area) you specified in the Optimization Technique logic option.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Perform WYSIWYG primitive resynthesis in the Analysis &amp; Synthesis Settings page, in the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_SYNTHESIS_NETLIST
	</action_link>
	<acf_variable_list>
		<acf_variable name="ADV_NETLIST_OPT_SYNTH_WYSIWYG_REMAP">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="5">
	FMAX_STAGE1
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R009
</recommendation_key>
<recommendation>
Use global clocks 
</recommendation>
<recommendation_description>
Use global clocks to improve timing
</recommendation_description>
<description>
Besides minimizing the delay from the register to output pin, minimizing the delay from the clock pin to the register can also improve the tco timing. Altera recommends that you always use the global clock for low-skew and speed-critical signals.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the Assignment Editor (Assignments menu) and the Global Signal option to assign the clocks in your design to global clocks.
	</action_description>
	<action_link>
	AE_GLOBALS
	</action_link>
	<acf_variable_list>
		<acf_variable name="GLOBAL_SIGNAL">
		Global Clock
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	FMAX_STAGE1
	</parent>
	<parent priority="1">
	IO_CLOCK
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List all clocks" quartus_exe="quartus_sh">
oaw_list_global_clocks.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R010
</recommendation_key>
<recommendation>
Turn on Auto Global Clock 
</recommendation>
<recommendation_description>
Turn on the Auto Global Clock option to improve design timing.
</recommendation_description>
<description>
Turning on the Auto Global Clock option allows the Compiler to choose the signals that feed the most write enable and read enable inputs to memories as global write enable and read enable signals that are made available throughout the device on the global routing paths.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Auto Global Clock in the More Fitter Settings dialog box, available from the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="AUTO_GLOBAL_CLOCK">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	FMAX_STAGE1
	</parent>
	<parent priority="2">
	IO
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R011
</recommendation_key>
<recommendation>
Constrain the clocks
</recommendation>
<recommendation_description>
An important step in obtaining the highest performance is the application of detailed timing constraints. Timing constraints will affect both timing and logic placement and allow you to specify the desired speed performance for the entire project, for specific design entities, or for individual nodes and pins.
</recommendation_description>
<description>
Every clock signal should have an accurate clock setting assignment. All I/Os for which tsu or tco is to be optimized should also have settings. It is important to make any complex timing assignments according to the needs of the design, including multicycle and cut-timing path assignments. This information allows the Quartus II software to make appropriate trade-offs between paths.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Make project-wide timing constraints using the Timing Requirements &amp; Options page of the Settings dialog box (Assignments menu) or using the Timing Wizard (Assignments menu), and make individual timing assignments using the Assignment Editor (Assignments menu).
	</action_description>
	<action_link>
	TWIZ
	</action_link>
	<action_link>
	SETD_TIMING
	</action_link>
	<action_link>
	AE_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		^ON
		</acf_variable>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="8">
	FMAX_STAGE1
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="List all clocks" quartus_exe="quartus_tan">
oaw_list_unconstrained_clocks.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R013
</recommendation_key>
<recommendation>
Turn on Allow XOR Gate Usage
</recommendation>
<recommendation_description>
The Allow XOR Gate Usage option can help optimize your design for speed.
</recommendation_description>
<description>
The Allow XOR Gate Usage option allows the Compiler to use the XOR gate that exists in a macrocell (that is, in an embedded cell within an Embedded System Block (ESB) that is set to use Product Term mode).
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Allow XOR Gate Usage in the More Analysis &amp; Synthesis Settings dialog box, available from the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_ANALYSIS_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="ALLOW_XOR_GATE_USAGE">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	FMAX_STAGE2
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R014
</recommendation_key>
<recommendation>
Turn on Ignore LCELL Buffers
</recommendation>
<recommendation_description>
The Ignore LCELL Buffers option can help optimize your design for speed.
</recommendation_description>
<description>
The Ignore LCELL Buffers option directs the Quartus II software to ignore any LCELL buffers that are instantiated in your design.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on  Ignore LCELL Buffers in the More Analysis &amp; Synthesis Settings dialog box, available from the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_ANALYSIS_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="IGNORE_LCELL_BUFFERS">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	FMAX_STAGE2
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R015
</recommendation_key>
<recommendation>
Use fast regional clocks
</recommendation>
<recommendation_description>
Fast regional clocks have less delay to I/O elements than global or regional clock networks.
</recommendation_description>
<description>
Stratix EP1S25, EP1S20, and EP1S10 devices and Stratix GX EP1SGX10 and EP1SGX25 devices contain two fast regional clock networks, FCLK[1..0], within each quadrant, fed by input pins that can connect to fast regional clock networks. In Stratix EP1S30, Stratix GX EP1SGX40, as well as larger devices in both families, there are two fast regional clock networks within each half-quadrant. Dedicated FCLK input pins can feed these clock nets directly. Fast regional clocks have less delay to I/O elements than regional or global clocks and are used for high fan-out control signals. Placing clocks on fast regional clock nets provides better tco performance.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the Assignment Editor (Assignments menu) and the Global Signal option to assign the clock networks in your design to fast regional clocks.
	</action_description>
	<action_link>
	AE_GLOBALS
	</action_link>
	<acf_variable_list>
		<acf_variable name="GLOBAL_SIGNAL">
		Fast Regional Clock
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	Stratix
	</device_family>
	<device_family exclude="">
	Stratix GX
	</device_family>
	<device_family exclude="">
	Stratix II
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="2">
	IO_CLOCK
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List all clocks" quartus_exe="quartus_sh">
oaw_list_fanout_global_clocks.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R016
</recommendation_key>
<recommendation>
Use dedicated inputs and global signals
</recommendation>
<recommendation_description>
Use dedicated inputs and global signals for high fan-out signals.
</recommendation_description>
<description>
The dedicated inputs in MAX devices are designed for speed-critical and high fan-out signals. Therefore, Altera recommends that you always assign high fan-out signals to use dedicated inputs and global signals.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the Assignment Editor (Assignments menu) to assign global signals and dedicated inputs to control signals.
	</action_description>
	<action_link>
	AE_GLOBALS
	</action_link>
	<acf_variable_list>
		<acf_variable name="GLOBAL_SIGNAL">
		ANY
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	MAX3000A
	</device_family>
	<device_family exclude="">
	MAX7000A
	</device_family>
	<device_family exclude="">
	MAX7000AE
	</device_family>
	<device_family exclude="">
	MAX7000B
	</device_family>
	<device_family exclude="">
	MAX7000S
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="5">
	FMAX_STAGE2
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List high fan-out signals" quartus_exe="quartus_sh">
oaw_list_high_fanout_signals.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R017
</recommendation_key>
<recommendation>
Use physical synthesis optimizations
</recommendation>
<recommendation_description>
The Quartus II software provides physical synthesis optimizations (for combinational logic and registers) to optimize the netlist during synthesis and fitting.
</recommendation_description>
<description>
The physical synthesis optimizations are performed by Analysis &amp; Synthesis and the Fitter. Physical synthesis optimizations make placement-specific changes to the netlist that improve speed performance results for a specific Altera device.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Physical synthesis for combinational logic or Physical synthesis for registers in the Physical Synthesis Optimizations page under Compilation Process Settings in the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_PHYSICAL_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="PHYSICAL_SYNTHESIS_COMBO_LOGIC">
		ON
		</acf_variable>
		<acf_variable name="PHYSICAL_SYNTHESIS_REGISTER_DUPLICATION">
		ON
		</acf_variable>
		<acf_variable name="PHYSICAL_SYNTHESIS_REGISTER_RETIMING">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	FMAX_STAGE2
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R018
</recommendation_key>
<recommendation>
Turn on Auto Parallel Expanders
</recommendation>
<recommendation_description>
Use parallel expanders to improve timing results.
</recommendation_description>
<description>
Turning on the parallel expanders for individual nodes or entities can increase the performance of complex logic functions. However, if the pin or logic cell assignments for the project use parallel expanders placed physically together with macrocells (which can reduce routability), parallel expanders can cause the Quartus II Compiler to have difficulties finding and optimizing a fit. Additionally, the amount of macrocells required to implement the design will also increase and result in an unsuccessful fit if the device's resources are limited.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on the Auto Parallel Expanders option for the project in the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignment menu) or for specific design entities using the Assignment Editor (Assignments menu).
	</action_description>
	<action_link>
	SETD_ANALYSIS_SYNTHESIS
	</action_link>
	<action_link>
	AE_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="AUTO_PARALLEL_EXPANDERS">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	FMAX_STAGE2
	</parent>
	<parent priority="4">
	IO
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R019
</recommendation_key>
<recommendation>
Run the Design Space Explorer
</recommendation>
<recommendation_description>
Run the Design Space Explorer to explore timing improvement options.
</recommendation_description>
<description>
The Quartus II software includes the Design Space Explorer (DSE) Tcl/Tk script for automating successive compilations of a design, each employing different design options. Use the Design Space script as appropriate to automate successive compilations of a design, each employing the different netlist optimization options, seeds, and synthesis options.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Run the Design Space Explorer (Tools menu).
	</action_description>
	<action_link>
	DSE
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
3
</image_path>
<parent_list>
	<parent priority="8">
	FMAX_STAGE2
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R020
</recommendation_key>
<recommendation>
Flatten the hierarchy
</recommendation>
<recommendation_description>
Remove hierarchical boundaries during synthesis.
</recommendation_description>
<description>
Synthesis tools typically provide you the option of preserving hierarchical boundaries, which may be useful for verification or other purposes. However, optimizing across hierarchical boundaries allows the synthesis tool to perform the most logic minimization, which may improve performance.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	-1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	For Quartus II Integrated Synthesis, make sure no design entities have the Preserve Hierarchical Boundary logic option set, or if there is such a setting, the value is set to OFF, using the Assignment Editor (Assignments menu).
	</action_description>
	<action_link>
	AE_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="PRESERVE_HIERARCHICAL_BOUNDARY">
		OFF
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R021
</recommendation_key>
<recommendation>
Set high synthesis effort
</recommendation>
<recommendation_description>
If you are using an EDA synthesis tool, increase the synthesis effort.
</recommendation_description>
<description>
Some EDA synthesis tools offer varying synthesis effort levels to trade off compile time with synthesis results. Set the synthesis effort to high to achieve best results
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	If you are using an EDA synthesis tool, check if there is a synthesis effort option available. The Quartus II software always uses the highest synthesis effort.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R022
</recommendation_key>
<recommendation>
Change state machine encoding
</recommendation>
<recommendation_description>
Use one-hot encoding of state machines.
</recommendation_description>
<description>
State machines can be encoded using various techniques. Using one-hot encoding, which uses one register for every state bit, usually provides the best performance. If your design contains state machines, changing the state machine encoding to one-hot can improve performance at the cost of area
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	If your design does not manually encode the state bits, you can select the state machine encoding chosen in your synthesis tool. In Quartus II Integrated Synthesis, choose One-Hot for State Machine Processing on the Analysis &amp; Synthesis Settings page of the Settings dialog box (Assignments menu). You can also specify this logic option for specific entities or state machines in your design with the Assignment Editor (Assignments menu).
	</action_description>
	<action_link>
	SETD_ANALYSIS_SYNTHESIS
	</action_link>
	<action_link>
	AE_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="STATE_MACHINE_PROCESSING">
		One-Hot
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List all state machines" quartus_exe="quartus_sh">
oaw_list_state_machines.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R023
</recommendation_key>
<recommendation>
Duplicate logic for fan-out control
</recommendation>
<recommendation_description>
Duplicate logic or registers to improve fan-out.
</recommendation_description>
<description>
Duplicating logic or registers can help improve timing in cases where moving a register in a failing timing path to reduce routing delay creates other failing paths, or where there are timing problems due to the excessive fan-out of registers.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Many EDA synthesis tools support options or attributes to set the maximum fan-out of a register. In Quartus II Integrated Synthesis, you can set the Maximum Fan-Out logic option in the Assignment Editor (Assignments menu) to control the number of destinations for a node so the fan-out count does not exceed a specified value. You can also use the maxfan attribute in your HDL code. The Quartus II software duplicates the node as needed to achieve the specified maximum fan-out. You can manually duplicate registers in the Quartus II software regardless of the synthesis tool used. To duplicate a register, assign the Manual Logic Duplication logic option to the register with the Assignment Editor.
	</action_description>
	<action_link>
	AE_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="MAX_FANOUT">
		ANY
		</acf_variable>
		<acf_variable name="DUPLICATE_ATOM">
		ANY
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="4">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List all registers" quartus_exe="quartus_tan">
oaw_list_fanout_regs.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R024
</recommendation_key>
<recommendation>
Use LogicLock region assignments
</recommendation>
<recommendation_description>
Use LogicLock regions assignments to increase the ability to guide logic placement on the target device.
</recommendation_description>
<description>
You can make LogicLock region assignments to optimize based on nodes, design hierarchy, or critical paths. This method should be used if a large number of paths are failing but recoding the design is unnecessary. LogicLock region assignments can help if routing delays form a large portion of your critical path delay, and placing logic closer together on the device will help improve the routing delay. When making LogicLock assignments, it is important to consider what level of flexibility to leave the Fitter. LogicLock region assignments provide more flexibility than other location assignments. Assignments that are more flexible require higher Fitter effort, but reduce the chance of design overconstraint. The following LogicLock assignments are available, listed in order of decreasing flexibility: soft LogicLock regions; auto-size, floating LogicLock regions; fixed size, floating LogicLock regions; fixed size, locked LogicLock regions.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Refer to the timing analysis results and the Timing Closure Floorplan to determine which logic to place in LogicLock regions. The register-to-register fmax paths in the Timing Analyses section of the Compilation Report can provide a helpful method of recognizing patterns. You can make LogicLock region assignments in the LogicLock Regions window (Assignments menu) or the Timing Closure Floorplan (Assignments menu).
	</action_description>
	<action_link>
	TRPT
	</action_link>
	<action_link>
	LL
	</action_link>
	<action_link>
	FLED
	</action_link>
	<acf_variable_list>
		<acf_variable name="LL_MEMBER_OF">
		ANY
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="5">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R026
</recommendation_key>
<recommendation>
Optimize source code 
</recommendation>
<recommendation_description>
Modify design source code to optimize timing results.
</recommendation_description>
<description>
Reduce the amount of logic between the input and the register (excessive use of logic between the input pin and register will cause more delays). To improve setup time (tsu), Altera recommends reducing the amount of logic between the input pin and the register whenever possible. Reduce fan-out  (the delay from input pins to macrocell registers increases when the fan-out of the pins increases). To improve setup time, minimize the fan-out. Reduce the amount of logic between the register and output pin (excessive logic between the register ant the output pin will induce more delay). Always minimize the amount of logic between the register and output pin for faster clock-to-output time (tco). Pipeline the design. Pipelining, which increases clock frequency, refers to dividing large blocks of combinatorial logic by inserting registers.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Modify design source code to optimize timing results.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
3
</image_path>
<parent_list>
	<parent priority="20">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R027
</recommendation_key>
<recommendation>
Perform final placement optimizations
</recommendation>
<recommendation_description>
Make sure the option to perform final placement optimization is turned on.
</recommendation_description>
<description>
The Perform Final Placements Optimizations options specifies whether the Fitter performs final placement optimizations. Performing final placement optimizations may improve maximum frequency (fmax) and fitting, but also may require longer compilation time. Setting this option to Always directs the Fitter to always perform final placement optimizations; setting this option to Never directs the Fitter to never perform final placement optimizations. Setting this option to Automatically directs the Fitter to perform final placement optimizations if you perform a standard compilation; however, if you perform a compilation using the fast fit feature, the Fitter does not perform final placement optimizations.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set Perform Final Placement Optimizations to Automatic in the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="FINAL_PLACEMENT_OPTIMIZATION">
		Automatically
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R028
</recommendation_key>
<recommendation>
Use timing-driven compilation
</recommendation>
<recommendation_description>
Make sure all timing-driven compilation options are turned on.
</recommendation_description>
<description>
The Optimize I/O cell register placement timing assignment moves registers into I/O elements if required to meet tsu or tco requirements. This option is on by default and only affects pins that have a tsu or tco requirement. Using the I/O register is only possible if the register directly feeds a pin or is fed directly by a pin.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on the Optimize timing, Optimize hold timing, and Optimize I/O cell register placement for timing options in the Fitter Settings page of the Settings dialog box (Assignments menu) for your target device.
	</action_description>
	<action_link>
	SETD_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="OPTIMIZE_TIMING">
		Normal Compilation
		</acf_variable>
		<acf_variable name="OPTIMIZE_HOLD_TIMING">
		All paths
		</acf_variable>
		<acf_variable name="OPTIMIZE_IOC_REGISTER_PLACEMENT_FOR_TIMING">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	IO
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R029
</recommendation_key>
<recommendation>
Use fast input, fast output, and fast output enable registers
</recommendation>
<recommendation_description>
Use the Fast Input Register, Fast Output Register, and Fast Output Enable Register logic options to improve I/O timing.
</recommendation_description>
<description>
For registers, if any one of these logic options is turned on, the register is always placed in the I/O cell. If the logic option is turned off, the register is not placed in the I/O cell. This is true even if the "Optimize I/O cell register placement for timing" option, located on the Fitter Settings page of the Settings dialog box (Assignments menu), is turned on.  If none of these logic options are turned on for a register and the "Optimize I/O cell register placement for timing" option is turned on, the Quartus II software determines whether or not to place the register in I/O cells.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	You can manually place individual registers in I/O cells by making a Fast Input Register, Fast Output Register, and Fast Output Enable Register logic option assignment with the Assignment Editor (Assignments menu). For an input register, use the Fast Input Register option to improve tsu; for an output register, use the Fast Output Register option to improve tco; and for an output enable register, use the Fast Output Enable Register option to improve tco.
	</action_description>
	<action_link>
	AE_IO_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="FAST_INPUT_REGISTER">
		ON
		</acf_variable>
		<acf_variable name="FAST_OUTPUT_REGISTER">
		ON
		</acf_variable>
		<acf_variable name="FAST_OUTPUT_ENABLE_REGISTER">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="MAX II">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="5">
	IO
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List all registers" quartus_exe="quartus_tan">
oaw_list_input_output_regs.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R030
</recommendation_key>
<recommendation>
Use fast input, fast output, and fast output enable registers
</recommendation>
<recommendation_description>
Use the Fast Input Register, Fast Output Register, and Fast Output Enable Register logic options to improve I/O timing.
</recommendation_description>
<description>
For registers, if any one of these logic options is turned on, the register is always placed adjacent to the locked I/O cell that it is connected to. If the logic option is not explicitly turned on, the register is not necessarily placed near the I/O cell. This is true even if the "Optimize I/O cell register placement for timing" option, located on the Fitter Settings page of the Settings dialog box (Assignments menu), is turned on.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	You can manually place individual registers in I/O cells by making a Fast Input Register, Fast Output Register, and Fast Output Enable Register logic option assignment with the Assignment Editor (Assignments menu). For an input register, use the Fast Input Register option to improve tsu; for an output register, use the Fast Output Register option to improve tco; and for an output enable register, use the Fast Output Enable Register option to improve tco.
	</action_description>
	<action_link>
	AE_IO_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="FAST_INPUT_REGISTER">
		ON
		</acf_variable>
		<acf_variable name="FAST_OUTPUT_REGISTER">
		ON
		</acf_variable>
		<acf_variable name="FAST_OUTPUT_ENABLE_REGISTER">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	MAX II
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="5">
	IO
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="List all registers" quartus_exe="quartus_tan">
oaw_list_input_output_regs.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R031
</recommendation_key>
<recommendation>
Use programmable delay options
</recommendation>
<recommendation_description>
Change the programmable delays to help meet timing requirements.
</recommendation_description>
<description>
Various programmable delay options can be used to minimize the clock setup (tsu) and clock-to-output (tco) times. For Cyclone, Stratix, Stratix II, and Stratix GX devices, the Quartus II software automatically adjusts the programmable delays to help meet timing requirements. Programmable delays are advanced options that should be used only after you have compiled a project, verified the I/O timing, and determined that the timing is unsatisfactory. 
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Assign programmable delay options to qualified nodes using the Assignment Editor (Assignments menu) . To improve tsu, set or decrease the value of the Decrease Input Delays to Input Register or Decrease Input Delays to Internal Cells logic options. To improve tco, turn off or decrease the value of the Increase Delay to Output Pin logic option. After you have made a timing assignment and compiled the design, you can view the value of every delay chain for every I/O pin in the Delay Chain Summary section of the Report Window. You can also view delay chains in the target device using the Quartus II Chip Planner (Tools menu). 
	</action_description>
	<action_link>
	AE_IO_TIMING
	</action_link>
	<action_link>
	CE
	</action_link>
	<acf_variable_list>
		<acf_variable name="STRATIX_DECREASE_INPUT_DELAY_TO_INTERNAL_CELLS">
		ON
		</acf_variable>
		<acf_variable name="APEX20K_DECREASE_INPUT_DELAY_TO_INTERNAL_CELLS">
		ON
		</acf_variable>
		<acf_variable name="MERCURY_DECREASE_INPUT_DELAY_TO_INTERNAL_CELLS">
		ON
		</acf_variable>
		<acf_variable name="FLEX6K_DECREASE_INPUT_DELAY_TO_INTERNAL_CELLS">
		ON
		</acf_variable>
		<acf_variable name="FLEX10K_DECREASE_INPUT_DELAY_TO_INTERNAL_CELLS">
		ON
		</acf_variable>
		<acf_variable name="INCREASE_DELAY_TO_OUTPUT_PIN">
		OFF
		</acf_variable>
		<acf_variable name="INCREASE_DELAY_TO_OUTPUT_ENABLE_PIN">
		OFF
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="7">
	IO
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R032
</recommendation_key>
<recommendation>
Phase shift PLL clock edges
</recommendation>
<recommendation_description>
Use PLL phase shifting to improve the I/O timing of your design. 
</recommendation_description>
<description>
Using a PLL should improve I/O timing automatically. If the timing requirements are still not met, most devices allow the PLL to be phase shifted in order to improve the I/O timing. Shifting the clock backwards gives a better clock-to-output (tco) at the expense of the clock setup time (tsu), while shifting it forward it gives a better tsu at the expense of tco and clock hold time (th). This option is used only in devices that offer PLLs with phase shift. 
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the MegaWizard Plug-In Manager (Tools menu) to edit the PLL and add a phase shift to the clock.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	Cyclone
	</device_family>
	<device_family exclude="">
	Cyclone II
	</device_family>
	<device_family exclude="">
	Stratix
	</device_family>
	<device_family exclude="">
	Stratix GX
	</device_family>
	<device_family exclude="">
	Stratix II
	</device_family>
	<device_family exclude="">
	HardCopy Stratix
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="3">
	IO_CLOCK
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R033
</recommendation_key>
<recommendation>
Use fast-corner timing
</recommendation>
<recommendation_description>
Use fast-corner timing to direct the Fitter to optimize designs considering both fast-corner and slow-corner timing delays.
</recommendation_description>
<description>
Use the Optimize Fast-Corner Timing setting to direct the Fitter to consider fast-corner timing delays as well as slow-corner timing delays during optimization to meet timing requirements at both corners. By default, this option is off, and the Fitter optimizes designs considering only delays from the slow-corner timing model. You may also turn on Report Combined Fast/Slow Timing (Classic Timing Analyzer) or Perform Multicorner Analysis (TimeQuest Timing Analyzer) to direct the Timing Analyzer to run and report timing results using both the fast timing model (best-case) and slow timing model (worst-case). 
</description>
<more_info_link>
comp.chm::/comp/comp_tab_fitting.htm
</more_info_link>
<effect_list>
	<fmax_effect>
	+  Hold time, Th, min Tpd and min Tco slack may increase, especially at the fast timing corner
	</fmax_effect>
	<resource_effect>
	-  Setup time, Tsu slack, Tpd, Tco slack and Fmax may decrease
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on the Optimize Fast-Corner Timing option in the Fitter Settings page of the Settings dialog box (Assignments menu). Turn on the Report Combined Fast/Slow Timing option in the More Timing Settings dialog box for Classic Timing Analyzer, available from the Timing Requirements &amp; Options page of the Settings dialog box, or Enable multicorner timing analysis for TimeQuest Timing Analyzer, available from the TimeQuest Timing Analyzer page of the Settings dialog box.
	</action_description>
	<action_link>
	SETD_FITTER
	</action_link>
	<action_link>
	SETD_MORE_TIMING
	</action_link>
	<action_link>
	SETD_STA
	</action_link>
	<acf_variable_list>
		<acf_variable name="OPTIMIZE_FAST_CORNER_TIMING">
		ON
		</acf_variable>
		<acf_variable name="DO_COMBINED_ANALYSIS">
		ON
		</acf_variable>
		<acf_variable name="TIMEQUEST_MULTICORNER_ANALYSIS">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	MDT
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R034
</recommendation_key>
<recommendation>
Turn on Optimize Hold Timing
</recommendation>
<recommendation_description>
Turn on Optimize Hold Timing
</recommendation_description>
<description>
If your design has IO timing violations, make sure "Optimize Hold Timing" is turned on. If your design has timing violations between registers, set it to "All Paths". Note that timing violations between registers can be reported as Clock Hold violations (between internal registers or between internal and external registers) or Clock Hold (I/O paths) violations (between internal and external registers).
</description>
<more_info_link>
comp.chm::/comp/comp_tab_fitting.htm
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Hold time, min Tpd and min Tco slack may increase
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on the Optimize hold timing option in the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="OPTIMIZE_HOLD_TIMING">
		ALL PATHS
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	MDT
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R035
</recommendation_key>
<recommendation>
Turn off Auto Packed Registers
</recommendation>
<recommendation_description>
Turn off Auto Packed Registers
</recommendation_description>
<description>
If your design has a Th violation to a register that is packed with a LUT into one LE, or if your design has a Th / min Tco violation to a register that is packed with an IO, set Auto Packed Registers to OFF for that register to give the fitter more flexibility.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Hold time and min Tco slack may increase
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Auto Packed Registers logic option to OFF for the specific entities using the Assignment Editor (Assignments menu).
	</action_description>
	<action_link>
	AE_LOGIC_OPTIONS
	</action_link>
	<acf_variable_list>
		<acf_variable name="AUTO_PACKED_REGISTERS_STRATIXII">
		OFF
		</acf_variable>
		<acf_variable name=" AUTO_PACKED_REGISTERS_MAXII">
		OFF
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_CYCLONE">
		OFF
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS">
		OFF
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_STRATIX">
		OFF
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="FLEX10K">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	MDT
	</parent>
</parent_list>
<logic_algorithm>
ASSIGNMENT
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R036
</recommendation_key>
<recommendation>
Set maximum router effort 
</recommendation>
<recommendation_description>
Configure the router to optimize timing at its highest effort level.
</recommendation_description>
<description>
The Router Timing Optimization Level option controls the effort level of the algorithms used by the router to improve circuit timing (reduce delay).  The default level, Normal, achieves a desirable trade-off between performance and compilation time.  This option should be set to Maximum to achieve the highest possible performance.  Setting this option to maximum may increase the compilation time.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Router Timing Optimization Level to Maximum in the More Fitter Settings dialog box, which can be found on the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="ROUTER_TIMING_OPTIMIZATION_LEVEL">
		MAXIMUM
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="8">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R037
</recommendation_key>
<recommendation>
Enable Clock Latency
</recommendation>
<recommendation_description>
Turning on Clock Latency improves the modeling of complex clocking relationships (for example, relationships between PLL clocks or between derived and base clocks).
</recommendation_description>
<description>
Better modeling of complex clocking relationships is essential for an accurate timing report and appropriate design optimization to meet timing constraints. Clock Latency affects the timing relationships computed between registers clocked by related clocks by affecting both the setup and hold relationships between registers and the clock skews to those registers. Clock Latency also enables better modeling of clock relationships that can help Fitter optimization for both fast and slow timing corners. Once Clock Latency is enabled, any multi-clock transfer that has a multi-cycle assignment may need to be changed to account for differences in the setup/hold relationships.
</description>
<more_info_link>
reference.chm::/glossary/def_late_clock_latency_ta.htm
</more_info_link>
<effect_list>
	<fmax_effect>
	 Setup and hold relationships computed between registers clocked by related clocks
	</fmax_effect>
	<resource_effect>
	+ Different fitter behavior in response to Better modeling of clocking relationships
	</resource_effect>
	<compilation_effect>
	 Clock skew between registers clocked by related clocks
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Enable Clock Latency in the More Timing Settings dialog box, available from the Timing Requirements &amp; Options page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="ENABLE_CLOCK_LATENCY">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		^ON
		</acf_variable>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="11">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R038
</recommendation_key>
<recommendation>
Enable Recovery/Removal analysis
</recommendation>
<recommendation_description>
Enable Register Recovery Removal in the Timing Analyzer
</recommendation_description>
<description>
This setting allows the Quartus II Timing Analysis tool to calculate Recovery and Removal times on control and reset signals.  Recovery is the minimum length of time that an asynchronous control input pin must be stable before the clock active edge. Removal is the minimum length of time that an asynchronous control input pin must be stable after the clock active edge.  Altera recommends turning this setting "On" during development, as it gives a more complete timing analysis of all logic paths in your design.  However, if your design has no timing requirement for reset logic, this analysis can be turned "Off."
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ More complete timing analysis of all logic paths in your design
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Enable Recovery/Removal analysis in the More Timing Settings dialog box, available from the Timing Requirements &amp; Options page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="ENABLE_RECOVERY_REMOVAL_ANALYSIS">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		^ON
		</acf_variable>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="12">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R039
</recommendation_key>
<recommendation>
Optimize specific clock domains for speed
</recommendation>
<recommendation_description>
For Quartus II Integrated Synthesis, set the "Speed Optimization Technique for Clock Domains" setting on clocks that are failing timing.
</recommendation_description>
<description>
If setting the synthesis optimization technique to speed increases area too much, or is not optimizing the correct clock domains, setting this option may be helpful. You can set "Speed Optimization Technique for Clock Domains" on a clock, which means that all logic in that clock domain will be optimized for speed. You can also set the assignment from clock a to clock b, in which case all logic on paths from clock a to clock b will be optimized for speed. The assignment can be set on multiple clocks and/or from-to clock pairs. All logic not affected by any of these assignments will be optimized according to the specified Optimization Technique.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	For Quartus II Integrated Synthesis, set Speed Optimization Technique for Clock Domains in the Assignment editor (Synthesis category). The setting is only effective if it is set on clocks. It can be set for multiple clocks, and for multiple from-to clock pairs. It is most useful if set on failing clocks, which can be found in the Timing Analysis Report. The options have the best effect when Optimization Technique is set to Balanced.
	</action_description>
	<action_link>
	AE_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="SYNTH_CRITICAL_CLOCK">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	FMAX_STAGE1
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R040
</recommendation_key>
<recommendation>
Turn on automatic asynchronous signal pipelining 
</recommendation>
<recommendation_description>
The Quartus II software provides a physical synthesis optimization that can automatically pipeline asynchronous signals, which would otherwise fail timing.
</recommendation_description>
<description>
The automatic asynchronous signal pipelining is performed by the Fitter. This option is only useful when Recovery/Removal analysis is  enabled (see General Recommendations).
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Recovery signal delays may decrease (Fmax may increase)
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Automatic asynchronous signal pipelining in the Physical Synthesis Optimizations page under Fitter Settings in the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_PHYSICAL_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="PHYSICAL_SYNTHESIS_ASYNCHRONOUS_SIGNAL_PIPELINING">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="ENABLE_RECOVERY_REMOVAL_ANALYSIS">
		ON
		</acf_variable>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	RRT
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R041
</recommendation_key>
<recommendation>
Avoid unrelated logic register packing
</recommendation>
<recommendation_description>
Avoid unrelated logic register packing
</recommendation_description>
<description>
When the fitter prints a message of the form "Info: Fitter has combined &lt;number&gt; register-only logic cells with unrelated combinational logic cells" it means that the device logic resources are very full, and some registers have had to be paired with combinational logic cells with which they have nothing in common. This can make fitting more difficult, and can reduce maximum design performance.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set Auto Packed Registers to Normal for all of your design, or for the time-critical hierarchies in your design.  If your design is very full, this may cause a no-fit due to an increase in logic cell usage. If a no-fit occurs, follow the recommendations of the Logic Element Usage section of the Resource Optimization Advisor to reduce your design logic usage, or try fitting into a larger device.
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<action_link>
	AE_LOGIC_OPTIONS
	</action_link>
	<acf_variable_list>
		<acf_variable name="AUTO_PACKED_REGISTERS_STRATIXII">
		Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_MAXII">
		Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_CYCLONE">
		Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS">
		Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_STRATIX">
		Normal
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="FLEX10K">
	ACF
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="AUTO_PACKED_REGISTERS_STRATIXII">
		^Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_MAXII">
		^Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_CYCLONE">
		^Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS">
		^Normal
		</acf_variable>
		<acf_variable name="AUTO_PACKED_REGISTERS_STRATIX">
		^Normal
		</acf_variable>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="11">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R042
</recommendation_key>
<recommendation>
Use TimeQuest Timing Analyzer
</recommendation>
<recommendation_description>
Altera recommends that the new TimeQuest Timing Analyzer is used for compilation and sign-off timing analysis
</recommendation_description>
<description>
TimeQuest Timing Analyzer's increased power and flexibility enables you to constrain more complex designs, especially those with complex clock schemes including clock muxing or source synchronous.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Better analysis of your design
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Use TimeQuest Timing Analyzer during compilation in the Timing Analysis Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		^ON
		</acf_variable>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="13">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R043
</recommendation_key>
<recommendation>
Review timing constraints - TQ
</recommendation>
<recommendation_description>
An important step in obtaining the highest performance is the application of detailed timing constraints and exceptions. Timing constraints and exceptions will affect both timing and logic placement and allow you to specify the desired speed performance for the entire project and specific entities.
</recommendation_description>
<description>
Every clock signal should have an accurate SDC clock constraint. set_input_delay, set_output_delay and/or set_max_delay Synopsys Design Constraints (SDC) are needed to constrain an I/O path. It is important to make SDC timing exceptions (for example, multicycle or false path) according to the needs of the design. This information allows the Quartus II software to make appropriate trade-offs between paths.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ Adding timing constraints will help Quartus II to compile and analyze your design
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Use the TimeQuest Timing Analyzer window to help create an SDC file with the clock constraints, I/O constraints, and timing exceptions.
	</action_description>
	<action_link>
	TIMEQUEST
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		ON
		</acf_variable>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="14">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R043_5
</recommendation_key>
<recommendation>
Select a Faster Speed Grade Device
</recommendation>
<recommendation_description>
Consider using a faster speed grade device to make timing closure easier.
</recommendation_description>
<description>
Faster speed grade devices can make it easier to achieve timing closure, and can reduce compilation times and therefore increase productivity.  If you are not using the fastest speed grade available, consider switching to a faster speed grade.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	From the Device page on the Settings dialog box (Assignments menu), select a faster speed grade.
	</action_description>
	<action_link>
	SETD_DEVICE
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="15">
	GEN
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R044
</recommendation_key>
<recommendation>
Use fast slew rate setting
</recommendation>
<recommendation_description>
Increasing an I/Os slew rate setting will improve I/O timing by decreasing Tco
</recommendation_description>
<description>
Altera I/O output buffers have programmable slew rate settings that control the transition speed of the buffer.  Increasing the slew rate setting has the effect of making the buffer faster at the expense of decreasing signal noise margins due to increased cross talk. Valid Cyclone III slew rate settings are:  0 - Slow,  1 - Medium, 2 - Fast
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	- signal voltage margin may decrease
	</resource_effect>
	<compilation_effect>
	- Crosstalk may increase
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	You can specify a faster slew rate setting using the Pin Planner or the Assignment Editor.
	</action_description>
	<action_link>
	AE_IO_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="SLEW_RATE">
		2
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	Cyclone III
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="6">
	IO
	</parent>
</parent_list>
<logic_algorithm>
ASSIGNMENT
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R045
</recommendation_key>
<recommendation>
Use fast slew rate setting
</recommendation>
<recommendation_description>
Increasing an I/Os slew rate setting will improve I/O timing by decreasing Tco
</recommendation_description>
<description>
Altera I/O output buffers have programmable slew rate settings that control the transition speed of the buffer.  Increasing the slew rate setting has the effect of making the buffer faster at the expense of decreasing signal noise margins due to increased cross talk.  Valid Slow III slew rate settings are: 0 - Slow, 1, 2, 3 - Fast
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	- signal voltage margin may decrease
	</resource_effect>
	<compilation_effect>
	- Crosstalk may increase
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	You can specify a faster slew rate setting using the Pin Planner or the Assignment Editor.
	</action_description>
	<action_link>
	AE_IO_TIMING
	</action_link>
	<acf_variable_list>
		<acf_variable name="SLEW_RATE">
		3
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	Stratix III
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
2
</image_path>
<parent_list>
	<parent priority="6">
	IO
	</parent>
</parent_list>
<logic_algorithm>
ASSIGNMENT
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R046
</recommendation_key>
<recommendation>
Use higher drive strength
</recommendation>
<recommendation_description>
Increasing an I/Os drive strength will improve I/O timing by decreasing Tco
</recommendation_description>
<description>
Altera I/O output buffers have programmable drive strength settings.  Increasing the drive strength setting has the effect of making a buffer faster at the expense of increased power usage and increased signal crosstalk.  
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	- Power usage may increase
	</resource_effect>
	<compilation_effect>
	- Crosstalk may increase
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	You can specify a stronger drive strength setting using the Pin Planner or the Assignment Editor.
	</action_description>
	<action_link>
	AE
	</action_link>
	<acf_variable_list>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	IO
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="List Current-Strength Usage" quartus_exe="quartus_cdb">
oaw_list_cs_options.tcl
</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
META
</recommendation_key>
<recommendation>
Metastability Optimization
</recommendation>
<recommendation_description>
The following recommendations are provided to improve metastability metrics of the design. Double-click a category to view the recommendations for that category.
</recommendation_description>
<description>
NA
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	NA
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	Stratix III
	</device_family>
	<device_family exclude="">
	Stratix IV
	</device_family>
	<device_family exclude="">
	Arria II GX
	</device_family>
	<device_family exclude="">
	Cyclone III
	</device_family>
	<device_family exclude="">
	HardCopy III
	</device_family>
	<device_family exclude="">
	HardCopy IV
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	NONE
	</parent>
</parent_list>
<logic_algorithm>
NA
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R047
</recommendation_key>
<recommendation>
Identify Synchronizers
</recommendation>
<recommendation_description>
Identify synchronization chains through QSF assignments to measure the robustness of the design.
</recommendation_description>
<description>
The TimeQuest Timing Analyzer can estimate the robustness of the design by performing a metastability analysis on synchronization register chains, or synchronizers, in your design.  A synchronizer is a cascade of registers used to transfer data from one clock domain to another where no timing relationship exists, and a handshake protocol is not used. You should identify all synchronizers explicitly in your design so that an accurate Mean Time Between Failures (MTBF) can be calculated.  You should determine an acceptable target MTBF given the context of your entire system and the fact that MTBF calculations are statistical estimates.
</description>
<more_info_link>
quartus\common\help\analyze.chm::/sta/sta_tqa_settings.htm
</more_info_link>
<effect_list>
	<fmax_effect>
	NA
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Make sure that TimeQuest Timing Analyzer is used for timing analysis. Ensure that the design is fully timing constrained, especially I/O interfaces, and that it meets timing. Set node-based "Synchronizer Identification" assignments to "Forced if Asynchronous" for all registers that are part of synchronizers, using the Assignment Editor. If you are not sure which registers are part of synchronizers, you can set the global "Synchronizer Identification" assignment to "Auto" in the TimeQuest Timing Analyzer Settings page of the Settings dialog box (Assignments Menu). You should review the list of possible synchronizers, and set node-based assignments for all synchronization registers so that an accurate MTBF can be calculated.
	</action_description>
	<action_link>
	SETD_MORE_ANALYSIS_SYNTHESIS
	</action_link>
	<action_link>
	SETD_STA
	</action_link>
	<acf_variable_list>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="1">
	META
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R048
</recommendation_key>
<recommendation>
Use System-Centric SDC Constraints
</recommendation>
<recommendation_description>
Ensure that input and output ports of the design are constrained with system-centric SDC Commands.
</recommendation_description>
<description>
Instead of using FPGA-centric timing constraints, consider using industry-standard, system-centric timing constraints. This involves using set_input_delay constraints in place of set_max_delay constraints. The set_input_delay assignment specifically associates the input port with a clock domain. If the input port is being driven by a clock that is related to a clock in the FPGA, this can help eliminate false positives during synchronization register identification.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	0
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	0
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Make sure that TimeQuest Timing Analyzer is selected as the timing analysis tool. Instead of specifying setup requirements as 'set_max_delay &lt;Tsu requirement&gt;', convert this to 'set_input_delay -max &lt;latch - launch - Tsu requirement&gt;'. Refer to the 'I/O Constraints' section in the 'Switching to Timequest' Chapter in the Quartus II Handbook.
	</action_description>
	<action_link>
	SETD_STA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	META
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R049
</recommendation_key>
<recommendation>
Optimize metastability during Fitting
</recommendation>
<recommendation_description>
Turn on the Fitter metastability optimization option to improve the Mean Time Between Failures of the design.
</recommendation_description>
<description>
If the Mean Time Between Failures (MTBF) of the design is below your target, the Fitter can be instructed to optimize the design to achieve higher MTBF. In this mode, the Fitter will attempt to increase the slacks of the output nets of synchronization registers. This increase in slack will reduce the chance that metastability will occur, therefore improving the MTBF.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ MTBF may increase
	</fmax_effect>
	<resource_effect>
	- Fmax may decrease
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Make sure that TimeQuest Timing Analyzer is selected as the timing analysis tool. Ensure that the design is fully constrained and meets timing. Set the Synchronizer Identification option to "Auto" in the TimeQuest Timing Analyzer Settings page of the Settings dialog box (Assignments menu). Set the maximum length of synchronization chain used in the design in the Analysis and Synthesis Settings Page in the Settings dialog box. Turn on the Optimize Design for Metastability option in the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<action_link>
	SETD_MORE_ANALYSIS_SYNTHESIS
	</action_link>
	<action_link>
	SETD_STA
	</action_link>
	<acf_variable_list>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		ON
		</acf_variable>
		<acf_variable name="ADV_NETLIST_OPT_METASTABLE_REGS">
		3
		</acf_variable>
		<acf_variable name="OPTIMIZE_FOR_METASTABILITY">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	META
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R050
</recommendation_key>
<recommendation>
Select a Faster Speed Grade Device
</recommendation>
<recommendation_description>
Consider using a faster speed grade device to achieve better metastability.
</recommendation_description>
<description>
The Mean Time Between Failures (MTBF) of a design depends on process parameters of the device used. Faster devices are less susceptible to metastability issues. If the design MTBF falls significantly below the target MTBF, switching to a faster speed grade will improve the MTBF substantially.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ MTBF may increase
	</fmax_effect>
	<resource_effect>
	0
	</resource_effect>
	<compilation_effect>
	1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	From the Device page on the Settings dialog box (Assignments menu), select a faster speed grade.
	</action_description>
	<action_link>
	SETD_DEVICE
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="6">
	META
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R051
</recommendation_key>
<recommendation>
Enable Beneficial Skew Optimization
</recommendation>
<recommendation_description>
Turn on the Enable Beneficial Skew Optimization option
</recommendation_description>
<description>
The Enable Beneficial Skew Optimization option allows the fitter to insert a small amount of delay on the clock network to improve overall circuit timing (by increasing setup slack).  This option requires Optimize Hold Timing to be set to All Paths to guarantee that hold time violations caused by beneficial skew optimization do not occur.  Enabling this option may increase the compilation time.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Enable Beneficial Skew Optimization option to ON in the More Fitter Settings dialog box, which can be found on the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="ENABLE_BENEFICIAL_SKEW_OPTIMIZATION">
		ON
		</acf_variable>
		<acf_variable name="OPTIMIZE_HOLD_TIMING">
		All Paths
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF_AND
	</device_family>
</device_family_list>
<conditions>
		<acf_variable name="USE_TIMEQUEST_TIMING_ANALYZER">
		ON
		</acf_variable>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="2">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R052
</recommendation_key>
<recommendation>
Increase the Length of Synchronizers to Protect
</recommendation>
<recommendation_description>
Increase the synchronization chain length that are analyzed and protected in Quartus.
</recommendation_description>
<description>
The first register of a synchronization chain is always protected from operations that might reduce MTBF, such as logic retiming and register duplication.  When metastability analysis is enabled, Quartus will recognize and protect synchronization register chains of length 2.  These synchronization chains are also reported by the TimeQuest Timing Analyzer.  However, if you have longer synchronization chains in your design, you can increase the number of synchronization registers that Quartus recognizes.  If you increase this parameter to the maximum length of synchronization chains in your design, Quartus can protect and analyze the entire synchronization chain that you have implemented. The MTBF calculations will reflect the behaviour of your design more accurately.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ MTBF may increase
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	- Fmax may decrease
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the "Synchronization Register Chain Length" to the maximum length of synchronization chains used in the design. This assignment can be found in the Analysis and Synthesis Settings Page in the Settings dialog box.
	</action_description>
	<action_link>
	SETD_MORE_ANALYSIS_SYNTHESIS
	</action_link>
	<acf_variable_list>
		<acf_variable name="ADV_NETLIST_OPT_METASTABLE_REGS">
		3
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="3">
	META
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R053
</recommendation_key>
<recommendation>
Increase the number of stages used in Synchronizers
</recommendation>
<recommendation_description>
Add additional stages to synchronization chains in your design to improve the robustness of your design.
</recommendation_description>
<description>
Many designers use synchronization chains to minimize the occurrence of metastable events.  However, using chains of length 2 may not be enough to produce a reasonable MTBF when the design runs at high clock and data frequencies.  If the synchronization chain is reported to have a low MTBF, consider adding an additional stage to your synchronization chain.  This additional stage will increase the settling time of the synchronization chain, allowing more opportunity for the data signal to resolve to a known state during a metastable event.  This additional settling time will increase the MTBF of the chain.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	+ MTBF may increase
	</fmax_effect>
	<resource_effect>
	-1
	</resource_effect>
	<compilation_effect>
	NA
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Add an additional register in series to each synchronization chain in your design with low MTBF.  For example, if you are using dual-clock FIFOs in your design, you can set the length of synchronization stages to 3 stages through MegaWizard settings.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="NA">
		
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="5">
	META
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R054
</recommendation_key>
<recommendation>
Use a higher-effort fit attempt
</recommendation>
<recommendation_description>
Use the Fit Attempts to Skip option to force a higher-effort fit attempt.
</recommendation_description>
<description>
For hard-to-route designs, the fitter may require multiple attempts to achieve a successful fit.  In the second and third fit attempts, fitter effort is increased and some optimizations are weighted more towards improving routability than maximizing timing performance.  The Fit Attempts to Skip option can be used to force the fitter to directly perform an attempt with these settings.  With the default value of 0, all three fit attempts will be performed in sequence, as required.  Setting this option to 1 will skip the first attempt and begin directly with second attempt settings.  If a design fits in the first attempt but appears difficult to route (with high average or peak wire use, or a large fraction of fitter compilation time spent performing routing), then by using this option to improve routability the fitter may also be able to achieve a better timing result.  For timing improvement, using a setting of 2 to skip to the third attempt is not generally recommended, as timing optimizations are further reduced in this attempt in order to focus on routability optimization.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Change the Fit Attempts to Skip setting in the More Fitter Settings dialog box, which can be found on the Fitter Settings page of the Settings dialog box (Assignments menu).
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="FIT_ATTEMPTS_TO_SKIP">
		0|1
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ALL
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="9">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
ALWAYS
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R055
</recommendation_key>
<recommendation>
Disable aggressive routability optimizations
</recommendation>
<recommendation_description>
Set Fitter Aggressive Routability Optimizations to be performed automatically, unless your design is hard-to-route.
</recommendation_description>
<description>
The Fitter Aggressive Routability Optimizations setting can improve routability for hard-to-route designs.  However, these optimizations generally reduce timing performance and so should only be used for designs that would otherwise fail to fit or have very long compilation times.  The default setting of "Automatically" is recommended for most designs, which will only apply these optimizations if a design requires a third fit attempt.  However, for hard-to-route designs there may be cases where a setting "Always" could lead to better timing results, by improving routability in earlier fit attempts.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Change the Fitter Aggressive Routability Optimizations setting in the More Fitter Settings dialog box, depending on how hard your design is to route.
	</action_description>
	<action_link>
	SETD_MORE_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="FITTER_AGGRESSIVE_ROUTABILITY_OPTIMIZATION">
		Automatically
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="10">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R056
</recommendation_key>
<recommendation>
Enable additional synthesis optimizations
</recommendation>
<recommendation_description>
Turn on the Pre-Mapping Resynthesis Optimization option
</recommendation_description>
<description>
The Pre-Mapping Resynthesis Optimization option performs a combinational resynthesis optimization during synthesis. This resynthesis optimization may reduce delay and improve overall circuit timing (by increasing setup slack). Enabling this option may increase combinational logic utilization and the compilation time.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	1
	</fmax_effect>
	<resource_effect>
	1
	</resource_effect>
	<compilation_effect>
	-1
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Turn on Pre-Mapping Resynthesis Optimizations.
	</action_description>
	<action_link>
	NA
	</action_link>
	<acf_variable_list>
		<acf_variable name="PRE_MAPPING_RESYNTHESIS">
		ON
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="4">
	FMAX_STAGE3
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>

<optimization_record>
<recommendation_key>
R057
</recommendation_key>
<recommendation>
Set Fitter Effort to Standard Fit
</recommendation>
<recommendation_description>
Change the Fitter Effort to Standard Fit to improve metastability optimization.
</recommendation_description>
<description>
If the Fitter Effort is set to Auto Fit, the Fitter reduces its effort once the timing requirements are met to save compile time. However, this reduction in effort affects optimization algorithms that can improve metastability.  If you find that your design Mean Time Between Failures (MTBF) does not meet your requirements, try setting the Fitter Effort to Standard Fit to get the Fitter to attempt to maximize the design's timing performance, which can also improve the design MTBF.
</description>
<more_info_link>
NA
</more_info_link>
<effect_list>
	<fmax_effect>
	99
	</fmax_effect>
	<resource_effect>
	99
	</resource_effect>
	<compilation_effect>
	99
	</compilation_effect>
</effect_list>
<action>
	<action_description>
	Set the Fitter Effort to Standard Fit in the Fitter Settings page of the Settings dialog box (Assignments Menu).
	</action_description>
	<action_link>
	SETD_FITTER
	</action_link>
	<acf_variable_list>
		<acf_variable name="FITTER_EFFORT">
		Standard Fit
		</acf_variable>
	</acf_variable_list>
</action>
<device_family_list>
	<device_family exclude="">
	ACF
	</device_family>
</device_family_list>
<conditions>
</conditions>
<image_path>
1
</image_path>
<parent_list>
	<parent priority="7">
	META
	</parent>
</parent_list>
<logic_algorithm>
SETTING
</logic_algorithm>
<tcl_script button_name="" quartus_exe="">

</tcl_script>
</optimization_record>
</optimization_record_list>
