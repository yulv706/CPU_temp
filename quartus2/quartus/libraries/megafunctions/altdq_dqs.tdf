------------------------------------------------------------------
-- altdq_dqs parameterized megafunction
-- Generated with 'clearbox' loader - do not edit
------------------------------------------------------------------


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.

--  Version 9.0 Build 184 04/29/2009

OPTIONS NAME_SUBSTITUTION = ON;

OPTIONS TREAT_DEFAULT_VALUE_AS_UNUSED = ON;

PARAMETERS
(
	DELAY_BUFFER_MODE = "LOW",
	DELAY_DQS_ENABLE_BY_HALF_CYCLE = "FALSE",
	DQ_HALF_RATE_USE_DATAOUTBYPASS = "FALSE",
	DQ_INPUT_REG_ASYNC_MODE = "NONE",
	DQ_INPUT_REG_CLK_SOURCE = "DQS_BUS",
	DQ_INPUT_REG_MODE = "NONE",
	DQ_INPUT_REG_POWER_UP = "LOW",
	DQ_INPUT_REG_SYNC_MODE = "NONE",
	DQ_INPUT_REG_USE_CLKN = "FALSE",
	DQ_IPA_ADD_INPUT_CYCLE_DELAY = "FALSE",
	DQ_IPA_ADD_PHASE_TRANSFER_REG = "FALSE",
	DQ_IPA_BYPASS_OUTPUT_REGISTER = "FALSE",
	DQ_IPA_INVERT_PHASE = "FALSE",
	DQ_IPA_PHASE_SETTING = 0,
	DQ_OE_REG_ASYNC_MODE = "NONE",
	DQ_OE_REG_MODE = "NONE",
	DQ_OE_REG_POWER_UP = "LOW",
	DQ_OE_REG_SYNC_MODE = "NONE",
	DQ_OUTPUT_REG_ASYNC_MODE = "NONE",
	DQ_OUTPUT_REG_MODE = "NONE",
	DQ_OUTPUT_REG_POWER_UP = "LOW",
	DQ_OUTPUT_REG_SYNC_MODE = "NONE",
	DQ_RESYNC_REG_MODE = "NONE",
	DQS_CTRL_LATCHES_ENABLE = "FALSE",
	DQS_DELAY_CHAIN_DELAYCTRLIN_SOURCE = "CORE",
	DQS_DELAY_CHAIN_PHASE_SETTING = 0,
	DQS_DQSN_MODE = "NONE",
	DQS_ENABLE_CTRL_ADD_PHASE_TRANSFER_REG = "FALSE",
	DQS_ENABLE_CTRL_INVERT_PHASE = "FALSE",
	DQS_ENABLE_CTRL_PHASE_SETTING = 0,
	DQS_INPUT_FREQUENCY = "UNUSED",
	DQS_OE_REG_ASYNC_MODE = "NONE",
	DQS_OE_REG_MODE = "NONE",
	DQS_OE_REG_POWER_UP = "LOW",
	DQS_OE_REG_SYNC_MODE = "NONE",
	DQS_OFFSETCTRL_ENABLE = "FALSE",
	DQS_OUTPUT_REG_ASYNC_MODE = "NONE",
	DQS_OUTPUT_REG_MODE = "NONE",
	DQS_OUTPUT_REG_POWER_UP = "LOW",
	DQS_OUTPUT_REG_SYNC_MODE = "NONE",
	DQS_PHASE_SHIFT = 0,
	IO_CLOCK_DIVIDER_CLK_SOURCE = "CORE",
	IO_CLOCK_DIVIDER_INVERT_PHASE = "FALSE",
	IO_CLOCK_DIVIDER_PHASE_SETTING = 0,
	LEVEL_DQS_ENABLE = "FALSE",
	NUMBER_OF_BIDIR_DQ = 0,
	NUMBER_OF_CLK_DIVIDER = 0,
	NUMBER_OF_INPUT_DQ = 0,
	NUMBER_OF_OUTPUT_DQ = 0,
	OCT_REG_MODE = "NONE",
	USE_DQ_INPUT_DELAY_CHAIN = "FALSE",
	USE_DQ_IPA = "FALSE",
	USE_DQ_IPA_PHASECTRLIN = "TRUE",
	USE_DQ_OE_DELAY_CHAIN1 = "FALSE",
	USE_DQ_OE_DELAY_CHAIN2 = "FALSE",
	USE_DQ_OE_PATH = "FALSE",
	USE_DQ_OUTPUT_DELAY_CHAIN1 = "FALSE",
	USE_DQ_OUTPUT_DELAY_CHAIN2 = "FALSE",
	USE_DQS = "FALSE",
	USE_DQS_DELAY_CHAIN = "FALSE",
	USE_DQS_DELAY_CHAIN_PHASECTRLIN = "FALSE",
	USE_DQS_ENABLE = "FALSE",
	USE_DQS_ENABLE_CTRL = "FALSE",
	USE_DQS_ENABLE_CTRL_PHASECTRLIN = "TRUE",
	USE_DQS_INPUT_DELAY_CHAIN = "FALSE",
	USE_DQS_INPUT_PATH = "FALSE",
	USE_DQS_OE_DELAY_CHAIN1 = "FALSE",
	USE_DQS_OE_DELAY_CHAIN2 = "FALSE",
	USE_DQS_OE_PATH = "FALSE",
	USE_DQS_OUTPUT_DELAY_CHAIN1 = "FALSE",
	USE_DQS_OUTPUT_DELAY_CHAIN2 = "FALSE",
	USE_DQS_OUTPUT_PATH = "FALSE",
	USE_DQSBUSOUT_DELAY_CHAIN = "FALSE",
	USE_DQSENABLE_DELAY_CHAIN = "FALSE",
	USE_DYNAMIC_OCT = "FALSE",
	USE_HALF_RATE = "FALSE",
	USE_IO_CLOCK_DIVIDER_MASTERIN = "FALSE",
	USE_IO_CLOCK_DIVIDER_PHASECTRLIN = "FALSE",
	USE_IO_CLOCK_DIVIDER_SLAVEOUT = "FALSE",
	USE_OCT_DELAY_CHAIN1 = "FALSE",
	USE_OCT_DELAY_CHAIN2 = "FALSE",
	CBXI_PARAMETER = "NOTHING"
);
FUNCTION @CBXI_PARAMETER (bidir_dq_areset[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_hr_oe_in[NUMBER_OF_BIDIR_DQ * 2-1..0], bidir_dq_hr_output_data_in[NUMBER_OF_BIDIR_DQ * 4-1..0], bidir_dq_input_data_in[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_io_config_ena[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_oe_in[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_output_data_in[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_output_data_in_high[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_output_data_in_low[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_sreset[NUMBER_OF_BIDIR_DQ-1..0], config_clk, config_datain, config_update, core_delayctrlin[5..0], dll_delayctrlin[5..0], dq_hr_output_reg_clk, dq_input_reg_clk, dq_input_reg_clkena, dq_ipa_clk, dq_output_reg_clk, dq_output_reg_clkena, dq_resync_reg_clk, dqs_areset, dqs_config_ena, dqs_enable_ctrl_clk, dqs_enable_ctrl_hr_datainhi, dqs_enable_ctrl_hr_datainlo, dqs_enable_ctrl_in, dqs_enable_in, dqs_hr_oe_in[1..0], dqs_hr_output_data_in[3..0], dqs_hr_output_reg_clk, dqs_input_data_in, dqs_io_config_ena, dqs_oe_in, dqs_output_data_in, dqs_output_data_in_high, dqs_output_data_in_low, dqs_output_reg_clk, dqs_output_reg_clkena, dqs_sreset, dqsn_areset, dqsn_hr_oe_in[1..0], dqsn_hr_output_data_in[3..0], dqsn_input_data_in, dqsn_io_config_ena, dqsn_oe_in, dqsn_output_data_in, dqsn_output_data_in_high, dqsn_output_data_in_low, dqsn_sreset, dqsupdateen, hr_oct_in[1..0], hr_oct_reg_clk, input_dq_areset[NUMBER_OF_INPUT_DQ-1..0], input_dq_input_data_in[NUMBER_OF_INPUT_DQ-1..0], input_dq_io_config_ena[NUMBER_OF_INPUT_DQ-1..0], input_dq_sreset[NUMBER_OF_INPUT_DQ-1..0], io_clock_divider_clk, io_clock_divider_masterin, oct_in, oct_reg_clk, offsetctrlin[5..0], output_dq_areset[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_hr_oe_in[NUMBER_OF_OUTPUT_DQ * 2-1..0], output_dq_hr_output_data_in[NUMBER_OF_OUTPUT_DQ * 4-1..0], output_dq_io_config_ena[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_oe_in[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_output_data_in[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_output_data_in_high[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_output_data_in_low[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_sreset[NUMBER_OF_OUTPUT_DQ-1..0])
RETURNS (bidir_dq_hr_input_data_out[NUMBER_OF_BIDIR_DQ * 4-1..0], bidir_dq_input_data_out[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_input_data_out_high[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_input_data_out_low[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_oct_out[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_oe_out[NUMBER_OF_BIDIR_DQ-1..0], bidir_dq_output_data_out[NUMBER_OF_BIDIR_DQ-1..0], dqs_bus_out, dqs_input_data_out, dqs_oct_out, dqs_oe_out, dqs_output_data_out, dqsn_bus_out, dqsn_input_data_out, dqsn_oct_out, dqsn_oe_out, dqsn_output_data_out, input_dq_hr_input_data_out[NUMBER_OF_INPUT_DQ * 4-1..0], input_dq_input_data_out[NUMBER_OF_INPUT_DQ-1..0], input_dq_input_data_out_high[NUMBER_OF_INPUT_DQ-1..0], input_dq_input_data_out_low[NUMBER_OF_INPUT_DQ-1..0], io_clock_divider_clkout[NUMBER_OF_CLK_DIVIDER-1..0], io_clock_divider_slaveout, output_dq_oe_out[NUMBER_OF_OUTPUT_DQ-1..0], output_dq_output_data_out[NUMBER_OF_OUTPUT_DQ-1..0]);


SUBDESIGN altdq_dqs
(
	bidir_dq_areset[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	bidir_dq_hr_input_data_out[NUMBER_OF_BIDIR_DQ * 4-1..0]		:	OUTPUT;
	bidir_dq_hr_oe_in[NUMBER_OF_BIDIR_DQ * 2-1..0]		:	INPUT = GND;
	bidir_dq_hr_output_data_in[NUMBER_OF_BIDIR_DQ * 4-1..0]		:	INPUT = GND;
	bidir_dq_input_data_in[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	bidir_dq_input_data_out[NUMBER_OF_BIDIR_DQ-1..0]		:	OUTPUT;
	bidir_dq_input_data_out_high[NUMBER_OF_BIDIR_DQ-1..0]		:	OUTPUT;
	bidir_dq_input_data_out_low[NUMBER_OF_BIDIR_DQ-1..0]		:	OUTPUT;
	bidir_dq_io_config_ena[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = VCC;
	bidir_dq_oct_out[NUMBER_OF_BIDIR_DQ-1..0]		:	OUTPUT;
	bidir_dq_oe_in[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	bidir_dq_oe_out[NUMBER_OF_BIDIR_DQ-1..0]		:	OUTPUT;
	bidir_dq_output_data_in[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	bidir_dq_output_data_in_high[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	bidir_dq_output_data_in_low[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	bidir_dq_output_data_out[NUMBER_OF_BIDIR_DQ-1..0]		:	OUTPUT;
	bidir_dq_sreset[NUMBER_OF_BIDIR_DQ-1..0]		:	INPUT = GND;
	config_clk		:	INPUT = GND;
	config_datain		:	INPUT = GND;
	config_update		:	INPUT = GND;
	core_delayctrlin[5..0]		:	INPUT = GND;
	dll_delayctrlin[5..0]		:	INPUT = GND;
	dq_hr_output_reg_clk		:	INPUT = GND;
	dq_input_reg_clk		:	INPUT = GND;
	dq_input_reg_clkena		:	INPUT = VCC;
	dq_ipa_clk		:	INPUT = GND;
	dq_output_reg_clk		:	INPUT = GND;
	dq_output_reg_clkena		:	INPUT = VCC;
	dq_resync_reg_clk		:	INPUT = GND;
	dqs_areset		:	INPUT = GND;
	dqs_bus_out		:	OUTPUT;
	dqs_config_ena		:	INPUT = VCC;
	dqs_enable_ctrl_clk		:	INPUT = VCC;
	dqs_enable_ctrl_hr_datainhi		:	INPUT = GND;
	dqs_enable_ctrl_hr_datainlo		:	INPUT = GND;
	dqs_enable_ctrl_in		:	INPUT = VCC;
	dqs_enable_in		:	INPUT = VCC;
	dqs_hr_oe_in[1..0]		:	INPUT = GND;
	dqs_hr_output_data_in[3..0]		:	INPUT = GND;
	dqs_hr_output_reg_clk		:	INPUT = GND;
	dqs_input_data_in		:	INPUT = GND;
	dqs_input_data_out		:	OUTPUT;
	dqs_io_config_ena		:	INPUT = VCC;
	dqs_oct_out		:	OUTPUT;
	dqs_oe_in		:	INPUT = GND;
	dqs_oe_out		:	OUTPUT;
	dqs_output_data_in		:	INPUT = GND;
	dqs_output_data_in_high		:	INPUT = GND;
	dqs_output_data_in_low		:	INPUT = GND;
	dqs_output_data_out		:	OUTPUT;
	dqs_output_reg_clk		:	INPUT = GND;
	dqs_output_reg_clkena		:	INPUT = VCC;
	dqs_sreset		:	INPUT = GND;
	dqsn_areset		:	INPUT = GND;
	dqsn_bus_out		:	OUTPUT;
	dqsn_hr_oe_in[1..0]		:	INPUT = GND;
	dqsn_hr_output_data_in[3..0]		:	INPUT = GND;
	dqsn_input_data_in		:	INPUT = GND;
	dqsn_input_data_out		:	OUTPUT;
	dqsn_io_config_ena		:	INPUT = VCC;
	dqsn_oct_out		:	OUTPUT;
	dqsn_oe_in		:	INPUT = GND;
	dqsn_oe_out		:	OUTPUT;
	dqsn_output_data_in		:	INPUT = GND;
	dqsn_output_data_in_high		:	INPUT = GND;
	dqsn_output_data_in_low		:	INPUT = GND;
	dqsn_output_data_out		:	OUTPUT;
	dqsn_sreset		:	INPUT = GND;
	dqsupdateen		:	INPUT = GND;
	hr_oct_in[1..0]		:	INPUT = GND;
	hr_oct_reg_clk		:	INPUT = GND;
	input_dq_areset[NUMBER_OF_INPUT_DQ-1..0]		:	INPUT = GND;
	input_dq_hr_input_data_out[NUMBER_OF_INPUT_DQ * 4-1..0]		:	OUTPUT;
	input_dq_input_data_in[NUMBER_OF_INPUT_DQ-1..0]		:	INPUT = GND;
	input_dq_input_data_out[NUMBER_OF_INPUT_DQ-1..0]		:	OUTPUT;
	input_dq_input_data_out_high[NUMBER_OF_INPUT_DQ-1..0]		:	OUTPUT;
	input_dq_input_data_out_low[NUMBER_OF_INPUT_DQ-1..0]		:	OUTPUT;
	input_dq_io_config_ena[NUMBER_OF_INPUT_DQ-1..0]		:	INPUT = VCC;
	input_dq_sreset[NUMBER_OF_INPUT_DQ-1..0]		:	INPUT = GND;
	io_clock_divider_clk		:	INPUT = GND;
	io_clock_divider_clkout[NUMBER_OF_CLK_DIVIDER-1..0]		:	OUTPUT;
	io_clock_divider_masterin		:	INPUT = GND;
	io_clock_divider_slaveout		:	OUTPUT;
	oct_in		:	INPUT = GND;
	oct_reg_clk		:	INPUT = GND;
	offsetctrlin[5..0]		:	INPUT = GND;
	output_dq_areset[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = GND;
	output_dq_hr_oe_in[NUMBER_OF_OUTPUT_DQ * 2-1..0]		:	INPUT = GND;
	output_dq_hr_output_data_in[NUMBER_OF_OUTPUT_DQ * 4-1..0]		:	INPUT = GND;
	output_dq_io_config_ena[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = VCC;
	output_dq_oe_in[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = GND;
	output_dq_oe_out[NUMBER_OF_OUTPUT_DQ-1..0]		:	OUTPUT;
	output_dq_output_data_in[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = GND;
	output_dq_output_data_in_high[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = GND;
	output_dq_output_data_in_low[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = GND;
	output_dq_output_data_out[NUMBER_OF_OUTPUT_DQ-1..0]		:	OUTPUT;
	output_dq_sreset[NUMBER_OF_OUTPUT_DQ-1..0]		:	INPUT = GND;
)
VARIABLE
	IF CBXI_PARAMETER != "NOTHING" GENERATE
		auto_generated : @CBXI_PARAMETER WITH ( CBXI_PARAMETER = "NOTHING" );
	END GENERATE;
BEGIN
	ASSERT (CBXI_PARAMETER != "NOTHING")
	REPORT "Valid clear box generator not found or Errors encountered during clear box generation"
	SEVERITY ERROR;
	IF (CBXI_PARAMETER != "NOTHING") GENERATE
		IF USED(bidir_dq_areset) GENERATE
			auto_generated.bidir_dq_areset[] = bidir_dq_areset[];
		END GENERATE;
		IF USED(bidir_dq_hr_input_data_out) GENERATE
			bidir_dq_hr_input_data_out[] = auto_generated.bidir_dq_hr_input_data_out[];
		ELSE GENERATE
			bidir_dq_hr_input_data_out[] = GND;
		END GENERATE;
		IF USED(bidir_dq_hr_oe_in) GENERATE
			auto_generated.bidir_dq_hr_oe_in[] = bidir_dq_hr_oe_in[];
		END GENERATE;
		IF USED(bidir_dq_hr_output_data_in) GENERATE
			auto_generated.bidir_dq_hr_output_data_in[] = bidir_dq_hr_output_data_in[];
		END GENERATE;
		IF USED(bidir_dq_input_data_in) GENERATE
			auto_generated.bidir_dq_input_data_in[] = bidir_dq_input_data_in[];
		END GENERATE;
		IF USED(bidir_dq_input_data_out) GENERATE
			bidir_dq_input_data_out[] = auto_generated.bidir_dq_input_data_out[];
		ELSE GENERATE
			bidir_dq_input_data_out[] = GND;
		END GENERATE;
		IF USED(bidir_dq_input_data_out_high) GENERATE
			bidir_dq_input_data_out_high[] = auto_generated.bidir_dq_input_data_out_high[];
		ELSE GENERATE
			bidir_dq_input_data_out_high[] = GND;
		END GENERATE;
		IF USED(bidir_dq_input_data_out_low) GENERATE
			bidir_dq_input_data_out_low[] = auto_generated.bidir_dq_input_data_out_low[];
		ELSE GENERATE
			bidir_dq_input_data_out_low[] = GND;
		END GENERATE;
		IF USED(bidir_dq_io_config_ena) GENERATE
			auto_generated.bidir_dq_io_config_ena[] = bidir_dq_io_config_ena[];
		END GENERATE;
		IF USED(bidir_dq_oct_out) GENERATE
			bidir_dq_oct_out[] = auto_generated.bidir_dq_oct_out[];
		ELSE GENERATE
			bidir_dq_oct_out[] = GND;
		END GENERATE;
		IF USED(bidir_dq_oe_in) GENERATE
			auto_generated.bidir_dq_oe_in[] = bidir_dq_oe_in[];
		END GENERATE;
		IF USED(bidir_dq_oe_out) GENERATE
			bidir_dq_oe_out[] = auto_generated.bidir_dq_oe_out[];
		ELSE GENERATE
			bidir_dq_oe_out[] = GND;
		END GENERATE;
		IF USED(bidir_dq_output_data_in) GENERATE
			auto_generated.bidir_dq_output_data_in[] = bidir_dq_output_data_in[];
		END GENERATE;
		IF USED(bidir_dq_output_data_in_high) GENERATE
			auto_generated.bidir_dq_output_data_in_high[] = bidir_dq_output_data_in_high[];
		END GENERATE;
		IF USED(bidir_dq_output_data_in_low) GENERATE
			auto_generated.bidir_dq_output_data_in_low[] = bidir_dq_output_data_in_low[];
		END GENERATE;
		IF USED(bidir_dq_output_data_out) GENERATE
			bidir_dq_output_data_out[] = auto_generated.bidir_dq_output_data_out[];
		ELSE GENERATE
			bidir_dq_output_data_out[] = GND;
		END GENERATE;
		IF USED(bidir_dq_sreset) GENERATE
			auto_generated.bidir_dq_sreset[] = bidir_dq_sreset[];
		END GENERATE;
		IF USED(config_clk) GENERATE
			auto_generated.config_clk = config_clk;
		END GENERATE;
		IF USED(config_datain) GENERATE
			auto_generated.config_datain = config_datain;
		END GENERATE;
		IF USED(config_update) GENERATE
			auto_generated.config_update = config_update;
		END GENERATE;
		IF USED(core_delayctrlin) GENERATE
			auto_generated.core_delayctrlin[] = core_delayctrlin[];
		END GENERATE;
		IF USED(dll_delayctrlin) GENERATE
			auto_generated.dll_delayctrlin[] = dll_delayctrlin[];
		END GENERATE;
		IF USED(dq_hr_output_reg_clk) GENERATE
			auto_generated.dq_hr_output_reg_clk = dq_hr_output_reg_clk;
		END GENERATE;
		IF USED(dq_input_reg_clk) GENERATE
			auto_generated.dq_input_reg_clk = dq_input_reg_clk;
		END GENERATE;
		IF USED(dq_input_reg_clkena) GENERATE
			auto_generated.dq_input_reg_clkena = dq_input_reg_clkena;
		END GENERATE;
		IF USED(dq_ipa_clk) GENERATE
			auto_generated.dq_ipa_clk = dq_ipa_clk;
		END GENERATE;
		IF USED(dq_output_reg_clk) GENERATE
			auto_generated.dq_output_reg_clk = dq_output_reg_clk;
		END GENERATE;
		IF USED(dq_output_reg_clkena) GENERATE
			auto_generated.dq_output_reg_clkena = dq_output_reg_clkena;
		END GENERATE;
		IF USED(dq_resync_reg_clk) GENERATE
			auto_generated.dq_resync_reg_clk = dq_resync_reg_clk;
		END GENERATE;
		IF USED(dqs_areset) GENERATE
			auto_generated.dqs_areset = dqs_areset;
		END GENERATE;
		IF USED(dqs_bus_out) GENERATE
			dqs_bus_out = auto_generated.dqs_bus_out;
		ELSE GENERATE
			dqs_bus_out = GND;
		END GENERATE;
		IF USED(dqs_config_ena) GENERATE
			auto_generated.dqs_config_ena = dqs_config_ena;
		END GENERATE;
		IF USED(dqs_enable_ctrl_clk) GENERATE
			auto_generated.dqs_enable_ctrl_clk = dqs_enable_ctrl_clk;
		END GENERATE;
		IF USED(dqs_enable_ctrl_hr_datainhi) GENERATE
			auto_generated.dqs_enable_ctrl_hr_datainhi = dqs_enable_ctrl_hr_datainhi;
		END GENERATE;
		IF USED(dqs_enable_ctrl_hr_datainlo) GENERATE
			auto_generated.dqs_enable_ctrl_hr_datainlo = dqs_enable_ctrl_hr_datainlo;
		END GENERATE;
		IF USED(dqs_enable_ctrl_in) GENERATE
			auto_generated.dqs_enable_ctrl_in = dqs_enable_ctrl_in;
		END GENERATE;
		IF USED(dqs_enable_in) GENERATE
			auto_generated.dqs_enable_in = dqs_enable_in;
		END GENERATE;
		IF USED(dqs_hr_oe_in) GENERATE
			auto_generated.dqs_hr_oe_in[] = dqs_hr_oe_in[];
		END GENERATE;
		IF USED(dqs_hr_output_data_in) GENERATE
			auto_generated.dqs_hr_output_data_in[] = dqs_hr_output_data_in[];
		END GENERATE;
		IF USED(dqs_hr_output_reg_clk) GENERATE
			auto_generated.dqs_hr_output_reg_clk = dqs_hr_output_reg_clk;
		END GENERATE;
		IF USED(dqs_input_data_in) GENERATE
			auto_generated.dqs_input_data_in = dqs_input_data_in;
		END GENERATE;
		IF USED(dqs_input_data_out) GENERATE
			dqs_input_data_out = auto_generated.dqs_input_data_out;
		ELSE GENERATE
			dqs_input_data_out = GND;
		END GENERATE;
		IF USED(dqs_io_config_ena) GENERATE
			auto_generated.dqs_io_config_ena = dqs_io_config_ena;
		END GENERATE;
		IF USED(dqs_oct_out) GENERATE
			dqs_oct_out = auto_generated.dqs_oct_out;
		ELSE GENERATE
			dqs_oct_out = GND;
		END GENERATE;
		IF USED(dqs_oe_in) GENERATE
			auto_generated.dqs_oe_in = dqs_oe_in;
		END GENERATE;
		IF USED(dqs_oe_out) GENERATE
			dqs_oe_out = auto_generated.dqs_oe_out;
		ELSE GENERATE
			dqs_oe_out = GND;
		END GENERATE;
		IF USED(dqs_output_data_in) GENERATE
			auto_generated.dqs_output_data_in = dqs_output_data_in;
		END GENERATE;
		IF USED(dqs_output_data_in_high) GENERATE
			auto_generated.dqs_output_data_in_high = dqs_output_data_in_high;
		END GENERATE;
		IF USED(dqs_output_data_in_low) GENERATE
			auto_generated.dqs_output_data_in_low = dqs_output_data_in_low;
		END GENERATE;
		IF USED(dqs_output_data_out) GENERATE
			dqs_output_data_out = auto_generated.dqs_output_data_out;
		ELSE GENERATE
			dqs_output_data_out = GND;
		END GENERATE;
		IF USED(dqs_output_reg_clk) GENERATE
			auto_generated.dqs_output_reg_clk = dqs_output_reg_clk;
		END GENERATE;
		IF USED(dqs_output_reg_clkena) GENERATE
			auto_generated.dqs_output_reg_clkena = dqs_output_reg_clkena;
		END GENERATE;
		IF USED(dqs_sreset) GENERATE
			auto_generated.dqs_sreset = dqs_sreset;
		END GENERATE;
		IF USED(dqsn_areset) GENERATE
			auto_generated.dqsn_areset = dqsn_areset;
		END GENERATE;
		IF USED(dqsn_bus_out) GENERATE
			dqsn_bus_out = auto_generated.dqsn_bus_out;
		ELSE GENERATE
			dqsn_bus_out = GND;
		END GENERATE;
		IF USED(dqsn_hr_oe_in) GENERATE
			auto_generated.dqsn_hr_oe_in[] = dqsn_hr_oe_in[];
		END GENERATE;
		IF USED(dqsn_hr_output_data_in) GENERATE
			auto_generated.dqsn_hr_output_data_in[] = dqsn_hr_output_data_in[];
		END GENERATE;
		IF USED(dqsn_input_data_in) GENERATE
			auto_generated.dqsn_input_data_in = dqsn_input_data_in;
		END GENERATE;
		IF USED(dqsn_input_data_out) GENERATE
			dqsn_input_data_out = auto_generated.dqsn_input_data_out;
		ELSE GENERATE
			dqsn_input_data_out = GND;
		END GENERATE;
		IF USED(dqsn_io_config_ena) GENERATE
			auto_generated.dqsn_io_config_ena = dqsn_io_config_ena;
		END GENERATE;
		IF USED(dqsn_oct_out) GENERATE
			dqsn_oct_out = auto_generated.dqsn_oct_out;
		ELSE GENERATE
			dqsn_oct_out = GND;
		END GENERATE;
		IF USED(dqsn_oe_in) GENERATE
			auto_generated.dqsn_oe_in = dqsn_oe_in;
		END GENERATE;
		IF USED(dqsn_oe_out) GENERATE
			dqsn_oe_out = auto_generated.dqsn_oe_out;
		ELSE GENERATE
			dqsn_oe_out = GND;
		END GENERATE;
		IF USED(dqsn_output_data_in) GENERATE
			auto_generated.dqsn_output_data_in = dqsn_output_data_in;
		END GENERATE;
		IF USED(dqsn_output_data_in_high) GENERATE
			auto_generated.dqsn_output_data_in_high = dqsn_output_data_in_high;
		END GENERATE;
		IF USED(dqsn_output_data_in_low) GENERATE
			auto_generated.dqsn_output_data_in_low = dqsn_output_data_in_low;
		END GENERATE;
		IF USED(dqsn_output_data_out) GENERATE
			dqsn_output_data_out = auto_generated.dqsn_output_data_out;
		ELSE GENERATE
			dqsn_output_data_out = GND;
		END GENERATE;
		IF USED(dqsn_sreset) GENERATE
			auto_generated.dqsn_sreset = dqsn_sreset;
		END GENERATE;
		IF USED(dqsupdateen) GENERATE
			auto_generated.dqsupdateen = dqsupdateen;
		END GENERATE;
		IF USED(hr_oct_in) GENERATE
			auto_generated.hr_oct_in[] = hr_oct_in[];
		END GENERATE;
		IF USED(hr_oct_reg_clk) GENERATE
			auto_generated.hr_oct_reg_clk = hr_oct_reg_clk;
		END GENERATE;
		IF USED(input_dq_areset) GENERATE
			auto_generated.input_dq_areset[] = input_dq_areset[];
		END GENERATE;
		IF USED(input_dq_hr_input_data_out) GENERATE
			input_dq_hr_input_data_out[] = auto_generated.input_dq_hr_input_data_out[];
		ELSE GENERATE
			input_dq_hr_input_data_out[] = GND;
		END GENERATE;
		IF USED(input_dq_input_data_in) GENERATE
			auto_generated.input_dq_input_data_in[] = input_dq_input_data_in[];
		END GENERATE;
		IF USED(input_dq_input_data_out) GENERATE
			input_dq_input_data_out[] = auto_generated.input_dq_input_data_out[];
		ELSE GENERATE
			input_dq_input_data_out[] = GND;
		END GENERATE;
		IF USED(input_dq_input_data_out_high) GENERATE
			input_dq_input_data_out_high[] = auto_generated.input_dq_input_data_out_high[];
		ELSE GENERATE
			input_dq_input_data_out_high[] = GND;
		END GENERATE;
		IF USED(input_dq_input_data_out_low) GENERATE
			input_dq_input_data_out_low[] = auto_generated.input_dq_input_data_out_low[];
		ELSE GENERATE
			input_dq_input_data_out_low[] = GND;
		END GENERATE;
		IF USED(input_dq_io_config_ena) GENERATE
			auto_generated.input_dq_io_config_ena[] = input_dq_io_config_ena[];
		END GENERATE;
		IF USED(input_dq_sreset) GENERATE
			auto_generated.input_dq_sreset[] = input_dq_sreset[];
		END GENERATE;
		IF USED(io_clock_divider_clk) GENERATE
			auto_generated.io_clock_divider_clk = io_clock_divider_clk;
		END GENERATE;
		IF USED(io_clock_divider_clkout) GENERATE
			io_clock_divider_clkout[] = auto_generated.io_clock_divider_clkout[];
		ELSE GENERATE
			io_clock_divider_clkout[] = GND;
		END GENERATE;
		IF USED(io_clock_divider_masterin) GENERATE
			auto_generated.io_clock_divider_masterin = io_clock_divider_masterin;
		END GENERATE;
		IF USED(io_clock_divider_slaveout) GENERATE
			io_clock_divider_slaveout = auto_generated.io_clock_divider_slaveout;
		ELSE GENERATE
			io_clock_divider_slaveout = GND;
		END GENERATE;
		IF USED(oct_in) GENERATE
			auto_generated.oct_in = oct_in;
		END GENERATE;
		IF USED(oct_reg_clk) GENERATE
			auto_generated.oct_reg_clk = oct_reg_clk;
		END GENERATE;
		IF USED(offsetctrlin) GENERATE
			auto_generated.offsetctrlin[] = offsetctrlin[];
		END GENERATE;
		IF USED(output_dq_areset) GENERATE
			auto_generated.output_dq_areset[] = output_dq_areset[];
		END GENERATE;
		IF USED(output_dq_hr_oe_in) GENERATE
			auto_generated.output_dq_hr_oe_in[] = output_dq_hr_oe_in[];
		END GENERATE;
		IF USED(output_dq_hr_output_data_in) GENERATE
			auto_generated.output_dq_hr_output_data_in[] = output_dq_hr_output_data_in[];
		END GENERATE;
		IF USED(output_dq_io_config_ena) GENERATE
			auto_generated.output_dq_io_config_ena[] = output_dq_io_config_ena[];
		END GENERATE;
		IF USED(output_dq_oe_in) GENERATE
			auto_generated.output_dq_oe_in[] = output_dq_oe_in[];
		END GENERATE;
		IF USED(output_dq_oe_out) GENERATE
			output_dq_oe_out[] = auto_generated.output_dq_oe_out[];
		ELSE GENERATE
			output_dq_oe_out[] = GND;
		END GENERATE;
		IF USED(output_dq_output_data_in) GENERATE
			auto_generated.output_dq_output_data_in[] = output_dq_output_data_in[];
		END GENERATE;
		IF USED(output_dq_output_data_in_high) GENERATE
			auto_generated.output_dq_output_data_in_high[] = output_dq_output_data_in_high[];
		END GENERATE;
		IF USED(output_dq_output_data_in_low) GENERATE
			auto_generated.output_dq_output_data_in_low[] = output_dq_output_data_in_low[];
		END GENERATE;
		IF USED(output_dq_output_data_out) GENERATE
			output_dq_output_data_out[] = auto_generated.output_dq_output_data_out[];
		ELSE GENERATE
			output_dq_output_data_out[] = GND;
		END GENERATE;
		IF USED(output_dq_sreset) GENERATE
			auto_generated.output_dq_sreset[] = output_dq_sreset[];
		END GENERATE;
	END GENERATE;
END;
