-- **************************************************************************
--  Encoder - A_ENCODER
--
--  Copyright 1991-2009 Corporation  
--  Your use of Altera Corporation's design tools, logic functions  
--  and other software and tools, and its AMPP partner logic  
--  functions, and any output files from any of the foregoing  
--  (including device programming or simulation files), and any  
--  associated documentation or information are expressly subject  
--  to the terms and conditions of the Altera Program License  
--  Subscription Agreement, Altera MegaCore Function License  
--  Agreement, or other applicable license agreement, including,  
--  without limitation, that your use is for the sole purpose of  
--  programming logic devices manufactured by Altera and sold by  
--  Altera or its authorized distributors.  Please refer to the  
--  applicable agreement for further details. 
--  
--  9.0 Build 184  03/01/2009   
--
--	Version 1.0
--
--
-- **************************************************************************
--------------------------------------------------------------------
PARAMETERS
(
	WIDTH
);

--------------------------------------------------------------------
CONSTANT WIDTHAD	= (WIDTH >= 2) ? CEIL(LOG2(WIDTH)) : 1;
DEFINE BOX_WIDTH(i) = 2^(i + 1);
DEFINE BOX_HALF_WIDTH(i) = 2^i;
CONSTANT MAX_WIDTH = 2^WIDTHAD;
--------------------------------------------------------------------
SUBDESIGN a_encoder
(
	d[WIDTH-1..0]		: INPUT;
	q[WIDTHAD-1..0] 	: OUTPUT;
)

--------------------------------------------------------------------
VARIABLE
	full_array[MAX_WIDTH - 1..0] : NODE;
--------------------------------------------------------------------
BEGIN
	ASSERT (WIDTH >= 2) 
		report "WIDTH must be at least 2" severity error;

	FOR i IN MAX_WIDTH - 1 TO 0 GENERATE
		IF i < WIDTH GENERATE
			full_array[i] = d[i];
		ELSE GENERATE
			full_array[i] = GND;
		END GENERATE;
	END GENERATE;

	FOR i IN WIDTHAD - 1 TO 0 GENERATE
		FOR j IN BOX_HALF_WIDTH(i) - 1 TO 0 GENERATE
			FOR k IN CEIL(MAX_WIDTH DIV BOX_WIDTH(i)) - 1 TO 0 GENERATE
				q[i] = full_array[((k + 1) * BOX_WIDTH(i)) - 1 - j];
			END GENERATE;
		END GENERATE;
	END GENERATE;
	IF !USED(q) GENERATE
		q[] = GND;
	END GENERATE;
END;

