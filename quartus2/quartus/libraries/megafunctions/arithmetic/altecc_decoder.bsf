/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2007 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 64 64 232 224)
	(text "altecc_decoder" (rect 24 8 127 24)(font "Arial" (font_size 10)))
	(text "inst" (rect 8 128 25 140)(font "Arial" ))
	(port
		(pt 0 48)
		(input)
		(text "data[]" (rect 24 40 55 54)(font "Arial" (font_size 8)))
		(text "data[]" (rect 24 40 55 54)(font "Arial" (font_size 8)))
		(line (pt 0 48)(pt 16 48)(color 0 128 255)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "clock" (rect 24 96 53 110)(font "Arial" (font_size 8)))
		(text "clock" (rect 24 72 53 86)(font "Arial" (font_size 8)))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "clocken" (rect 24 120 67 134)(font "Arial" (font_size 8)))
		(text "clocken" (rect 24 88 67 102)(font "Arial" (font_size 8)))
		(line (pt 0 96)(pt 16 96)(line_width 1))
	)
	(port
		(pt 80 160)
		(input)
		(text "aclr" (rect 80 110 94 131)(font "Arial" (font_size 8))(vertical))
		(text "aclr" (rect 72 118 86 139)(font "Arial" (font_size 8))(vertical))
		(line (pt 80 160)(pt 80 144)(line_width 1))
	)
	(port
		(pt 168 48)
		(output)
		(text "q[]" (rect 118 40 132 54)(font "Arial" (font_size 8)))
		(text "q[]" (rect 136 40 150 54)(font "Arial" (font_size 8)))
		(line (pt 168 48)(pt 152 48)(color 128 0 255)(line_width 3))
	)
	(port
		(pt 168 72)
		(output)
		(text "err_detected" (rect 118 64 191 78)(font "Arial" (font_size 8)))
		(text "err_detected" (rect 88 64 161 78)(font "Arial" (font_size 8)))
		(line (pt 168 72)(pt 152 72)(line_width 1))
	)
	(port
		(pt 168 88)
		(output)
		(text "err_corrected" (rect 118 80 197 94)(font "Arial" (font_size 8)))
		(text "err_corrected" (rect 80 80 159 94)(font "Arial" (font_size 8)))
		(line (pt 168 88)(pt 152 88)(line_width 1))
	)
	(port
		(pt 168 104)
		(output)
		(text "err_fatal" (rect 118 96 166 110)(font "Arial" (font_size 8)))
		(text "err_fatal" (rect 110 96 158 110)(font "Arial" (font_size 8)))
		(line (pt 168 104)(pt 152 104)(line_width 1))
	)
	(parameter
		"width_dataword"
		""
		"The width of the raw data"
	)
	(parameter
		"width_codeword"
		""
		"The width of the corresponded code word."
	)
	(parameter
		"lpm_pipeline"
		"0"
		"To specify the pipeline for the circuit."
	)
	(drawing
		(rectangle (rect 16 24 152 144)(line_width 1))
	)
	(annotation_block (parameter)(rect 200 8 328 64))
)
