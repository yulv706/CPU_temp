------------------------------------------------------------------
-- altiobuf_out parameterized megafunction
-- Generated with 'clearbox' loader - do not edit
------------------------------------------------------------------


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.

--  Version 9.0 Build 184 04/29/2009

OPTIONS NAME_SUBSTITUTION = ON;

OPTIONS TREAT_DEFAULT_VALUE_AS_UNUSED = ON;

PARAMETERS
(
	ENABLE_BUS_HOLD = "FALSE",
	left_shift_series_termination_control = "FALSE",
	NUMBER_OF_CHANNELS,
	OPEN_DRAIN_OUTPUT = "FALSE",
	PSEUDO_DIFFERENTIAL_MODE = "FALSE",
	USE_DIFFERENTIAL_MODE = "FALSE",
	USE_OE = "FALSE",
	USE_OUT_DYNAMIC_DELAY_CHAIN1 = "FALSE",
	USE_OUT_DYNAMIC_DELAY_CHAIN2 = "FALSE",
	USE_TERMINATION_CONTROL = "FALSE",
	WIDTH_PTC = 14,
	WIDTH_STC = 14,
	CBXI_PARAMETER = "NOTHING"
);
FUNCTION @CBXI_PARAMETER (datain[NUMBER_OF_CHANNELS-1..0], io_config_clk, io_config_clkena[NUMBER_OF_CHANNELS-1..0], io_config_datain, io_config_update, oe[NUMBER_OF_CHANNELS-1..0], oe_b[NUMBER_OF_CHANNELS-1..0], parallelterminationcontrol[WIDTH_PTC * NUMBER_OF_CHANNELS-1..0], parallelterminationcontrol_b[WIDTH_PTC * NUMBER_OF_CHANNELS-1..0], seriesterminationcontrol[WIDTH_STC * NUMBER_OF_CHANNELS-1..0], seriesterminationcontrol_b[WIDTH_STC * NUMBER_OF_CHANNELS-1..0])
RETURNS (dataout[NUMBER_OF_CHANNELS-1..0], dataout_b[NUMBER_OF_CHANNELS-1..0]);


SUBDESIGN altiobuf_out
(
	datain[NUMBER_OF_CHANNELS-1..0]		:	INPUT;
	dataout[NUMBER_OF_CHANNELS-1..0]		:	OUTPUT;
	dataout_b[NUMBER_OF_CHANNELS-1..0]		:	OUTPUT;
	io_config_clk		:	INPUT = GND;
	io_config_clkena[NUMBER_OF_CHANNELS-1..0]		:	INPUT = GND;
	io_config_datain		:	INPUT = GND;
	io_config_update		:	INPUT = GND;
	oe[NUMBER_OF_CHANNELS-1..0]		:	INPUT = VCC;
	oe_b[NUMBER_OF_CHANNELS-1..0]		:	INPUT = VCC;
	parallelterminationcontrol[WIDTH_PTC * NUMBER_OF_CHANNELS-1..0]		:	INPUT = GND;
	parallelterminationcontrol_b[WIDTH_PTC * NUMBER_OF_CHANNELS-1..0]		:	INPUT = GND;
	seriesterminationcontrol[WIDTH_STC * NUMBER_OF_CHANNELS-1..0]		:	INPUT = GND;
	seriesterminationcontrol_b[WIDTH_STC * NUMBER_OF_CHANNELS-1..0]		:	INPUT = GND;
)
VARIABLE
	IF CBXI_PARAMETER != "NOTHING" GENERATE
		auto_generated : @CBXI_PARAMETER WITH ( CBXI_PARAMETER = "NOTHING" );
	END GENERATE;
BEGIN
	ASSERT (CBXI_PARAMETER != "NOTHING")
	REPORT "Valid clear box generator not found or Errors encountered during clear box generation"
	SEVERITY ERROR;
	IF (CBXI_PARAMETER != "NOTHING") GENERATE
		IF USED(datain) GENERATE
			auto_generated.datain[] = datain[];
		END GENERATE;
		IF USED(dataout) GENERATE
			dataout[] = auto_generated.dataout[];
		ELSE GENERATE
			dataout[] = GND;
		END GENERATE;
		IF USED(dataout_b) GENERATE
			dataout_b[] = auto_generated.dataout_b[];
		ELSE GENERATE
			dataout_b[] = GND;
		END GENERATE;
		IF USED(io_config_clk) GENERATE
			auto_generated.io_config_clk = io_config_clk;
		END GENERATE;
		IF USED(io_config_clkena) GENERATE
			auto_generated.io_config_clkena[] = io_config_clkena[];
		END GENERATE;
		IF USED(io_config_datain) GENERATE
			auto_generated.io_config_datain = io_config_datain;
		END GENERATE;
		IF USED(io_config_update) GENERATE
			auto_generated.io_config_update = io_config_update;
		END GENERATE;
		IF USED(oe) GENERATE
			auto_generated.oe[] = oe[];
		END GENERATE;
		IF USED(oe_b) GENERATE
			auto_generated.oe_b[] = oe_b[];
		END GENERATE;
		IF USED(parallelterminationcontrol) GENERATE
			auto_generated.parallelterminationcontrol[] = parallelterminationcontrol[];
		END GENERATE;
		IF USED(parallelterminationcontrol_b) GENERATE
			auto_generated.parallelterminationcontrol_b[] = parallelterminationcontrol_b[];
		END GENERATE;
		IF USED(seriesterminationcontrol) GENERATE
			auto_generated.seriesterminationcontrol[] = seriesterminationcontrol[];
		END GENERATE;
		IF USED(seriesterminationcontrol_b) GENERATE
			auto_generated.seriesterminationcontrol_b[] = seriesterminationcontrol_b[];
		END GENERATE;
	END GENERATE;
END;
