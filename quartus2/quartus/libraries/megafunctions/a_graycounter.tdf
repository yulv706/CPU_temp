------------------------------------------------------------------
-- a_graycounter parameterized megafunction
-- Generated with 'clearbox' loader - do not edit
------------------------------------------------------------------


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.

--  Version 9.0 Build 184 04/29/2009

OPTIONS NAME_SUBSTITUTION = ON;

OPTIONS TREAT_DEFAULT_VALUE_AS_UNUSED = ON;

PARAMETERS
(
	PVALUE = 0,
	WIDTH,
	CBXI_PARAMETER = "NOTHING"
);
FUNCTION @CBXI_PARAMETER (aclr, clk_en, clock, cnt_en, sclr, updown)
RETURNS (q[width-1..0], qbin[width-1..0]);


SUBDESIGN a_graycounter
(
	aclr		:	INPUT = GND;
	clk_en		:	INPUT = VCC;
	clock		:	INPUT;
	cnt_en		:	INPUT = VCC;
	q[width-1..0]		:	OUTPUT;
	qbin[width-1..0]		:	OUTPUT;
	sclr		:	INPUT = GND;
	updown		:	INPUT = VCC;
)
VARIABLE
	IF CBXI_PARAMETER != "NOTHING" GENERATE
		auto_generated : @CBXI_PARAMETER WITH ( CBXI_PARAMETER = "NOTHING" );
	END GENERATE;
BEGIN
	ASSERT (CBXI_PARAMETER != "NOTHING")
	REPORT "Valid clear box generator not found or Errors encountered during clear box generation"
	SEVERITY ERROR;
	IF (CBXI_PARAMETER != "NOTHING") GENERATE
		IF USED(aclr) GENERATE
			auto_generated.aclr = aclr;
		END GENERATE;
		IF USED(clk_en) GENERATE
			auto_generated.clk_en = clk_en;
		END GENERATE;
		IF USED(clock) GENERATE
			auto_generated.clock = clock;
		END GENERATE;
		IF USED(cnt_en) GENERATE
			auto_generated.cnt_en = cnt_en;
		END GENERATE;
		IF USED(q) GENERATE
			q[] = auto_generated.q[];
		ELSE GENERATE
			q[] = GND;
		END GENERATE;
		IF USED(qbin) GENERATE
			qbin[] = auto_generated.qbin[];
		ELSE GENERATE
			qbin[] = GND;
		END GENERATE;
		IF USED(sclr) GENERATE
			auto_generated.sclr = sclr;
		END GENERATE;
		IF USED(updown) GENERATE
			auto_generated.updown = updown;
		END GENERATE;
	END GENERATE;
END;
