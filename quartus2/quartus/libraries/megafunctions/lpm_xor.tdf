--------------------------------------------------------------------
--
--	LPM_XOR Parameterized Megafunction
--
--  Copyright 1991-2009 Corporation  
--  Your use of Altera Corporation's design tools, logic functions  
--  and other software and tools, and its AMPP partner logic  
--  functions, and any output files from any of the foregoing  
--  (including device programming or simulation files), and any  
--  associated documentation or information are expressly subject  
--  to the terms and conditions of the Altera Program License  
--  Subscription Agreement, Altera MegaCore Function License  
--  Agreement, or other applicable license agreement, including,  
--  without limitation, that your use is for the sole purpose of  
--  programming logic devices manufactured by Altera and sold by  
--  Altera or its authorized distributors.  Please refer to the  
--  applicable agreement for further details. 
--  
--  9.0 Build 184  03/01/2009   
--
--	Version 1.0
--
--------------------------------------------------------------------

PARAMETERS
(
	LPM_WIDTH,
	LPM_SIZE
);

SUBDESIGN lpm_xor
(
	data[LPM_SIZE-1..0][LPM_WIDTH-1..0]	: INPUT;
	result[LPM_WIDTH-1..0]				: OUTPUT;
)

VARIABLE
	xor_cascade[LPM_WIDTH-1..0][LPM_SIZE-1..0]	: NODE;

BEGIN

	ASSERT (LPM_WIDTH > 0)
			REPORT "Value of LPM_WIDTH parameter value must be greater than 0"
			SEVERITY ERROR
			HELP_ID LPM_XOR_WIDTH;

	ASSERT (LPM_SIZE > 0)
			REPORT "Value of LPM_SIZE parameter value must be greater than 0"
			SEVERITY ERROR
			HELP_ID LPM_XOR_SIZE;

	FOR each_bit IN 0 TO LPM_SIZE-1 GENERATE

		% First bit starts chain %
		IF (each_bit == 0) GENERATE
			xor_cascade[][0] = data[0][];
		ELSE GENERATE
			xor_cascade[][each_bit] =
				data[each_bit][] $ xor_cascade[][each_bit-1];
		END GENERATE;
	END GENERATE;
	result[] = xor_cascade[][LPM_SIZE-1];
	IF !USED(result) GENERATE
		result[] = GND;
	END GENERATE;
END;
