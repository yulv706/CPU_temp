<?xml version="1.0"?>
<ROOT>
	<INCLUDE FILE="altmult_accum_rules.xml" />
	<WIZARD_DATA>
		<WIZARD_MAP NAME="ALTMULT_ACCUM" WIZARD_NAME="ALTMULT_ACCUM (MAC)" MODULE_NAME="almult_accum" >
			<PARAMETER NAME="WIDTHA" CNX_TYPE="PRIVATE" TYPE="STRING" VALUE="WIDTH_A" />
			<PARAMETER NAME="WIDTHB" CNX_TYPE="PRIVATE" TYPE="STRING" VALUE="WIDTH_B" />
			<PARAMETER NAME="SIGNA" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(signa) ? Variable : (REPRESENTATION_A == SIGNED ? Signed : Unsigned)"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(signb) ? Variable : (REPRESENTATION_B == SIGNED ? Signed : Unsigned)"/>
			</PARAMETER>
			<PARAMETER NAME="SCANOUTA" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(scanouta) ? 1 : 0"/>
			</PARAMETER>
			<PARAMETER NAME="SCANOUTB" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(scanoutb) ? 1 : 0"/>
			</PARAMETER>
			<PARAMETER NAME="RTS_WIDTH" CNX_TYPE="PRIVATE" TYPE="STRING" VALUE="WIDTH_RESULT" />
			<PARAMETER NAME="RNFORMAT" CNX_TYPE="PRIVATE" TYPE="STRING" >			
				<FORCE_VALUE TO="((MULTIPLIER_ROUNDING == YES || MULTIPLIER_ROUNDING == VARIABLE || MULTIPLIER_SATURATION == YES || MULTIPLIER_SATURATION == VARIABLE || ACCUMULATOR_ROUNDING == YES || ACCUMULATOR_ROUNDING == VARIABLE || ACCUMULATOR_SATURATION == YES || ACCUMULATOR_SATURATION == VARIABLE) ? 33 : WIDTH_RESULT)" />
			</PARAMETER>
			<PARAMETER NAME="OP1" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(addnsub) ? Variable : (ACCUM_DIRECTION == SUB ? Subtract : Add)"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(accum_sload) ? 1 : 0"/>
			</PARAMETER>
			<PARAMETER NAME="OVERFLOW" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(overflow) ? 1 : 0"/>
			</PARAMETER>
			<PARAMETER NAME="ALL_REG_ACLR" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(aclr3) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="A_CLK_SRC_MULT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="INPUT_REG_A == str(CLOCK0) ? 0 : (INPUT_REG_A == str(CLOCK1) ? 1 : (INPUT_REG_A == str(CLOCK2) ? 2 : (INPUT_REG_A == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="A_ACLR_SRC_MULT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="INPUT_ACLR_A == str(ACLR0) ? 0 : (INPUT_ACLR_A == str(ACLR1) ? 1 : (INPUT_ACLR_A == str(ACLR2) ? 2 : (INPUT_ACLR_A == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNA_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signa) ? (SIGN_REG_A == str(CLOCK0) ? 0 : (SIGN_REG_A == str(CLOCK1) ? 1 : (SIGN_REG_A == str(CLOCK2) ? 2 : (SIGN_REG_A == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNA_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signa) ? (SIGN_ACLR_A == str(ACLR0) ? 0 : (SIGN_ACLR_A == str(ACLR1) ? 1 : (SIGN_ACLR_A == str(ACLR2) ? 2 : (SIGN_ACLR_A == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="B_CLK_SRC_MULT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="INPUT_REG_B == str(CLOCK0) ? 0 : (INPUT_REG_B == str(CLOCK1) ? 1 : (INPUT_REG_B == str(CLOCK2) ? 2 : (INPUT_REG_B == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="B_ACLR_SRC_MULT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="INPUT_ACLR_B == str(ACLR0) ? 0 : (INPUT_ACLR_B == str(ACLR1) ? 1 : (INPUT_ACLR_B == str(ACLR2) ? 2 : (INPUT_ACLR_B == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signb) ? (SIGN_REG_B == str(CLOCK0) ? 0 : (SIGN_REG_B == str(CLOCK1) ? 1 : (SIGN_REG_B == str(CLOCK2) ? 2 : (SIGN_REG_B == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signb) ? (SIGN_ACLR_B == str(ACLR0) ? 0 : (SIGN_ACLR_B == str(ACLR1) ? 1 : (SIGN_ACLR_B == str(ACLR2) ? 2 : (SIGN_ACLR_B == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNA_PIPE_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signa) ? (SIGN_PIPELINE_REG_A == str(CLOCK0) ? 0 : (SIGN_PIPELINE_REG_A == str(CLOCK1) ? 1 : (SIGN_PIPELINE_REG_A == str(CLOCK2) ? 2 : (SIGN_PIPELINE_REG_A == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNA_PIPE_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signa) ? (SIGN_PIPELINE_ACLR_A == str(ACLR0) ? 0 : (SIGN_PIPELINE_ACLR_A == str(ACLR1) ? 1 : (SIGN_PIPELINE_ACLR_A == str(ACLR2) ? 2 : (SIGN_PIPELINE_ACLR_A == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB_PIPE_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signb) ? (SIGN_PIPELINE_REG_B == str(CLOCK0) ? 0 : (SIGN_PIPELINE_REG_B == str(CLOCK1) ? 1 : (SIGN_PIPELINE_REG_B == str(CLOCK2) ? 2 : (SIGN_PIPELINE_REG_B == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB_PIPE_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(signb) ? (SIGN_PIPELINE_ACLR_B == str(ACLR0) ? 0 : (SIGN_PIPELINE_ACLR_B == str(ACLR1) ? 1 : (SIGN_PIPELINE_ACLR_B == str(ACLR2) ? 2 : (SIGN_PIPELINE_ACLR_B == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNA_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(signa) ? (SIGN_REG_A == UNREGISTERED ? 0 : 1) : 0"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNA_PIPE_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(signa) ? (SIGN_PIPELINE_REG_A == UNREGISTERED ? 0 : 1) : 0"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(signb) ? (SIGN_REG_B == UNREGISTERED ? 0 : 1 ) : 0"/>
			</PARAMETER>
			<PARAMETER NAME="SIGNB_PIPE_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="is_used(signb) ? (SIGN_PIPELINE_REG_B == UNREGISTERED ? 0 : 1) : 0"/>
			</PARAMETER>
			<PARAMETER NAME="OUTPUT_REG_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="OUTPUT_REG == str(CLOCK0) ? 0 : (OUTPUT_REG == str(CLOCK1) ? 1 : (OUTPUT_REG == str(CLOCK2) ? 2 : (OUTPUT_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="OUTPUT_REG_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="OUTPUT_ACLR == str(ACLR0) ? 0 : (OUTPUT_ACLR == str(ACLR1) ? 1 : (OUTPUT_ACLR == str(ACLR2) ? 2 : (OUTPUT_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="OUTPUT_EXTRA_LAT" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(EXTRA_ACCUMULATOR_LATENCY)"/>
			</PARAMETER>
			<PARAMETER NAME="Q_CLK_SRC_MULT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="MULTIPLIER_REG == str(CLOCK0) ? 0 : (MULTIPLIER_REG == str(CLOCK1) ? 1 : (MULTIPLIER_REG == str(CLOCK2) ? 2 : (MULTIPLIER_REG == str(CLOCK3) ? 3 : ((EXTRA_MULTIPLIER_LATENCY) > 0 ? 0 : 3))))"/>
			</PARAMETER>
			<PARAMETER NAME="Q_ACLR_SRC_MULT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="MULTIPLIER_ACLR == str(ACLR0) ? 0 : (MULTIPLIER_ACLR == str(ACLR1) ? 1 : (MULTIPLIER_ACLR == str(ACLR2) ? 2 : (MULTIPLIER_ACLR == str(ACLR3) ? 3 : ((EXTRA_MULTIPLIER_LATENCY) > 0 ? 0 : 3))))"/>
			</PARAMETER>
			<PARAMETER NAME="MULT_REGA0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(INPUT_REG_A == UNREGISTERED) ? 0 : 1" />
			</PARAMETER>
			<PARAMETER NAME="MULT_REGB0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(INPUT_REG_B == UNREGISTERED) ? 0 : 1" />
			</PARAMETER>
			<PARAMETER NAME="MULT_REGOUT0" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(MULTIPLIER_REG == UNREGISTERED) ? 0 : 1" />
			</PARAMETER>
			<PARAMETER NAME="EXTRA_MULTIPLIER_LATENCY" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(EXTRA_MULTIPLIER_LATENCY)"/>
			</PARAMETER>

			<PARAMETER NAME="ACCUM_SLOAD_REG" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(accum_sload) ? (ACCUM_SLOAD_REG == str(CLOCK0) ? 0 : (ACCUM_SLOAD_REG == str(CLOCK1) ? 1 : (ACCUM_SLOAD_REG == str(CLOCK2) ? 2 : (ACCUM_SLOAD_REG == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_ACLR" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(accum_sload) ? (ACCUM_SLOAD_ACLR == str(ACLR0) ? 0 : (ACCUM_SLOAD_ACLR == str(ACLR1) ? 1 : (ACCUM_SLOAD_ACLR == str(ACLR2) ? 2 : (ACCUM_SLOAD_ACLR == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_PIPELINE_REG" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(accum_sload) ? (ACCUM_SLOAD_PIPELINE_REG == str(CLOCK0) ? 0 : (ACCUM_SLOAD_PIPELINE_REG == str(CLOCK1) ? 1 : (ACCUM_SLOAD_PIPELINE_REG == str(CLOCK2) ? 2 : (ACCUM_SLOAD_PIPELINE_REG == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_PIPELINE_ACLR" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(accum_sload) ? (ACCUM_SLOAD_PIPELINE_ACLR == str(ACLR0) ? 0 : (ACCUM_SLOAD_PIPELINE_ACLR == str(ACLR1) ? 1 : (ACCUM_SLOAD_PIPELINE_ACLR == str(ACLR2) ? 2 : (ACCUM_SLOAD_PIPELINE_ACLR == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ADDNSUB1_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(!is_used(addnsub) || (ADDNSUB_REG == UNREGISTERED)) ? 0 : 1" />
			</PARAMETER>
			<PARAMETER NAME="ADDNSUB1_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(addnsub) ? (ADDNSUB_REG == str(CLOCK0) ? 0 : (ADDNSUB_REG == str(CLOCK1) ? 1 : (ADDNSUB_REG == str(CLOCK2) ? 2 : (ADDNSUB_REG == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ADDNSUB1_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(addnsub) ? (ADDNSUB_ACLR == str(ACLR0) ? 0 : (ADDNSUB_ACLR == str(ACLR1) ? 1 : (ADDNSUB_ACLR == str(ACLR2) ? 2 : (ADDNSUB_ACLR == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ADDNSUB1_PIPE_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(!is_used(addnsub) || (ADDNSUB_PIPELINE_REG == UNREGISTERED)) ? 0 : 1" />
			</PARAMETER>
			<PARAMETER NAME="ADDNSUB1_PIPE_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(addnsub) ? (ADDNSUB_PIPELINE_REG == str(CLOCK0) ? 0 : (ADDNSUB_PIPELINE_REG == str(CLOCK1) ? 1 : (ADDNSUB_PIPELINE_REG == str(CLOCK2) ? 2 : (ADDNSUB_PIPELINE_REG == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ADDNSUB1_PIPE_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="is_used(addnsub) ? (ADDNSUB_PIPELINE_ACLR == str(ACLR0) ? 0 : (ADDNSUB_PIPELINE_ACLR == str(ACLR1) ? 1 : (ADDNSUB_PIPELINE_ACLR == str(ACLR2) ? 2 : (ADDNSUB_PIPELINE_ACLR == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ADD_ENABLE" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(is_used(ena0) || is_used(ena1) || is_used(ena2) || is_used(ena3)) ? 1 : 0"/>
			</PARAMETER>
			<PARAMETER NAME="MULT_LATENCY" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(EXTRA_MULTIPLIER_LATENCY) == 0 ? 0 : 1"/>
			</PARAMETER>
			<PARAMETER NAME="IMPL_STYLE_DEDICATED" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(DEDICATED_MULTIPLIER_CIRCUITRY == YES) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="IMPL_STYLE_LCELL" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(DEDICATED_MULTIPLIER_CIRCUITRY == NO) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="IMPL_STYLE_DEFAULT" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="((DEDICATED_MULTIPLIER_CIRCUITRY == YES) || (DEDICATED_MULTIPLIER_CIRCUITRY == NO)) ? 0 : 1" />
			</PARAMETER>

			<PARAMETER NAME="HAS_SAT_ROUND" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 0 : ((MULTIPLIER_ROUNDING == YES || MULTIPLIER_ROUNDING == VARIABLE || MULTIPLIER_SATURATION == YES || MULTIPLIER_SATURATION == VARIABLE || ACCUMULATOR_ROUNDING == YES || ACCUMULATOR_ROUNDING == VARIABLE || ACCUMULATOR_SATURATION == YES || ACCUMULATOR_SATURATION == VARIABLE) ? 1 : 0)"/>
			</PARAMETER>
			<PARAMETER NAME="RQFORMAT" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="Q1.30" />
				<FORCE_VALUE TO="Q18.30" WHEN="(WIDTH_RESULT == 48)" />
				<FORCE_VALUE TO="Q2.30" WHEN="(WIDTH_RESULT == 32)" />
			</PARAMETER>
			<PARAMETER NAME="MULT01_ROUND_OP" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? Disabled : (MULTIPLIER_ROUNDING == YES ? Enabled : (MULTIPLIER_ROUNDING == VARIABLE ? Variable : Disabled))"/>
			</PARAMETER>
			<PARAMETER NAME="MULT01_SAT_OP" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? Disabled : (MULTIPLIER_SATURATION == YES ? Enabled : (MULTIPLIER_SATURATION == VARIABLE ? Variable : Disabled))"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_ROUND_OP" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? Disabled : (ACCUMULATOR_ROUNDING == YES ? Enabled : (ACCUMULATOR_ROUNDING == VARIABLE ? Variable : Disabled))"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_SAT_OP" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? Disabled : (ACCUMULATOR_SATURATION == YES ? Enabled : (ACCUMULATOR_SATURATION == VARIABLE ? Variable : Disabled))"/>
			</PARAMETER>
			<PARAMETER NAME="MULT0_SAT_OVERFLOW_OUT" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 0 : (PORT_MULT_IS_SATURATED == USED ? 1 : 0)"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_SAT_OVERFLOW_OUT" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 0 : (PORT_ACCUM_IS_SATURATED == USED ? 1 : 0)"/>
			</PARAMETER>

			<PARAMETER NAME="MULT01_ROUND_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(mfam_family_stratixii and (MULT_ROUND_REG != UNREGISTERED)) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="MULT01_ROUND_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : MULT_ROUND_REG == str(CLOCK0) ? 0 : (MULT_ROUND_REG == str(CLOCK1) ? 1 : (MULT_ROUND_REG == str(CLOCK2) ? 2 : (MULT_ROUND_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="MULT01_ROUND_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : MULT_ROUND_ACLR == str(ACLR0) ? 0 : (MULT_ROUND_ACLR == str(ACLR1) ? 1 : (MULT_ROUND_ACLR == str(ACLR2) ? 2 : (MULT_ROUND_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>

			<PARAMETER NAME="MULT01_SAT_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(mfam_family_stratixii and (MULT_SATURATION_REG != UNREGISTERED)) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="MULT01_SAT_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : MULT_SATURATION_REG == str(CLOCK0) ? 0 : (MULT_SATURATION_REG == str(CLOCK1) ? 1 : (MULT_SATURATION_REG == str(CLOCK2) ? 2 : (MULT_SATURATION_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="MULT01_SAT_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : MULT_SATURATION_ACLR == str(ACLR0) ? 0 : (MULT_SATURATION_ACLR == str(ACLR1) ? 1 : (MULT_SATURATION_ACLR == str(ACLR2) ? 2 : (MULT_SATURATION_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>
			
			<PARAMETER NAME="ADDER1_ROUND_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(mfam_family_stratixii and (ACCUM_ROUND_REG != UNREGISTERED)) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="ADDER1_ROUND_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_ROUND_REG == str(CLOCK0) ? 0 : (ACCUM_ROUND_REG == str(CLOCK1) ? 1 : (ACCUM_ROUND_REG == str(CLOCK2) ? 2 : (ACCUM_ROUND_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_ROUND_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_ROUND_ACLR == str(ACLR0) ? 0 : (ACCUM_ROUND_ACLR == str(ACLR1) ? 1 : (ACCUM_ROUND_ACLR == str(ACLR2) ? 2 : (ACCUM_ROUND_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>
			
			<PARAMETER NAME="ADDER1_SAT_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(mfam_family_stratixii and (ACCUM_SATURATION_REG != UNREGISTERED)) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="ADDER1_SAT_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_SATURATION_REG == str(CLOCK0) ? 0 : (ACCUM_SATURATION_REG == str(CLOCK1) ? 1 : (ACCUM_SATURATION_REG == str(CLOCK2) ? 2 : (ACCUM_SATURATION_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_SAT_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_SATURATION_ACLR == str(ACLR0) ? 0 : (ACCUM_SATURATION_ACLR == str(ACLR1) ? 1 : (ACCUM_SATURATION_ACLR == str(ACLR2) ? 2 : (ACCUM_SATURATION_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>

			<PARAMETER NAME="ADDER1_ROUND_PIPE_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(mfam_family_stratixii and (ACCUM_ROUND_PIPELINE_REG != UNREGISTERED)) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="ADDER1_ROUND_PIPE_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_ROUND_PIPELINE_REG == str(CLOCK0) ? 0 : (ACCUM_ROUND_PIPELINE_REG == str(CLOCK1) ? 1 : (ACCUM_ROUND_PIPELINE_REG == str(CLOCK2) ? 2 : (ACCUM_ROUND_PIPELINE_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_ROUND_PIPE_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_ROUND_PIPELINE_ACLR == str(ACLR0) ? 0 : (ACCUM_ROUND_PIPELINE_ACLR == str(ACLR1) ? 1 : (ACCUM_ROUND_PIPELINE_ACLR == str(ACLR2) ? 2 : (ACCUM_ROUND_PIPELINE_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>

			<PARAMETER NAME="ADDER1_SAT_PIPE_REG" CNX_TYPE="PRIVATE" TYPE="STRING" >
				<FORCE_VALUE TO="(mfam_family_stratixii and (ACCUM_SATURATION_PIPELINE_REG != UNREGISTERED)) ? 1 : 0" />
			</PARAMETER>
			<PARAMETER NAME="ADDER1_SAT_PIPE_CLK_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_SATURATION_PIPELINE_REG == str(CLOCK0) ? 0 : (ACCUM_SATURATION_PIPELINE_REG == str(CLOCK1) ? 1 : (ACCUM_SATURATION_PIPELINE_REG == str(CLOCK2) ? 2 : (ACCUM_SATURATION_PIPELINE_REG == str(CLOCK3) ? 3 : 3)))"/>
			</PARAMETER>
			<PARAMETER NAME="ADDER1_SAT_PIPE_ACLR_SRC" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii ? 3 : ACCUM_SATURATION_PIPELINE_ACLR == str(ACLR0) ? 0 : (ACCUM_SATURATION_PIPELINE_ACLR == str(ACLR1) ? 1 : (ACCUM_SATURATION_PIPELINE_ACLR == str(ACLR2) ? 2 : (ACCUM_SATURATION_PIPELINE_ACLR == str(ACLR3) ? 3 : 3)))"/>
			</PARAMETER>

			<PARAMETER NAME="ACCUM_SLOAD_UPPER_DATA" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(mfam_family_stratixii) || (mfam_family_cycloneii) ? (is_used(accum_sload_upper_data) ? 1 : 0) : 0"/>
			</PARAMETER>
			<PARAMETER NAME="WIDTH_UPPER_DATA" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(mfam_family_stratixii) || (mfam_family_cycloneii) ? (is_used(accum_sload_upper_data) ? (width_upper_data) : 1) : 1"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_UPPER_DATA_REG" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="(!mfam_family_stratixii) and (!mfam_family_cycloneii) ? 3 : is_used(accum_sload_upper_data) ? (ACCUM_SLOAD_UPPER_DATA_REG == str(CLOCK0) ? 0 : (ACCUM_SLOAD_UPPER_DATA_REG == str(CLOCK1) ? 1 : (ACCUM_SLOAD_UPPER_DATA_REG == str(CLOCK2) ? 2 : (ACCUM_SLOAD_UPPER_DATA_REG == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_UPPER_DATA_ACLR" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii and !mfam_family_cycloneii ? 3 : is_used(accum_sload_upper_data) ? (ACCUM_SLOAD_UPPER_DATA_ACLR == str(ACLR0) ? 0 : (ACCUM_SLOAD_UPPER_DATA_ACLR == str(ACLR1) ? 1 : (ACCUM_SLOAD_UPPER_DATA_ACLR == str(ACLR2) ? 2 : (ACCUM_SLOAD_UPPER_DATA_ACLR == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_UPPER_DATA_PIPELINE_REG" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii and !mfam_family_cycloneii ? 3 : is_used(accum_sload_upper_data) ? (ACCUM_SLOAD_UPPER_DATA_PIPELINE_REG == str(CLOCK0) ? 0 : (ACCUM_SLOAD_UPPER_DATA_PIPELINE_REG == str(CLOCK1) ? 1 : (ACCUM_SLOAD_UPPER_DATA_PIPELINE_REG == str(CLOCK2) ? 2 : (ACCUM_SLOAD_UPPER_DATA_PIPELINE_REG == str(CLOCK3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="ACCUM_SLOAD_UPPER_DATA_PIPELINE_ACLR" CNX_TYPE="PRIVATE" TYPE="INTEGER" >
				<FORCE_VALUE TO="!mfam_family_stratixii and !mfam_family_cycloneii ? 3 : is_used(accum_sload_upper_data) ? (ACCUM_SLOAD_UPPER_DATA_PIPELINE_ACLR == str(ACLR0) ? 0 : (ACCUM_SLOAD_UPPER_DATA_PIPELINE_ACLR == str(ACLR1) ? 1 : (ACCUM_SLOAD_UPPER_DATA_PIPELINE_ACLR == str(ACLR2) ? 2 : (ACCUM_SLOAD_UPPER_DATA_PIPELINE_ACLR == str(ACLR3) ? 3 : 3)))) : 3"/>
			</PARAMETER>
			<PARAMETER NAME="INTENDED_DEVICE_FAMILY" CNX_TYPE="PRIVATE" TYPE="STRING" VALUE="INTENDED_DEVICE_FAMILY" />
		</WIZARD_MAP>
	</WIZARD_DATA>
</ROOT>
