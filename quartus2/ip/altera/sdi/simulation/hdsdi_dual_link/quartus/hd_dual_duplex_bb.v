// Generated by SDI 8.1 [Altera, IP Toolbench 1.3.0 Build 64]
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
// ************************************************************
// Copyright (C) 1991-2008 Altera Corporation
// Any megafunction design, and related net list (encrypted or decrypted),
// support information, device programming or simulation file, and any other
// associated documentation or information provided by Altera or a partner
// under Altera's Megafunction Partnership Program may be used only to
// program PLD devices (but not masked PLD devices) from Altera.  Any other
// use of such megafunction design, net list, support information, device
// programming or simulation file, or any other related documentation or
// information is prohibited for any other purpose, including, but not
// limited to modification, reverse engineering, de-compiling, or use with
// any other silicon devices, unless such use is explicitly licensed under
// a separate agreement with Altera or a megafunction partner.  Title to
// the intellectual property, including patents, copyrights, trademarks,
// trade secrets, or maskworks, embodied in any such megafunction design,
// net list, support information, device programming or simulation file, or
// any other related documentation or information provided by Altera or a
// megafunction partner, remains with Altera, the megafunction partner, or
// their respective licensors.  No other licenses, including any licenses
// needed under any third party's intellectual property, are provided herein.

module hd_dual_duplex (
	rst,
	rx_serial_refclk,
	tx_pclk,
	tx_serial_refclk,
	sdi_rx,
	txdata,
	tx_trs,
	tx_ln,
	enable_ln,
	enable_crc,
	sdi_tx,
	rxdata,
	rx_data_valid_out,
	rx_anc_data,
	rx_anc_valid,
	rx_anc_error,
	rx_clk,
	rx_F,
	rx_V,
	rx_H,
	rx_AP,
	rx_status,
	tx_status,
	rx_ln);

	input		rst;
	input		rx_serial_refclk;
	input		tx_pclk;
	input		tx_serial_refclk;
	input	[1:0]	sdi_rx;
	input	[39:0]	txdata;
	input	[1:0]	tx_trs;
	input	[21:0]	tx_ln;
	input	[1:0]	enable_ln;
	input	[1:0]	enable_crc;
	output	[1:0]	sdi_tx;
	output	[39:0]	rxdata;
	output	[1:0]	rx_data_valid_out;
	output	[39:0]	rx_anc_data;
	output	[3:0]	rx_anc_valid;
	output	[3:0]	rx_anc_error;
	output		rx_clk;
	output	[1:0]	rx_F;
	output	[1:0]	rx_V;
	output	[1:0]	rx_H;
	output	[1:0]	rx_AP;
	output	[10:0]	rx_status;
	output	[1:0]	tx_status;
	output	[21:0]	rx_ln;
endmodule
