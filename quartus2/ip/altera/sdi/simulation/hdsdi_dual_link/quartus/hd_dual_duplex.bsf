/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 1991-2007 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 264 304)
	(text "hd_dual_duplex" (rect 5 0 80 12)(font "Arial" ))
	(text "inst" (rect 8 272 25 284)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "rst" (rect 0 0 12 12)(font "Arial" ))
		(text "rst" (rect 21 27 33 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 1))
	)
	(port
		(pt 0 48)
		(input)
		(text "rx_serial_refclk" (rect 0 0 75 12)(font "Arial" ))
		(text "rx_serial_refclk" (rect 21 43 96 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 1))
	)
	(port
		(pt 0 64)
		(input)
		(text "tx_pclk" (rect 0 0 35 12)(font "Arial" ))
		(text "tx_pclk" (rect 21 59 56 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 1))
	)
	(port
		(pt 0 80)
		(input)
		(text "tx_serial_refclk" (rect 0 0 75 12)(font "Arial" ))
		(text "tx_serial_refclk" (rect 21 75 96 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 1))
	)
	(port
		(pt 0 96)
		(input)
		(text "sdi_rx[1..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "sdi_rx[1..0]" (rect 21 91 76 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 3))
	)
	(port
		(pt 0 112)
		(input)
		(text "txdata[39..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "txdata[39..0]" (rect 21 107 83 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 3))
	)
	(port
		(pt 0 128)
		(input)
		(text "tx_trs[1..0]" (rect 0 0 54 12)(font "Arial" ))
		(text "tx_trs[1..0]" (rect 21 123 75 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 3))
	)
	(port
		(pt 0 144)
		(input)
		(text "tx_ln[21..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "tx_ln[21..0]" (rect 21 139 76 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 3))
	)
	(port
		(pt 0 160)
		(input)
		(text "enable_ln[1..0]" (rect 0 0 71 12)(font "Arial" ))
		(text "enable_ln[1..0]" (rect 21 155 92 167)(font "Arial" ))
		(line (pt 0 160)(pt 16 160)(line_width 3))
	)
	(port
		(pt 0 176)
		(input)
		(text "enable_crc[1..0]" (rect 0 0 79 12)(font "Arial" ))
		(text "enable_crc[1..0]" (rect 21 171 100 183)(font "Arial" ))
		(line (pt 0 176)(pt 16 176)(line_width 3))
	)
	(port
		(pt 248 32)
		(output)
		(text "sdi_tx[1..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "sdi_tx[1..0]" (rect 172 27 227 39)(font "Arial" ))
		(line (pt 248 32)(pt 232 32)(line_width 3))
	)
	(port
		(pt 248 48)
		(output)
		(text "rxdata[39..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "rxdata[39..0]" (rect 165 43 227 55)(font "Arial" ))
		(line (pt 248 48)(pt 232 48)(line_width 3))
	)
	(port
		(pt 248 64)
		(output)
		(text "rx_data_valid_out[1..0]" (rect 0 0 113 12)(font "Arial" ))
		(text "rx_data_valid_out[1..0]" (rect 114 59 227 71)(font "Arial" ))
		(line (pt 248 64)(pt 232 64)(line_width 3))
	)
	(port
		(pt 248 80)
		(output)
		(text "rx_anc_data[39..0]" (rect 0 0 92 12)(font "Arial" ))
		(text "rx_anc_data[39..0]" (rect 135 75 227 87)(font "Arial" ))
		(line (pt 248 80)(pt 232 80)(line_width 3))
	)
	(port
		(pt 248 96)
		(output)
		(text "rx_anc_valid[3..0]" (rect 0 0 88 12)(font "Arial" ))
		(text "rx_anc_valid[3..0]" (rect 139 91 227 103)(font "Arial" ))
		(line (pt 248 96)(pt 232 96)(line_width 3))
	)
	(port
		(pt 248 112)
		(output)
		(text "rx_anc_error[3..0]" (rect 0 0 87 12)(font "Arial" ))
		(text "rx_anc_error[3..0]" (rect 140 107 227 119)(font "Arial" ))
		(line (pt 248 112)(pt 232 112)(line_width 3))
	)
	(port
		(pt 248 128)
		(output)
		(text "rx_clk" (rect 0 0 29 12)(font "Arial" ))
		(text "rx_clk" (rect 198 123 227 135)(font "Arial" ))
		(line (pt 248 128)(pt 232 128)(line_width 1))
	)
	(port
		(pt 248 144)
		(output)
		(text "rx_F[1..0]" (rect 0 0 48 12)(font "Arial" ))
		(text "rx_F[1..0]" (rect 179 139 227 151)(font "Arial" ))
		(line (pt 248 144)(pt 232 144)(line_width 3))
	)
	(port
		(pt 248 160)
		(output)
		(text "rx_V[1..0]" (rect 0 0 48 12)(font "Arial" ))
		(text "rx_V[1..0]" (rect 179 155 227 167)(font "Arial" ))
		(line (pt 248 160)(pt 232 160)(line_width 3))
	)
	(port
		(pt 248 176)
		(output)
		(text "rx_H[1..0]" (rect 0 0 49 12)(font "Arial" ))
		(text "rx_H[1..0]" (rect 178 171 227 183)(font "Arial" ))
		(line (pt 248 176)(pt 232 176)(line_width 3))
	)
	(port
		(pt 248 192)
		(output)
		(text "rx_AP[1..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "rx_AP[1..0]" (rect 172 187 227 199)(font "Arial" ))
		(line (pt 248 192)(pt 232 192)(line_width 3))
	)
	(port
		(pt 248 208)
		(output)
		(text "rx_status[10..0]" (rect 0 0 77 12)(font "Arial" ))
		(text "rx_status[10..0]" (rect 150 203 227 215)(font "Arial" ))
		(line (pt 248 208)(pt 232 208)(line_width 3))
	)
	(port
		(pt 248 224)
		(output)
		(text "tx_status[1..0]" (rect 0 0 71 12)(font "Arial" ))
		(text "tx_status[1..0]" (rect 156 219 227 231)(font "Arial" ))
		(line (pt 248 224)(pt 232 224)(line_width 3))
	)
	(port
		(pt 248 240)
		(output)
		(text "rx_ln[21..0]" (rect 0 0 55 12)(font "Arial" ))
		(text "rx_ln[21..0]" (rect 172 235 227 247)(font "Arial" ))
		(line (pt 248 240)(pt 232 240)(line_width 3))
	)
	(parameter
		"QTB"
		"S\"on\""
		""
	)
	(parameter
		"QTB_direction"
		"S\"Duplex\""
		""
	)
	(parameter
		"QTB_test_pattern"
		"S\"false\""
		""
	)
	(parameter
		"QTB_num_channels"
		"S\"2\""
		""
	)
	(parameter
		"QTB_standard"
		"S\"DL\""
		""
	)
	(parameter
		"QTB_rate_flag"
		"S\"false\""
		""
	)
	(parameter
		"QTB_crc_flag"
		"S\"false\""
		""
	)
	(parameter
		"QTB_enable_soft_serdes"
		"S\"false\""
		""
	)
	(parameter
		"QTB_tx_clk_option"
		"S\"no_pll\""
		""
	)
	(parameter
		"QTB_rx_clk_option"
		"S\"no_pll\""
		""
	)
	(parameter
		"QTB_fvh_flag"
		"S\"true\""
		""
	)
	(parameter
		"QTB_os_mode"
		"S\"false\""
		""
	)
	(parameter
		"QTB_serdes_type"
		"S\" \""
		""
	)
	(parameter
		"QTB_tcvr_protocol_select"
		"S\"tcvr_protocol\""
		""
	)
	(parameter
		"QTB_starting_channel_number"
		"S\"0\""
		""
	)
	(parameter
		"QTB_duplex"
		"S\"true\""
		""
	)
	(parameter
		"QTB_multiXcvrText4"
		"S\"receiver PLLs. Because the same training clock is used for SD and HD SDI,\""
		""
	)
	(parameter
		"QTB_mrparam"
		"S\"false\""
		""
	)
	(parameter
		"QTB_starting_channel_text_0"
		"S\"If the design has multistandard cores, each SDI core must have a unique\""
		""
	)
	(parameter
		"QTB_devicefamily"
		"S\"Stratix GX\""
		""
	)
	(parameter
		"QTB_rx"
		"S\"false\""
		""
	)
	(parameter
		"QTB_dlparam"
		"S\"true\""
		""
	)
	(parameter
		"QTB_multiXcvrText5"
		"S\"receivers can accommodate the different standards within a single quad.\""
		""
	)
	(parameter
		"QTB_tx"
		"S\"false\""
		""
	)
	(parameter
		"QTB_multiXcvrText0"
		"S\"Device Behavior for Multiple Transceivers\""
		""
	)
	(parameter
		"QTB_hdparam"
		"S\"false\""
		""
	)
	(parameter
		"QTB_sdparam"
		"S\"false\""
		""
	)
	(parameter
		"QTB_multiXcvrText3"
		"S\"Receivers in a quad share a common training clock, but have independent\""
		""
	)
	(parameter
		"QTB_threegparam"
		"S\"false\""
		""
	)
	(parameter
		"QTB_starting_channel_text_1"
		"S\"staring channel number. See ALT2GXB or SDI user guide for more info.\""
		""
	)
	(parameter
		"QTB_multiXcvrText2"
		"S\"clock, which prevents them from operating independently.\""
		""
	)
	(parameter
		"QTB_dsparam"
		"S\"false\""
		""
	)
	(parameter
		"QTB_multiXcvrText1"
		"S\"In Stratix GX devices, the transmitters in a quad share a common reference\""
		""
	)
	(drawing
		(rectangle (rect 16 16 232 272)(line_width 1))
	)
	(annotation_block (parameter)(rect 264 -64 364 16))
)
