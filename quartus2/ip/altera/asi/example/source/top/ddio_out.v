// megafunction wizard: %ALTDDIO_OUT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: altddio_out

// ============================================================
// File Name: ddio_out.v
// Megafunction Name(s):
// 			altddio_out
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 4.1 Build 181 06/29/2004 SJ Full Version
// ************************************************************


//Copyright (C) 1991-2004 Altera Corporation
//Any  megafunction  design,  and related netlist (encrypted  or  decrypted),
//support information,  device programming or simulation file,  and any other
//associated  documentation or information  provided by  Altera  or a partner
//under  Altera's   Megafunction   Partnership   Program  may  be  used  only
//to program  PLD  devices (but not masked  PLD  devices) from  Altera.   Any
//other  use  of such  megafunction  design,  netlist,  support  information,
//device programming or simulation file,  or any other  related documentation
//or information  is prohibited  for  any  other purpose,  including, but not
//limited to  modification,  reverse engineering,  de-compiling, or use  with
//any other  silicon devices,  unless such use is  explicitly  licensed under
//a separate agreement with  Altera  or a megafunction partner.  Title to the
//intellectual property,  including patents,  copyrights,  trademarks,  trade
//secrets,  or maskworks,  embodied in any such megafunction design, netlist,
//support  information,  device programming or simulation file,  or any other
//related documentation or information provided by  Altera  or a megafunction
//partner, remains with Altera, the megafunction partner, or their respective
//licensors. No other licenses, including any licenses needed under any third
//party's intellectual property, are provided herein.


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module ddio_out (
	datain_h,
	datain_l,
	outclock,
	dataout);

	input	[13:0]  datain_h;
	input	[13:0]  datain_l;
	input	  outclock;
	output	[13:0]  dataout;

	wire [13:0] sub_wire0;
	wire [13:0] dataout = sub_wire0[13:0];

	altddio_out	altddio_out_component (
				.outclock (outclock),
				.datain_h (datain_h),
				.datain_l (datain_l),
				.dataout (sub_wire0)
				// synopsys translate_off
				,
				.oe (),
				.outclocken (),
				.aclr (),
				.aset ()
				// synopsys translate_on
				);
	defparam
		altddio_out_component.width = 14,
		altddio_out_component.power_up_high = "OFF",
		altddio_out_component.intended_device_family = "Cyclone",
		altddio_out_component.oe_reg = "UNUSED",
		altddio_out_component.extend_oe_disable = "UNUSED",
		altddio_out_component.lpm_type = "altddio_out";


endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: WIDTH NUMERIC "14"
// Retrieval info: PRIVATE: ARESET_MODE NUMERIC "2"
// Retrieval info: PRIVATE: POWER_UP_HIGH NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone"
// Retrieval info: PRIVATE: CLKEN NUMERIC "0"
// Retrieval info: PRIVATE: OE NUMERIC "0"
// Retrieval info: PRIVATE: OE_REG NUMERIC "0"
// Retrieval info: PRIVATE: EXTEND_OE_DISABLE NUMERIC "0"
// Retrieval info: CONSTANT: WIDTH NUMERIC "14"
// Retrieval info: CONSTANT: POWER_UP_HIGH STRING "OFF"
// Retrieval info: CONSTANT: INTENDED_DEVICE_FAMILY STRING "Cyclone"
// Retrieval info: CONSTANT: OE_REG STRING "UNUSED"
// Retrieval info: CONSTANT: EXTEND_OE_DISABLE STRING "UNUSED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "altddio_out"
// Retrieval info: USED_PORT: datain_h 0 0 14 0 INPUT NODEFVAL datain_h[13..0]
// Retrieval info: USED_PORT: datain_l 0 0 14 0 INPUT NODEFVAL datain_l[13..0]
// Retrieval info: USED_PORT: dataout 0 0 14 0 OUTPUT NODEFVAL dataout[13..0]
// Retrieval info: USED_PORT: outclock 0 0 0 0 INPUT NODEFVAL outclock
// Retrieval info: CONNECT: @datain_h 0 0 14 0 datain_h 0 0 14 0
// Retrieval info: CONNECT: @datain_l 0 0 14 0 datain_l 0 0 14 0
// Retrieval info: CONNECT: dataout 0 0 14 0 @dataout 0 0 14 0
// Retrieval info: CONNECT: @outclock 0 0 0 0 outclock 0 0 0 0
// Retrieval info: LIBRARY: altera_mf altera_mf.altera_mf_components.all
// Retrieval info: GEN_FILE: TYPE_NORMAL ddio_out.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL ddio_out.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ddio_out.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ddio_out.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ddio_out_inst.v FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL ddio_out_bb.v FALSE
