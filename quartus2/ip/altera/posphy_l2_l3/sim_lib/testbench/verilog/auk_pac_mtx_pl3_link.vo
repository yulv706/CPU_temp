//IP Functional Simulation Model
//VERSION_BEGIN 6.0 cbx_mgl 2006:03:29:17:46:26:SJ cbx_simgen 2006:03:22:01:13:28:SJ  VERSION_END


// Legal Notice: ï¿½ 2003 Altera Corporation. All rights reserved.
// You may only use these  simulation  model  output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event  Altera disclaims all warranties of any kind). Your use of  Altera
// Corporation's design tools, logic functions and other software and tools,
// and its AMPP partner logic functions, and any output files any of the
// foregoing (including device programming or simulation files), and any
// associated documentation or information  are expressly subject to the
// terms and conditions of the  Altera Program License Subscription Agreement
// or other applicable license agreement, including, without limitation, that
// your use is for the sole purpose of programming logic devices manufactured
// by Altera and sold by Altera or its authorized distributors.  Please refer
// to the applicable agreement for further details.


//synopsys translate_off

//synthesis_resources = altsyncram 1 lut 317 mux21 100 oper_add 16 oper_decoder 1 oper_less_than 4 oper_selector 7 
`timescale 1 ps / 1 ps
module  auk_pac_mtx_pl3_link
	( 
	a_dtpa,
	a_tdat,
	a_tenb,
	a_teop,
	a_terr,
	a_tfclk,
	a_tmod,
	a_tprty,
	a_treset_n,
	a_tsop,
	b_clk,
	b_dat,
	b_dav,
	b_ena,
	b_eop,
	b_err,
	b_mty,
	b_par,
	b_reset_n,
	b_sop) /* synthesis synthesis_clearbox=1 */;
	input   [0:0]  a_dtpa;
	output   [31:0]  a_tdat;
	output   a_tenb;
	output   a_teop;
	output   a_terr;
	input   a_tfclk;
	output   [1:0]  a_tmod;
	output   a_tprty;
	input   a_treset_n;
	output   a_tsop;
	input   b_clk;
	input   [31:0]  b_dat;
	output   b_dav;
	input   b_ena;
	input   b_eop;
	input   b_err;
	input   [1:0]  b_mty;
	input   b_par;
	input   b_reset_n;
	input   b_sop;

	wire  [37:0]   wire_n110i_q_b;
	reg	nl0i0O58;
	reg	nl0i0O59;
	reg	nl0i0O60;
	reg	nl0iil55;
	reg	nl0iil56;
	reg	nl0iil57;
	reg	nl0iiO52;
	reg	nl0iiO53;
	reg	nl0iiO54;
	reg	nl0ili49;
	reg	nl0ili50;
	reg	nl0ili51;
	reg	nl0ill46;
	reg	nl0ill47;
	reg	nl0ill48;
	reg	nl0ilO43;
	reg	nl0ilO44;
	reg	nl0ilO45;
	reg	nl0iOi40;
	reg	nl0iOi41;
	reg	nl0iOi42;
	reg	nl0iOl37;
	reg	nl0iOl38;
	reg	nl0iOl39;
	reg	nl0iOO34;
	reg	nl0iOO35;
	reg	nl0iOO36;
	reg	nl0l0i22;
	reg	nl0l0i23;
	reg	nl0l0i24;
	reg	nl0l0l19;
	reg	nl0l0l20;
	reg	nl0l0l21;
	reg	nl0l0O16;
	reg	nl0l0O17;
	reg	nl0l0O18;
	reg	nl0l1i31;
	reg	nl0l1i32;
	reg	nl0l1i33;
	reg	nl0l1l28;
	reg	nl0l1l29;
	reg	nl0l1l30;
	reg	nl0l1O25;
	reg	nl0l1O26;
	reg	nl0l1O27;
	reg	nl0lii13;
	reg	nl0lii14;
	reg	nl0lii15;
	reg	nl0lil10;
	reg	nl0lil11;
	reg	nl0lil12;
	reg	nl0lli7;
	reg	nl0lli8;
	reg	nl0lli9;
	reg	nl0lOi4;
	reg	nl0lOi5;
	reg	nl0lOi6;
	reg	nl0O1i1;
	reg	nl0O1i2;
	reg	nl0O1i3;
	reg	n000i;
	reg	n000l;
	reg	n000O;
	reg	n001i;
	reg	n001l;
	reg	n001O;
	reg	n00il;
	reg	n1O0i;
	reg	n1O0l;
	reg	n1O0O;
	reg	n1Oii;
	reg	n1Oil;
	reg	n1OiO;
	reg	n1Oli;
	reg	n00iO;
	reg	n00li;
	reg	n00ll;
	reg	n00lO;
	reg	n00Oi;
	reg	n00Ol;
	reg	n0i1i;
	reg	n010l;
	reg	n010O;
	reg	n01ii;
	reg	n01il;
	reg	n01iO;
	reg	n01li;
	reg	n01lO;
	reg	n0i0i;
	reg	n0i0l;
	reg	n0i0O;
	reg	n0i1l;
	reg	n0i1O;
	reg	n0iii;
	reg	n0iil;
	reg	n0iiO;
	reg	n0ili;
	reg	n0ill;
	reg	n0ilO;
	reg	n0iOi;
	reg	n0iOO;
	reg	n0l0O;
	reg	n0l1l;
	reg	n010i;
	reg	n011i;
	reg	n011l;
	reg	n011O;
	reg	n01Oi;
	reg	n01Ol;
	reg	n01OO;
	reg	n0l0i;
	reg	n1O1i;
	reg	n1O1l;
	reg	n1O1O;
	reg	n1Oll;
	reg	n1OlO;
	reg	n1OOi;
	reg	n1OOl;
	reg	n1OOO;
	reg	n0lil;
	reg	nli0iO;
	reg	nlllOO;
	reg	n0llO;
	reg	n0lOi;
	reg	n0lOl;
	reg	n0lOO;
	reg	n0O0i;
	reg	n0O1i;
	reg	n0O1l;
	reg	n111i;
	reg	n111O;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	nllOli;
	reg	nllOll;
	reg	nllOlO;
	reg	nllOOi;
	reg	nllOOl;
	reg	nllOOO;
	reg	nlO11i;
	reg	nlO11l;
	reg	nlOi0i;
	reg	nlOi0l;
	reg	nlOi0O;
	reg	nlOiii;
	reg	nlOiil;
	reg	nlOiiO;
	reg	nlOili;
	reg	nlOill;
	reg	nlOilO;
	reg	nlOiOi;
	reg	nlOl1O;
	reg	nlOlii;
	reg	nlOliO;
	reg	nlOlli;
	reg	nlOlll;
	reg	nlOO0i;
	reg	nlOO0l;
	reg	nlOO0O;
	reg	nlOO1l;
	reg	nlOO1O;
	reg	nlOOOl;
	reg	nlOOOO;
	reg	n1lOO;
	reg	ni0ii;
	reg	ni0il;
	reg	ni0ll;
	reg	nliO0i;
	reg	nii0O;
	reg	n0liO;
	reg	n0lli;
	reg	n0lll;
	reg	n0O0l;
	reg	n0O0O;
	reg	n0Oii;
	reg	n0Oil;
	reg	n0OiO;
	reg	n0Oli;
	reg	n0Oll;
	reg	n0OlO;
	reg	n0OOi;
	reg	ni00l;
	reg	ni0iO;
	reg	ni0lO;
	reg	ni0Oi;
	reg	ni0Ol;
	reg	ni0OO;
	reg	ni10O;
	reg	ni1ii;
	reg	ni1il;
	reg	ni1iO;
	reg	ni1li;
	reg	ni1ll;
	reg	ni1lO;
	reg	ni1Oi;
	reg	ni1Ol;
	reg	ni1OO;
	reg	nii0i;
	reg	nii1i;
	reg	nii1l;
	reg	nl0Oil;
	reg	nl0OiO;
	reg	nl0Oli;
	reg	nl0OlO;
	reg	nli00O;
	reg	nli01O;
	reg	nli0li;
	reg	nli0ll;
	reg	nli0lO;
	reg	nli0Oi;
	reg	nli0Ol;
	reg	nli0OO;
	reg	nlii0i;
	reg	nlii0l;
	reg	nlii0O;
	reg	nlii1i;
	reg	nlii1l;
	reg	nlii1O;
	reg	nliiii;
	reg	nliiil;
	reg	nliiiO;
	reg	nliili;
	reg	nliill;
	reg	nliilO;
	reg	nliiOi;
	reg	nliiOl;
	reg	nliiOO;
	reg	nlil0i;
	reg	nlil0l;
	reg	nlil0O;
	reg	nlil1i;
	reg	nlil1l;
	reg	nlil1O;
	reg	nlilii;
	reg	nlilil;
	reg	nliliO;
	reg	nlilli;
	reg	nlilll;
	reg	nlillO;
	reg	nlilOi;
	reg	nlilOl;
	reg	nlilOO;
	reg	nliO0l;
	reg	nliO0O;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nll1ll;
	reg	nlllOl;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nlO01O;
	reg	nlO1iO;
	reg	nlO1ll;
	reg	niiii;
	reg	niiil;
	reg	niiiO;
	reg	niili;
	reg	niill;
	reg	niilO;
	reg	niiOi;
	reg	nilli;
	reg	niO0O;
	reg	niOil;
	reg	nl1ii;
	reg	nl1il;
	reg	nl1li;
	reg	nl1lO;
	reg	nli00l;
	reg	nll0iO;
	reg	nlli1O;
	reg	nlliOi;
	reg	nlliOO;
	reg	nlll0i;
	reg	nlll0l;
	reg	nlll0O;
	reg	nlll1i;
	reg	nlll1l;
	reg	nlll1O;
	reg	nlllii;
	reg	nlllil;
	reg	nllliO;
	reg	nlllli;
	reg	nlllll;
	reg	nlllOi;
	reg	n0OOl;
	reg	n0OOO;
	reg	ni00i;
	reg	ni01i;
	reg	ni01l;
	reg	ni01O;
	reg	ni10i;
	reg	ni10l;
	reg	ni11i;
	reg	ni11l;
	reg	ni11O;
	reg	nlO0i;
	reg	nlO0O;
	reg	nlO1O;
	reg	nl00i;
	reg	nl01i;
	reg	nl01l;
	reg	nl01O;
	reg	nl1Oi;
	reg	nl1Ol;
	reg	nl1OO;
	reg	nliiO;
	reg	nlill;
	reg	nllli;
	reg	nllOl;
	reg	nllOO;
	reg	nlO1l;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_niiOl_dataout;
	wire	wire_niiOO_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilll_dataout;
	wire	wire_nillO_dataout;
	wire	wire_nilOi_dataout;
	wire	wire_nilOl_dataout;
	wire	wire_nilOO_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_niOll_dataout;
	wire	wire_niOlO_dataout;
	wire	wire_niOOi_dataout;
	wire	wire_niOOl_dataout;
	wire	wire_niOOO_dataout;
	wire	wire_nl0ii_dataout;
	wire	wire_nl0il_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl0OOl_dataout;
	wire	wire_nl0OOO_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl11i_dataout;
	wire	wire_nl11l_dataout;
	wire	wire_nl11O_dataout;
	wire	wire_nli01i_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0il_dataout;
	wire	wire_nli10i_dataout;
	wire	wire_nli10l_dataout;
	wire	wire_nli10O_dataout;
	wire	wire_nli11i_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nli1iO_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1li_dataout;
	wire	wire_nli1ll_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nli1Oi_dataout;
	wire	wire_nli1Ol_dataout;
	wire	wire_nliOii_dataout;
	wire	wire_nliOil_dataout;
	wire	wire_nliOiO_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOli_dataout;
	wire	wire_nliOll_dataout;
	wire	wire_nliOlO_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nliOOi_dataout;
	wire	wire_nliOOl_dataout;
	wire	wire_nliOOO_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll10i_dataout;
	wire	wire_nll10l_dataout;
	wire	wire_nll10O_dataout;
	wire	wire_nll11i_dataout;
	wire	wire_nll11l_dataout;
	wire	wire_nll11O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1ii_dataout;
	wire	wire_nll1il_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nlli0i_dataout;
	wire	wire_nlli0l_dataout;
	wire	wire_nlli0O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nlliii_dataout;
	wire	wire_nlliil_dataout;
	wire	wire_nlliiO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOi1O_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOlil_dataout;
	wire	wire_nlOOii_dataout;
	wire	wire_nlOOli_dataout;
	wire	wire_nlOOlO_dataout;
	wire  [15:0]   wire_nil0i_o;
	wire  [6:0]   wire_nilil_o;
	wire  [6:0]   wire_niO0i_o;
	wire  [7:0]   wire_niOii_o;
	wire  [7:0]   wire_niOiO_o;
	wire  [6:0]   wire_nl00l_o;
	wire  [16:0]   wire_nl0li_o;
	wire  [16:0]   wire_nl0lO_o;
	wire  [0:0]   wire_nli01l_o;
	wire  [7:0]   wire_nli0l_o;
	wire  [7:0]   wire_nli0O_o;
	wire  [0:0]   wire_nli1OO_o;
	wire  [6:0]   wire_nlilO_o;
	wire  [16:0]   wire_nll1iO_o;
	wire  [16:0]   wire_nll1li_o;
	wire  [16:0]   wire_nlliOl_o;
	wire  [1:0]   wire_nli11l_o;
	wire  wire_nil0O_o;
	wire  wire_nil1O_o;
	wire  wire_nl0iO_o;
	wire  wire_nl0ll_o;
	wire  wire_nlli1i_o;
	wire  wire_nlli1l_o;
	wire  wire_nlO01i_o;
	wire  wire_nlO1lO_o;
	wire  wire_nlO1Oi_o;
	wire  wire_nlO1Ol_o;
	wire  wire_nlOl1l_o;
	wire  nl000i;
	wire  nl000l;
	wire  nl000O;
	wire  nl001i;
	wire  nl001l;
	wire  nl001O;
	wire  nl00ii;
	wire  nl00il;
	wire  nl00iO;
	wire  nl00li;
	wire  nl00ll;
	wire  nl00lO;
	wire  nl00Oi;
	wire  nl00Ol;
	wire  nl00OO;
	wire  nl01iO;
	wire  nl01li;
	wire  nl01ll;
	wire  nl01lO;
	wire  nl01Oi;
	wire  nl01Ol;
	wire  nl01OO;
	wire  nl0i0i;
	wire  nl0i0l;
	wire  nl0i1i;
	wire  nl0i1l;
	wire  nl0i1O;
	wire  nl0liO;
	wire  nl0llO;
	wire  nl0lOO;
	wire  nl0O0i;
	wire  nl0O1O;
	wire  nl0Oii;

	altsyncram   n110i
	( 
	.address_a({n0i1l, n0i1O, n0i0i, n0i0l, n0i0O, n0iii, n0iil}),
	.address_b({nl1li, nl1il, nl1ii, niOil, niO0O, nilli, niiOi}),
	.clock0(b_clk),
	.clock1(a_tfclk),
	.clocken0(1'b1),
	.clocken1(nl0i1l),
	.data_a({b_mty[1:0], b_par, b_err, b_eop, b_sop, b_dat[31:0]}),
	.q_a(),
	.q_b(wire_n110i_q_b),
	.wren_a(nl0lOO),
	.aclr0(),
	.aclr1(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.data_b(),
	.rden_b(),
	.wren_b()
	);
	defparam
		n110i.address_aclr_a = "NONE",
		n110i.address_aclr_b = "NONE",
		n110i.address_reg_b = "CLOCK1",
		n110i.byte_size = 8,
		n110i.byteena_aclr_a = "NONE",
		n110i.byteena_aclr_b = "NONE",
		n110i.byteena_reg_b = "CLOCK1",
		n110i.clock_enable_input_a = "NORMAL",
		n110i.clock_enable_input_b = "NORMAL",
		n110i.clock_enable_output_a = "NORMAL",
		n110i.clock_enable_output_b = "NORMAL",
		n110i.indata_aclr_a = "NONE",
		n110i.indata_aclr_b = "NONE",
		n110i.indata_reg_b = "CLOCK1",
		n110i.init_file_layout = "PORT_A",
		n110i.intended_device_family = "Stratix",
		n110i.numwords_a = 128,
		n110i.numwords_b = 128,
		n110i.operation_mode = "DUAL_PORT",
		n110i.outdata_aclr_a = "NONE",
		n110i.outdata_aclr_b = "NONE",
		n110i.outdata_reg_a = "UNREGISTERED",
		n110i.outdata_reg_b = "UNREGISTERED",
		n110i.ram_block_type = "AUTO",
		n110i.rdcontrol_aclr_b = "NONE",
		n110i.rdcontrol_reg_b = "CLOCK1",
		n110i.read_during_write_mode_mixed_ports = "DONT_CARE",
		n110i.width_a = 38,
		n110i.width_b = 38,
		n110i.width_byteena_a = 1,
		n110i.width_byteena_b = 1,
		n110i.widthad_a = 7,
		n110i.widthad_b = 7,
		n110i.wrcontrol_aclr_a = "NONE",
		n110i.wrcontrol_aclr_b = "NONE",
		n110i.wrcontrol_wraddress_reg_b = "CLOCK1";
	initial
		nl0i0O58 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0i0O58 <= nl0i0O60;
	initial
		nl0i0O59 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0i0O59 <= (nl0i0O60 ^ nl0i0O58);
	initial
		nl0i0O60 = 0;
	always @ ( posedge a_tfclk)
		  nl0i0O60 <= nl0i0O58;
	initial
		nl0iil55 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iil55 <= nl0iil57;
	initial
		nl0iil56 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iil56 <= (nl0iil57 ^ nl0iil55);
	initial
		nl0iil57 = 0;
	always @ ( posedge a_tfclk)
		  nl0iil57 <= nl0iil55;
	initial
		nl0iiO52 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iiO52 <= nl0iiO54;
	initial
		nl0iiO53 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iiO53 <= (nl0iiO54 ^ nl0iiO52);
	initial
		nl0iiO54 = 0;
	always @ ( posedge a_tfclk)
		  nl0iiO54 <= nl0iiO52;
	initial
		nl0ili49 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0ili49 <= nl0ili51;
	initial
		nl0ili50 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0ili50 <= (nl0ili51 ^ nl0ili49);
	initial
		nl0ili51 = 0;
	always @ ( posedge a_tfclk)
		  nl0ili51 <= nl0ili49;
	initial
		nl0ill46 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0ill46 <= nl0ill48;
	initial
		nl0ill47 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0ill47 <= (nl0ill48 ^ nl0ill46);
	initial
		nl0ill48 = 0;
	always @ ( posedge a_tfclk)
		  nl0ill48 <= nl0ill46;
	initial
		nl0ilO43 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0ilO43 <= nl0ilO45;
	initial
		nl0ilO44 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0ilO44 <= (nl0ilO45 ^ nl0ilO43);
	initial
		nl0ilO45 = 0;
	always @ ( posedge a_tfclk)
		  nl0ilO45 <= nl0ilO43;
	initial
		nl0iOi40 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iOi40 <= nl0iOi42;
	initial
		nl0iOi41 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iOi41 <= (nl0iOi42 ^ nl0iOi40);
	initial
		nl0iOi42 = 0;
	always @ ( posedge a_tfclk)
		  nl0iOi42 <= nl0iOi40;
	initial
		nl0iOl37 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iOl37 <= nl0iOl39;
	initial
		nl0iOl38 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iOl38 <= (nl0iOl39 ^ nl0iOl37);
	initial
		nl0iOl39 = 0;
	always @ ( posedge a_tfclk)
		  nl0iOl39 <= nl0iOl37;
	initial
		nl0iOO34 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iOO34 <= nl0iOO36;
	initial
		nl0iOO35 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0iOO35 <= (nl0iOO36 ^ nl0iOO34);
	initial
		nl0iOO36 = 0;
	always @ ( posedge a_tfclk)
		  nl0iOO36 <= nl0iOO34;
	initial
		nl0l0i22 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l0i22 <= nl0l0i24;
	initial
		nl0l0i23 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l0i23 <= (nl0l0i24 ^ nl0l0i22);
	initial
		nl0l0i24 = 0;
	always @ ( posedge a_tfclk)
		  nl0l0i24 <= nl0l0i22;
	initial
		nl0l0l19 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l0l19 <= nl0l0l21;
	initial
		nl0l0l20 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l0l20 <= (nl0l0l21 ^ nl0l0l19);
	initial
		nl0l0l21 = 0;
	always @ ( posedge a_tfclk)
		  nl0l0l21 <= nl0l0l19;
	initial
		nl0l0O16 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l0O16 <= nl0l0O18;
	initial
		nl0l0O17 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l0O17 <= (nl0l0O18 ^ nl0l0O16);
	initial
		nl0l0O18 = 0;
	always @ ( posedge a_tfclk)
		  nl0l0O18 <= nl0l0O16;
	initial
		nl0l1i31 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l1i31 <= nl0l1i33;
	initial
		nl0l1i32 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l1i32 <= (nl0l1i33 ^ nl0l1i31);
	initial
		nl0l1i33 = 0;
	always @ ( posedge a_tfclk)
		  nl0l1i33 <= nl0l1i31;
	initial
		nl0l1l28 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l1l28 <= nl0l1l30;
	initial
		nl0l1l29 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l1l29 <= (nl0l1l30 ^ nl0l1l28);
	initial
		nl0l1l30 = 0;
	always @ ( posedge a_tfclk)
		  nl0l1l30 <= nl0l1l28;
	initial
		nl0l1O25 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l1O25 <= nl0l1O27;
	initial
		nl0l1O26 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0l1O26 <= (nl0l1O27 ^ nl0l1O25);
	initial
		nl0l1O27 = 0;
	always @ ( posedge a_tfclk)
		  nl0l1O27 <= nl0l1O25;
	initial
		nl0lii13 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lii13 <= nl0lii15;
	initial
		nl0lii14 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lii14 <= (nl0lii15 ^ nl0lii13);
	initial
		nl0lii15 = 0;
	always @ ( posedge a_tfclk)
		  nl0lii15 <= nl0lii13;
	initial
		nl0lil10 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lil10 <= nl0lil12;
	initial
		nl0lil11 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lil11 <= (nl0lil12 ^ nl0lil10);
	initial
		nl0lil12 = 0;
	always @ ( posedge a_tfclk)
		  nl0lil12 <= nl0lil10;
	initial
		nl0lli7 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lli7 <= nl0lli9;
	initial
		nl0lli8 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lli8 <= (nl0lli9 ^ nl0lli7);
	initial
		nl0lli9 = 0;
	always @ ( posedge a_tfclk)
		  nl0lli9 <= nl0lli7;
	initial
		nl0lOi4 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lOi4 <= nl0lOi6;
	initial
		nl0lOi5 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0lOi5 <= (nl0lOi6 ^ nl0lOi4);
	initial
		nl0lOi6 = 0;
	always @ ( posedge a_tfclk)
		  nl0lOi6 <= nl0lOi4;
	initial
		nl0O1i1 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0O1i1 <= nl0O1i3;
	initial
		nl0O1i2 = {1{1'b1}};
	always @ ( posedge a_tfclk)
		  nl0O1i2 <= (nl0O1i3 ^ nl0O1i1);
	initial
		nl0O1i3 = 0;
	always @ ( posedge a_tfclk)
		  nl0O1i3 <= nl0O1i1;
	initial
	begin
		n000i = 1;
		n000l = 1;
		n000O = 1;
		n001i = 1;
		n001l = 1;
		n001O = 1;
		n00il = 1;
		n1O0i = 1;
		n1O0l = 1;
		n1O0O = 1;
		n1Oii = 1;
		n1Oil = 1;
		n1OiO = 1;
		n1Oli = 1;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n000i <= 0;
			n000l <= 0;
			n000O <= 0;
			n001i <= 0;
			n001l <= 0;
			n001O <= 0;
			n00il <= 0;
			n1O0i <= 0;
			n1O0l <= 0;
			n1O0O <= 0;
			n1Oii <= 0;
			n1Oil <= 0;
			n1OiO <= 0;
			n1Oli <= 0;
		end
		else if  (nl0llO == 1'b1) 
		begin
			n000i <= n00lO;
			n000l <= n00Oi;
			n000O <= n00Ol;
			n001i <= n00iO;
			n001l <= n00li;
			n001O <= n00ll;
			n00il <= n0i1i;
			n1O0i <= n0i1l;
			n1O0l <= n0i1O;
			n1O0O <= n0i0i;
			n1Oii <= n0i0l;
			n1Oil <= n0i0O;
			n1OiO <= n0iii;
			n1Oli <= n0iil;
		end
	end
	initial
	begin
		n00iO = 0;
		n00li = 0;
		n00ll = 0;
		n00lO = 0;
		n00Oi = 0;
		n00Ol = 0;
		n0i1i = 0;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n00iO <= 0;
			n00li <= 0;
			n00ll <= 0;
			n00lO <= 0;
			n00Oi <= 0;
			n00Ol <= 0;
			n0i1i <= 0;
		end
		else if  (nl0i0l == 1'b1) 
		begin
			n00iO <= wire_nl00l_o[6];
			n00li <= wire_nl00l_o[5];
			n00ll <= wire_nl00l_o[4];
			n00lO <= wire_nl00l_o[3];
			n00Oi <= wire_nl00l_o[2];
			n00Ol <= wire_nl00l_o[1];
			n0i1i <= wire_nl00l_o[0];
		end
	end
	initial
	begin
		n010l = 0;
		n010O = 0;
		n01ii = 0;
		n01il = 0;
		n01iO = 0;
		n01li = 0;
		n01lO = 0;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n010l <= 0;
			n010O <= 0;
			n01ii <= 0;
			n01il <= 0;
			n01iO <= 0;
			n01li <= 0;
			n01lO <= 0;
		end
		else if  (nl0liO == 1'b0) 
		begin
			n010l <= n1OOi;
			n010O <= n1OOl;
			n01ii <= n1OOO;
			n01il <= n011i;
			n01iO <= n011l;
			n01li <= n011O;
			n01lO <= n010i;
		end
	end
	initial
	begin
		n0i0i = 0;
		n0i0l = 0;
		n0i0O = 0;
		n0i1l = 0;
		n0i1O = 0;
		n0iii = 0;
		n0iil = 0;
		n0iiO = 0;
		n0ili = 0;
		n0ill = 0;
		n0ilO = 0;
		n0iOi = 0;
		n0iOO = 0;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n0i0i <= 0;
			n0i0l <= 0;
			n0i0O <= 0;
			n0i1l <= 0;
			n0i1O <= 0;
			n0iii <= 0;
			n0iil <= 0;
			n0iiO <= 0;
			n0ili <= 0;
			n0ill <= 0;
			n0ilO <= 0;
			n0iOi <= 0;
			n0iOO <= 0;
		end
		else if  (nl0lOO == 1'b1) 
		begin
			n0i0i <= n0ill;
			n0i0l <= n0ilO;
			n0i0O <= n0iOi;
			n0i1l <= n0iiO;
			n0i1O <= n0ili;
			n0iii <= n0iOO;
			n0iil <= n0l1l;
			n0iiO <= wire_nlilO_o[6];
			n0ili <= wire_nlilO_o[5];
			n0ill <= wire_nlilO_o[4];
			n0ilO <= wire_nlilO_o[3];
			n0iOi <= wire_nlilO_o[2];
			n0iOO <= wire_nlilO_o[1];
		end
	end
	initial
	begin
		n0l0O = 0;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n0l0O <= 1;
		end
		else 
		begin
			n0l0O <= wire_nl0ii_dataout;
		end
	end
	initial
	begin
		n0l1l = 0;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n0l1l <= 1;
		end
		else if  (nl0lOO == 1'b1) 
		begin
			n0l1l <= wire_nlilO_o[0];
		end
	end
	initial
	begin
		n010i = 1;
		n011i = 1;
		n011l = 1;
		n011O = 1;
		n01Oi = 1;
		n01Ol = 1;
		n01OO = 1;
		n0l0i = 1;
		n1O1i = 1;
		n1O1l = 1;
		n1O1O = 1;
		n1Oll = 1;
		n1OlO = 1;
		n1OOi = 1;
		n1OOl = 1;
		n1OOO = 1;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n010i <= 0;
			n011i <= 0;
			n011l <= 0;
			n011O <= 0;
			n01Oi <= 0;
			n01Ol <= 0;
			n01OO <= 0;
			n0l0i <= 0;
			n1O1i <= 0;
			n1O1l <= 0;
			n1O1O <= 0;
			n1Oll <= 0;
			n1OlO <= 0;
			n1OOi <= 0;
			n1OOl <= 0;
			n1OOO <= 0;
		end
		else 
		begin
			n010i <= n0O0i;
			n011i <= n0lOO;
			n011l <= n0O1i;
			n011O <= n0O1l;
			n01Oi <= n0lll;
			n01Ol <= n01Oi;
			n01OO <= n01Ol;
			n0l0i <= ((nl0lOO & nl00lO) | ((~ nl0lOO) & nl00ll));
			n1O1i <= wire_nliOO_dataout;
			n1O1l <= wire_nliOl_dataout;
			n1O1O <= wire_n1lil_dataout;
			n1Oll <= ni1il;
			n1OlO <= n1Oll;
			n1OOi <= n0llO;
			n1OOl <= n0lOi;
			n1OOO <= n0lOl;
		end
	end
	initial
	begin
		n0lil = 1;
		nli0iO = 1;
		nlllOO = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			n0lil <= 1;
			nli0iO <= 1;
			nlllOO <= 1;
		end
		else 
		begin
			n0lil <= wire_niOOi_dataout;
			nli0iO <= wire_nlli1l_o;
			nlllOO <= wire_nlO01i_o;
		end
	end
	initial
	begin
		n0llO = 1;
		n0lOi = 1;
		n0lOl = 1;
		n0lOO = 1;
		n0O0i = 1;
		n0O1i = 1;
		n0O1l = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			n0llO <= 0;
			n0lOi <= 0;
			n0lOl <= 0;
			n0lOO <= 0;
			n0O0i <= 0;
			n0O1i <= 0;
			n0O1l <= 0;
		end
		else if  (nl0i1O == 1'b1) 
		begin
			n0llO <= nl1li;
			n0lOi <= nl1il;
			n0lOl <= nl1ii;
			n0lOO <= niOil;
			n0O0i <= niiOi;
			n0O1i <= niO0O;
			n0O1l <= nilli;
		end
	end
	initial
	begin
		n111i = 1;
		n111O = 1;
		nllO0i = 1;
		nllO0l = 1;
		nllO0O = 1;
		nllOii = 1;
		nllOil = 1;
		nllOiO = 1;
		nllOli = 1;
		nllOll = 1;
		nllOlO = 1;
		nllOOi = 1;
		nllOOl = 1;
		nllOOO = 1;
		nlO11i = 1;
		nlO11l = 1;
		nlOi0i = 1;
		nlOi0l = 1;
		nlOi0O = 1;
		nlOiii = 1;
		nlOiil = 1;
		nlOiiO = 1;
		nlOili = 1;
		nlOill = 1;
		nlOilO = 1;
		nlOiOi = 1;
		nlOl1O = 1;
		nlOlii = 1;
		nlOliO = 1;
		nlOlli = 1;
		nlOlll = 1;
		nlOO0i = 1;
		nlOO0l = 1;
		nlOO0O = 1;
		nlOO1l = 1;
		nlOO1O = 1;
		nlOOOl = 1;
		nlOOOO = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			n111i <= 0;
			n111O <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
			nllOli <= 0;
			nllOll <= 0;
			nllOlO <= 0;
			nllOOi <= 0;
			nllOOl <= 0;
			nllOOO <= 0;
			nlO11i <= 0;
			nlO11l <= 0;
			nlOi0i <= 0;
			nlOi0l <= 0;
			nlOi0O <= 0;
			nlOiii <= 0;
			nlOiil <= 0;
			nlOiiO <= 0;
			nlOili <= 0;
			nlOill <= 0;
			nlOilO <= 0;
			nlOiOi <= 0;
			nlOl1O <= 0;
			nlOlii <= 0;
			nlOliO <= 0;
			nlOlli <= 0;
			nlOlll <= 0;
			nlOO0i <= 0;
			nlOO0l <= 0;
			nlOO0O <= 0;
			nlOO1l <= 0;
			nlOO1O <= 0;
			nlOOOl <= 0;
			nlOOOO <= 0;
		end
		else if  (nl00li == 1'b1) 
		begin
			n111i <= wire_n110i_q_b[16];
			n111O <= wire_n110i_q_b[17];
			nllO0i <= wire_n110i_q_b[31];
			nllO0l <= wire_n110i_q_b[30];
			nllO0O <= wire_n110i_q_b[29];
			nllOii <= wire_n110i_q_b[28];
			nllOil <= wire_n110i_q_b[27];
			nllOiO <= wire_n110i_q_b[26];
			nllOli <= wire_n110i_q_b[25];
			nllOll <= wire_n110i_q_b[24];
			nllOlO <= wire_n110i_q_b[23];
			nllOOi <= wire_n110i_q_b[22];
			nllOOl <= wire_n110i_q_b[21];
			nllOOO <= wire_n110i_q_b[20];
			nlO11i <= wire_n110i_q_b[19];
			nlO11l <= wire_n110i_q_b[18];
			nlOi0i <= wire_n110i_q_b[36];
			nlOi0l <= wire_n110i_q_b[37];
			nlOi0O <= wire_n110i_q_b[35];
			nlOiii <= wire_nlOOii_dataout;
			nlOiil <= wire_nlOOli_dataout;
			nlOiiO <= wire_nlOOlO_dataout;
			nlOili <= wire_n110i_q_b[0];
			nlOill <= wire_n110i_q_b[1];
			nlOilO <= wire_n110i_q_b[2];
			nlOiOi <= wire_n110i_q_b[3];
			nlOl1O <= wire_n110i_q_b[4];
			nlOlii <= wire_n110i_q_b[5];
			nlOliO <= wire_n110i_q_b[6];
			nlOlli <= wire_n110i_q_b[7];
			nlOlll <= wire_n110i_q_b[8];
			nlOO0i <= wire_n110i_q_b[11];
			nlOO0l <= wire_n110i_q_b[12];
			nlOO0O <= wire_n110i_q_b[13];
			nlOO1l <= wire_n110i_q_b[9];
			nlOO1O <= wire_n110i_q_b[10];
			nlOOOl <= wire_n110i_q_b[14];
			nlOOOO <= wire_n110i_q_b[15];
		end
	end
	initial
	begin
		n1lOO = 1;
	end
	always @ ( posedge b_clk or negedge b_reset_n)
	begin
		if (b_reset_n == 1'b0) 
		begin
			n1lOO <= 1;
		end
		else 
		begin
			n1lOO <= wire_nll1i_dataout;
		end
	end
	initial
	begin
		ni0ii = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			ni0ii <= 0;
		end
		else if  (nl0i1l == 1'b1) 
		begin
			ni0ii <= (~ ni0ll);
		end
	end
	initial
	begin
		ni0il = 0;
		ni0ll = 0;
		nliO0i = 0;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			ni0il <= 1;
			ni0ll <= 1;
			nliO0i <= 1;
		end
		else 
		begin
			ni0il <= ni0ll;
			ni0ll <= wire_niO1O_dataout;
			nliO0i <= (~ nl01Oi);
		end
	end
	initial
	begin
		nii0O = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			nii0O <= 1;
		end
		else if  (nl0i0i == 1'b1) 
		begin
			nii0O <= wire_niO0i_o[0];
		end
	end
	initial
	begin
		n0liO = 0;
		n0lli = 0;
		n0lll = 0;
		n0O0l = 0;
		n0O0O = 0;
		n0Oii = 0;
		n0Oil = 0;
		n0OiO = 0;
		n0Oli = 0;
		n0Oll = 0;
		n0OlO = 0;
		n0OOi = 0;
		ni00l = 0;
		ni0iO = 0;
		ni0lO = 0;
		ni0Oi = 0;
		ni0Ol = 0;
		ni0OO = 0;
		ni10O = 0;
		ni1ii = 0;
		ni1il = 0;
		ni1iO = 0;
		ni1li = 0;
		ni1ll = 0;
		ni1lO = 0;
		ni1Oi = 0;
		ni1Ol = 0;
		ni1OO = 0;
		nii0i = 0;
		nii1i = 0;
		nii1l = 0;
		nl0Oil = 0;
		nl0OiO = 0;
		nl0Oli = 0;
		nl0OlO = 0;
		nli00O = 0;
		nli01O = 0;
		nli0li = 0;
		nli0ll = 0;
		nli0lO = 0;
		nli0Oi = 0;
		nli0Ol = 0;
		nli0OO = 0;
		nlii0i = 0;
		nlii0l = 0;
		nlii0O = 0;
		nlii1i = 0;
		nlii1l = 0;
		nlii1O = 0;
		nliiii = 0;
		nliiil = 0;
		nliiiO = 0;
		nliili = 0;
		nliill = 0;
		nliilO = 0;
		nliiOi = 0;
		nliiOl = 0;
		nliiOO = 0;
		nlil0i = 0;
		nlil0l = 0;
		nlil0O = 0;
		nlil1i = 0;
		nlil1l = 0;
		nlil1O = 0;
		nlilii = 0;
		nlilil = 0;
		nliliO = 0;
		nlilli = 0;
		nlilll = 0;
		nlillO = 0;
		nlilOi = 0;
		nlilOl = 0;
		nlilOO = 0;
		nliO0l = 0;
		nliO0O = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nll1ll = 0;
		nlllOl = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nlO01O = 0;
		nlO1iO = 0;
		nlO1ll = 0;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			n0liO <= 0;
			n0lli <= 0;
			n0lll <= 0;
			n0O0l <= 0;
			n0O0O <= 0;
			n0Oii <= 0;
			n0Oil <= 0;
			n0OiO <= 0;
			n0Oli <= 0;
			n0Oll <= 0;
			n0OlO <= 0;
			n0OOi <= 0;
			ni00l <= 0;
			ni0iO <= 0;
			ni0lO <= 0;
			ni0Oi <= 0;
			ni0Ol <= 0;
			ni0OO <= 0;
			ni10O <= 0;
			ni1ii <= 0;
			ni1il <= 0;
			ni1iO <= 0;
			ni1li <= 0;
			ni1ll <= 0;
			ni1lO <= 0;
			ni1Oi <= 0;
			ni1Ol <= 0;
			ni1OO <= 0;
			nii0i <= 0;
			nii1i <= 0;
			nii1l <= 0;
			nl0Oil <= 0;
			nl0OiO <= 0;
			nl0Oli <= 0;
			nl0OlO <= 0;
			nli00O <= 0;
			nli01O <= 0;
			nli0li <= 0;
			nli0ll <= 0;
			nli0lO <= 0;
			nli0Oi <= 0;
			nli0Ol <= 0;
			nli0OO <= 0;
			nlii0i <= 0;
			nlii0l <= 0;
			nlii0O <= 0;
			nlii1i <= 0;
			nlii1l <= 0;
			nlii1O <= 0;
			nliiii <= 0;
			nliiil <= 0;
			nliiiO <= 0;
			nliili <= 0;
			nliill <= 0;
			nliilO <= 0;
			nliiOi <= 0;
			nliiOl <= 0;
			nliiOO <= 0;
			nlil0i <= 0;
			nlil0l <= 0;
			nlil0O <= 0;
			nlil1i <= 0;
			nlil1l <= 0;
			nlil1O <= 0;
			nlilii <= 0;
			nlilil <= 0;
			nliliO <= 0;
			nlilli <= 0;
			nlilll <= 0;
			nlillO <= 0;
			nlilOi <= 0;
			nlilOl <= 0;
			nlilOO <= 0;
			nliO0l <= 0;
			nliO0O <= 0;
			nliO1i <= 0;
			nliO1l <= 0;
			nliO1O <= 0;
			nll1ll <= 0;
			nlllOl <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nlO01O <= 0;
			nlO1iO <= 0;
			nlO1ll <= 0;
		end
		else 
		begin
			n0liO <= wire_niOlO_dataout;
			n0lli <= wire_niOll_dataout;
			n0lll <= wire_n1liO_dataout;
			n0O0l <= n01OO;
			n0O0O <= n0O0l;
			n0Oii <= n1O0i;
			n0Oil <= n1O0l;
			n0OiO <= n1O0O;
			n0Oli <= n1Oii;
			n0Oll <= n1Oil;
			n0OlO <= n1OiO;
			n0OOi <= n1Oli;
			ni00l <= wire_niiOl_dataout;
			ni0iO <= nl0i1l;
			ni0lO <= wire_nilll_dataout;
			ni0Oi <= wire_nillO_dataout;
			ni0Ol <= wire_nilOi_dataout;
			ni0OO <= wire_nilOl_dataout;
			ni10O <= n1O1O;
			ni1ii <= ni10O;
			ni1il <= ni1ii;
			ni1iO <= n001i;
			ni1li <= n001l;
			ni1ll <= n001O;
			ni1lO <= n000i;
			ni1Oi <= n000l;
			ni1Ol <= n000O;
			ni1OO <= n00il;
			nii0i <= wire_niO1l_dataout;
			nii1i <= wire_nilOO_dataout;
			nii1l <= wire_niO1i_dataout;
			nl0Oil <= nlllOl;
			nl0OiO <= (wire_nli10l_dataout | wire_nli11i_dataout);
			nl0Oli <= wire_nli10l_dataout;
			nl0OlO <= wire_nl0OOl_dataout;
			nli00O <= wire_nli10i_dataout;
			nli01O <= wire_nli1Oi_dataout;
			nli0li <= wire_nlli1i_o;
			nli0ll <= nllO0i;
			nli0lO <= nllO0l;
			nli0Oi <= nllO0O;
			nli0Ol <= nllOii;
			nli0OO <= nllOil;
			nlii0i <= nllOlO;
			nlii0l <= nllOOi;
			nlii0O <= nllOOl;
			nlii1i <= nllOiO;
			nlii1l <= nllOli;
			nlii1O <= nllOll;
			nliiii <= nllOOO;
			nliiil <= nlO11i;
			nliiiO <= nlO11l;
			nliili <= n111O;
			nliill <= n111i;
			nliilO <= nlOOOO;
			nliiOi <= nlOOOl;
			nliiOl <= nlOO0O;
			nliiOO <= nlOO0l;
			nlil0i <= nlOlll;
			nlil0l <= nlOlli;
			nlil0O <= nlOliO;
			nlil1i <= nlOO0i;
			nlil1l <= nlOO1O;
			nlil1O <= nlOO1l;
			nlilii <= nlOlii;
			nlilil <= nlOl1O;
			nliliO <= nlOiOi;
			nlilli <= nlOilO;
			nlilll <= nlOill;
			nlillO <= nlOili;
			nlilOi <= (nl01Oi & nlOiiO);
			nlilOl <= (nl01Oi & nlOiil);
			nlilOO <= (nl01Oi & nlOiii);
			nliO0l <= nl01Oi;
			nliO0O <= wire_nlli1l_o;
			nliO1i <= (nl01Oi & nlOi0O);
			nliO1l <= (nl01Oi & nlOi0l);
			nliO1O <= (nl01Oi & nlOi0i);
			nll1ll <= wire_nli0il_dataout;
			nlllOl <= a_dtpa[0];
			nllO1i <= wire_nlO1Ol_o;
			nllO1l <= wire_nlO1Oi_o;
			nllO1O <= wire_nlO1lO_o;
			nlO01O <= wire_nlOl1l_o;
			nlO1iO <= wire_nlOiOl_dataout;
			nlO1ll <= wire_nlOiOl_dataout;
		end
	end
	initial
	begin
		niiii = 0;
		niiil = 0;
		niiiO = 0;
		niili = 0;
		niill = 0;
		niilO = 0;
		niiOi = 0;
		nilli = 0;
		niO0O = 0;
		niOil = 0;
		nl1ii = 0;
		nl1il = 0;
		nl1li = 0;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			niiii <= 0;
			niiil <= 0;
			niiiO <= 0;
			niili <= 0;
			niill <= 0;
			niilO <= 0;
			niiOi <= 0;
			nilli <= 0;
			niO0O <= 0;
			niOil <= 0;
			nl1ii <= 0;
			nl1il <= 0;
			nl1li <= 0;
		end
		else if  (nl0i0i == 1'b1) 
		begin
			niiii <= wire_niO0i_o[1];
			niiil <= wire_niO0i_o[2];
			niiiO <= wire_niO0i_o[3];
			niili <= wire_niO0i_o[4];
			niill <= wire_niO0i_o[5];
			niilO <= wire_niO0i_o[6];
			niiOi <= nii0O;
			nilli <= niiii;
			niO0O <= niiil;
			niOil <= niiiO;
			nl1ii <= niili;
			nl1il <= niill;
			nl1li <= niilO;
		end
	end
	initial
	begin
		nl1lO = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			nl1lO <= 1;
		end
		else if  (nl0O1O == 1'b1) 
		begin
			nl1lO <= wire_nilil_o[0];
		end
	end
	initial
	begin
		nli00l = 0;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			nli00l <= 0;
		end
		else if  (nl01ll == 1'b1) 
		begin
			nli00l <= nli00O;
		end
	end
	initial
	begin
		nll0iO = 1;
		nlli1O = 1;
		nlliOi = 1;
		nlliOO = 1;
		nlll0i = 1;
		nlll0l = 1;
		nlll0O = 1;
		nlll1i = 1;
		nlll1l = 1;
		nlll1O = 1;
		nlllii = 1;
		nlllil = 1;
		nllliO = 1;
		nlllli = 1;
		nlllll = 1;
		nlllOi = 1;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			nll0iO <= 0;
			nlli1O <= 0;
			nlliOi <= 0;
			nlliOO <= 0;
			nlll0i <= 0;
			nlll0l <= 0;
			nlll0O <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nlllii <= 0;
			nlllil <= 0;
			nllliO <= 0;
			nlllli <= 0;
			nlllll <= 0;
			nlllOi <= 0;
		end
		else if  (nl001O == 1'b1) 
		begin
			nll0iO <= wire_nliOil_dataout;
			nlli1O <= wire_nliOiO_dataout;
			nlliOi <= wire_nliOli_dataout;
			nlliOO <= wire_nliOll_dataout;
			nlll0i <= wire_nliOOO_dataout;
			nlll0l <= wire_nll11i_dataout;
			nlll0O <= wire_nll11l_dataout;
			nlll1i <= wire_nliOlO_dataout;
			nlll1l <= wire_nliOOi_dataout;
			nlll1O <= wire_nliOOl_dataout;
			nlllii <= wire_nll11O_dataout;
			nlllil <= wire_nll10i_dataout;
			nllliO <= wire_nll10l_dataout;
			nlllli <= wire_nll10O_dataout;
			nlllll <= wire_nll1ii_dataout;
			nlllOi <= wire_nll1il_dataout;
		end
	end
	initial
	begin
		n0OOl = 0;
		n0OOO = 0;
		ni00i = 0;
		ni01i = 0;
		ni01l = 0;
		ni01O = 0;
		ni10i = 0;
		ni10l = 0;
		ni11i = 0;
		ni11l = 0;
		ni11O = 0;
		nlO0i = 0;
		nlO0O = 0;
		nlO1O = 0;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			n0OOl <= 0;
			n0OOO <= 0;
			ni00i <= 0;
			ni01i <= 0;
			ni01l <= 0;
			ni01O <= 0;
			ni10i <= 0;
			ni10l <= 0;
			ni11i <= 0;
			ni11l <= 0;
			ni11O <= 0;
			nlO0i <= 0;
			nlO0O <= 0;
			nlO1O <= 0;
		end
		else if  (nl0Oii == 1'b0) 
		begin
			n0OOl <= n0Oii;
			n0OOO <= n0Oil;
			ni00i <= ni1lO;
			ni01i <= ni1iO;
			ni01l <= ni1li;
			ni01O <= ni1ll;
			ni10i <= n0OlO;
			ni10l <= n0OOi;
			ni11i <= n0OiO;
			ni11l <= n0Oli;
			ni11O <= n0Oll;
			nlO0i <= ni1Ol;
			nlO0O <= ni1Oi;
			nlO1O <= ni1OO;
		end
	end
	initial
	begin
		nl00i = 0;
		nl01i = 0;
		nl01l = 0;
		nl01O = 0;
		nl1Oi = 0;
		nl1Ol = 0;
		nl1OO = 0;
		nliiO = 0;
		nlill = 0;
		nllli = 0;
		nllOl = 0;
		nllOO = 0;
		nlO1l = 0;
	end
	always @ ( posedge a_tfclk or negedge a_treset_n)
	begin
		if (a_treset_n == 1'b0) 
		begin
			nl00i <= 0;
			nl01i <= 0;
			nl01l <= 0;
			nl01O <= 0;
			nl1Oi <= 0;
			nl1Ol <= 0;
			nl1OO <= 0;
			nliiO <= 0;
			nlill <= 0;
			nllli <= 0;
			nllOl <= 0;
			nllOO <= 0;
			nlO1l <= 0;
		end
		else if  (nl0O1O == 1'b1) 
		begin
			nl00i <= nl1lO;
			nl01i <= wire_nilil_o[4];
			nl01l <= wire_nilil_o[5];
			nl01O <= wire_nilil_o[6];
			nl1Oi <= wire_nilil_o[1];
			nl1Ol <= wire_nilil_o[2];
			nl1OO <= wire_nilil_o[3];
			nliiO <= nl1Oi;
			nlill <= nl1Ol;
			nllli <= nl1OO;
			nllOl <= nl01i;
			nllOO <= nl01l;
			nlO1l <= nl01O;
		end
	end
	assign		wire_n1lil_dataout = ((n1O1l & ((~ nl0llO) & (~ n1O1i))) === 1'b1) ? (~ n1O1O) : n1O1O;
	assign		wire_n1liO_dataout = ((n0lli & ((~ nl0i1O) & (~ n0liO))) === 1'b1) ? (~ n0lll) : n0lll;
	or(wire_niiOl_dataout, wire_niiOO_dataout, ((~ wire_nilii_dataout) | wire_nil0O_o));
	and(wire_niiOO_dataout, ni00l, ~{(nl0i1l & (wire_nilii_dataout & wire_nil1O_o))});
	assign		wire_nilii_dataout = (nl0O1O === 1'b1) ? nl00Oi : nl00Ol;
	assign		wire_nilll_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[1] : wire_niOii_o[1];
	assign		wire_nillO_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[2] : wire_niOii_o[2];
	assign		wire_nilOi_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[3] : wire_niOii_o[3];
	assign		wire_nilOl_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[4] : wire_niOii_o[4];
	assign		wire_nilOO_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[5] : wire_niOii_o[5];
	assign		wire_niO1i_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[6] : wire_niOii_o[6];
	assign		wire_niO1l_dataout = (nl0i0i === 1'b1) ? wire_niOiO_o[7] : wire_niOii_o[7];
	assign		wire_niO1O_dataout = (nl0i0i === 1'b1) ? nl00OO : nl0i1i;
	and(wire_niOll_dataout, wire_niOOl_dataout, ~{nl0i1O});
	or(wire_niOlO_dataout, wire_niOOO_dataout, nl0i1O);
	and(wire_niOOi_dataout, wire_nl11i_dataout, ~{nl0i1O});
	or(wire_niOOl_dataout, wire_nl11l_dataout, n0liO);
	and(wire_niOOO_dataout, wire_nl11O_dataout, ~{n0liO});
	and(wire_nl0ii_dataout, wire_nl0il_dataout, ~{wire_nl0ll_o});
	or(wire_nl0il_dataout, n0l0O, wire_nl0iO_o);
	assign		wire_nl0Oi_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[1] : wire_nli0l_o[1];
	assign		wire_nl0Ol_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[2] : wire_nli0l_o[2];
	assign		wire_nl0OO_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[3] : wire_nli0l_o[3];
	assign		wire_nl0OOl_dataout = (nl01ll === 1'b1) ? wire_nli11l_o[0] : wire_nl0OOO_dataout;
	and(wire_nl0OOO_dataout, nl0OlO, ~{nliO0O});
	or(wire_nl10i_dataout, n0lil, n0lli);
	and(wire_nl11i_dataout, wire_nl10i_dataout, ~{n0liO});
	and(wire_nl11l_dataout, n0lli, ~{n0lli});
	and(wire_nl11O_dataout, n0liO, ~{n0lli});
	and(wire_nli01i_dataout, wire_nli01l_o[0], nli00O);
	assign		wire_nli0i_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[7] : wire_nli0l_o[7];
	assign		wire_nli0il_dataout = (nl001O === 1'b1) ? wire_nliOii_dataout : nll1ll;
	assign		wire_nli10i_dataout = ((~ nl0Oli) === 1'b1) ? wire_nli1li_dataout : wire_nli10O_dataout;
	assign		wire_nli10l_dataout = ((~ nl0Oli) === 1'b1) ? wire_nli1ll_dataout : wire_nli1ii_dataout;
	assign		wire_nli10O_dataout = (nliO0O === 1'b1) ? nli00O : wire_nli1il_dataout;
	and(wire_nli11i_dataout, nl01li, ~{nl01ll});
	assign		wire_nli1i_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[4] : wire_nli0l_o[4];
	and(wire_nli1ii_dataout, wire_nli1iO_dataout, ~{nliO0O});
	assign		wire_nli1il_dataout = ((~ nl01li) === 1'b1) ? nli00l : nli00O;
	and(wire_nli1iO_dataout, nl0Oli, ~{(~ nl01li)});
	assign		wire_nli1l_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[5] : wire_nli0l_o[5];
	assign		wire_nli1li_dataout = (nl01iO === 1'b1) ? nli01O : nli00O;
	or(wire_nli1ll_dataout, nl0Oli, nl01iO);
	assign		wire_nli1O_dataout = (nl0lOO === 1'b1) ? wire_nli0O_o[6] : wire_nli0l_o[6];
	assign		wire_nli1Oi_dataout = (nl01ll === 1'b1) ? wire_nli01i_dataout : wire_nli1Ol_dataout;
	and(wire_nli1Ol_dataout, wire_nli1OO_o[0], nli01O);
	and(wire_nliOii_dataout, nl01lO, ~{nl01Ol});
	assign		wire_nliOil_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[1] : wire_nll1iO_o[1];
	assign		wire_nliOiO_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[2] : wire_nll1iO_o[2];
	and(wire_nliOl_dataout, wire_nll1l_dataout, ~{nl0llO});
	assign		wire_nliOli_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[3] : wire_nll1iO_o[3];
	assign		wire_nliOll_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[4] : wire_nll1iO_o[4];
	assign		wire_nliOlO_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[5] : wire_nll1iO_o[5];
	or(wire_nliOO_dataout, wire_nll1O_dataout, nl0llO);
	assign		wire_nliOOi_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[6] : wire_nll1iO_o[6];
	assign		wire_nliOOl_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[7] : wire_nll1iO_o[7];
	assign		wire_nliOOO_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[8] : wire_nll1iO_o[8];
	and(wire_nll0i_dataout, wire_nllii_dataout, ~{n1O1i});
	and(wire_nll0l_dataout, n1O1l, ~{n1O1l});
	and(wire_nll0O_dataout, n1O1i, ~{n1O1l});
	assign		wire_nll10i_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[12] : wire_nll1iO_o[12];
	assign		wire_nll10l_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[13] : wire_nll1iO_o[13];
	assign		wire_nll10O_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[14] : wire_nll1iO_o[14];
	assign		wire_nll11i_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[9] : wire_nll1iO_o[9];
	assign		wire_nll11l_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[10] : wire_nll1iO_o[10];
	assign		wire_nll11O_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[11] : wire_nll1iO_o[11];
	and(wire_nll1i_dataout, wire_nll0i_dataout, ~{nl0llO});
	assign		wire_nll1ii_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[15] : wire_nll1iO_o[15];
	assign		wire_nll1il_dataout = (nl01Ol === 1'b1) ? wire_nll1li_o[16] : wire_nll1iO_o[16];
	or(wire_nll1l_dataout, wire_nll0l_dataout, n1O1i);
	and(wire_nll1O_dataout, wire_nll0O_dataout, ~{n1O1i});
	and(wire_nlli0i_dataout, wire_nlliil_dataout, ~{(~ nlO01O)});
	or(wire_nlli0l_dataout, wire_nlliiO_dataout, (~ nlO01O));
	and(wire_nlli0O_dataout, wire_nlliil_dataout, nl0OiO);
	or(wire_nllii_dataout, n1lOO, n1O1l);
	or(wire_nlliii_dataout, wire_nlliiO_dataout, ~{nl0OiO});
	and(wire_nlliil_dataout, (~ nl001i), ~{nl001l});
	or(wire_nlliiO_dataout, nl001i, nl001l);
	assign		wire_nlO00i_dataout = (nl000i === 1'b1) ? (~ wire_nlOOli_dataout) : (~ nl000l);
	and(wire_nlO00l_dataout, wire_nlOOli_dataout, nl000i);
	and(wire_nlO00O_dataout, nl000l, ~{nl000i});
	and(wire_nlO0ii_dataout, wire_nlOi1l_dataout, nl000i);
	assign		wire_nlO0il_dataout = (nl000i === 1'b1) ? wire_nlOi1O_dataout : (~ nl000l);
	assign		wire_nlO0iO_dataout = (nl000i === 1'b1) ? (~ wire_nlOOlO_dataout) : nl000l;
	and(wire_nlO0lO_dataout, (~ wire_nlOOli_dataout), ni0ii);
	and(wire_nlO0Oi_dataout, wire_nlOOli_dataout, ni0ii);
	and(wire_nlO0Ol_dataout, wire_nlOi1l_dataout, ni0ii);
	and(wire_nlO0OO_dataout, wire_nlOi1O_dataout, ni0ii);
	or(wire_nlOi1i_dataout, (~ wire_nlOOlO_dataout), ~{ni0ii});
	and(wire_nlOi1l_dataout, (~ wire_nlOOli_dataout), ~{(~ wire_nlOOlO_dataout)});
	and(wire_nlOi1O_dataout, wire_nlOOli_dataout, ~{(~ wire_nlOOlO_dataout)});
	assign		wire_nlOiOl_dataout = (nl00li === 1'b1) ? ni00l : wire_nlOiOO_dataout;
	assign		wire_nlOiOO_dataout = (nl000O === 1'b1) ? ni00l : (ni00l | nlO1ll);
	or(wire_nlOl0i_dataout, (~ nl000l), nl000i);
	assign		wire_nlOl0l_dataout = (nl000i === 1'b1) ? (~ wire_nlO01i_o) : (~ nl000l);
	and(wire_nlOl0O_dataout, (~ wire_nlO1Ol_o), ni0ii);
	and(wire_nlOlil_dataout, (~ wire_nlO01i_o), ni0ii);
	assign		wire_nlOOii_dataout = (nl00iO === 1'b1) ? nl00il : (wire_n110i_q_b[32] | nl00il);
	assign		wire_nlOOli_dataout = (nl00iO === 1'b1) ? wire_n110i_q_b[33] : (wire_n110i_q_b[32] | wire_n110i_q_b[33]);
	and(wire_nlOOlO_dataout, wire_n110i_q_b[32], nl00iO);
	oper_add   nil0i
	( 
	.a({16{1'b0}}),
	.b({{15{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nil0i_o));
	defparam
		nil0i.sgate_representation = 0,
		nil0i.width_a = 16,
		nil0i.width_b = 16,
		nil0i.width_o = 16;
	oper_add   nilil
	( 
	.a({nl01O, nl01l, nl01i, nl1OO, nl1Ol, nl1Oi, nl1lO}),
	.b({{6{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nilil_o));
	defparam
		nilil.sgate_representation = 0,
		nilil.width_a = 7,
		nilil.width_b = 7,
		nilil.width_o = 7;
	oper_add   niO0i
	( 
	.a({niilO, niill, niili, niiiO, niiil, niiii, nii0O}),
	.b({{6{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niO0i_o));
	defparam
		niO0i.sgate_representation = 0,
		niO0i.width_a = 7,
		niO0i.width_b = 7,
		niO0i.width_o = 7;
	oper_add   niOii
	( 
	.a({n0OOl, n0OOO, ni11i, ni11l, ni11O, ni10i, ni10l, 1'b1}),
	.b({(~ nl1li), (~ nl1il), (~ nl1ii), (~ niOil), (~ niO0O), (~ nilli), (~ niiOi), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niOii_o));
	defparam
		niOii.sgate_representation = 0,
		niOii.width_a = 8,
		niOii.width_b = 8,
		niOii.width_o = 8;
	oper_add   niOiO
	( 
	.a({n0OOl, n0OOO, ni11i, ni11l, ni11O, ni10i, ni10l, 1'b1}),
	.b({(~ niilO), (~ niill), (~ niili), (~ niiiO), (~ niiil), (~ niiii), (~ nii0O), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_niOiO_o));
	defparam
		niOiO.sgate_representation = 0,
		niOiO.width_a = 8,
		niOiO.width_b = 8,
		niOiO.width_o = 8;
	oper_add   nl00l
	( 
	.a({n00iO, n00li, n00ll, n00lO, n00Oi, n00Ol, n0i1i}),
	.b({{6{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl00l_o));
	defparam
		nl00l.sgate_representation = 0,
		nl00l.width_a = 7,
		nl00l.width_b = 7,
		nl00l.width_o = 7;
	oper_add   nl0li
	( 
	.a({{11{1'b1}}, 1'b0, {2{1'b1}}, {2{1'b0}}, 1'b1}),
	.b({{8{1'b0}}, 1'b1, {7{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl0li_o));
	defparam
		nl0li.sgate_representation = 0,
		nl0li.width_a = 17,
		nl0li.width_b = 17,
		nl0li.width_o = 17;
	oper_add   nl0lO
	( 
	.a({{12{1'b1}}, 1'b0, 1'b1, {2{1'b0}}, 1'b1}),
	.b({{8{1'b0}}, 1'b1, {7{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl0lO_o));
	defparam
		nl0lO.sgate_representation = 0,
		nl0lO.width_a = 17,
		nl0lO.width_b = 17,
		nl0lO.width_o = 17;
	oper_add   nli01l
	( 
	.a({nli00O}),
	.b({1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli01l_o));
	defparam
		nli01l.sgate_representation = 0,
		nli01l.width_a = 1,
		nli01l.width_b = 1,
		nli01l.width_o = 1;
	oper_add   nli0l
	( 
	.a({(nl0l0O17 & n0i1l), n0i1O, n0i0i, n0i0l, n0i0O, n0iii, n0iil, 1'b1}),
	.b({(~ n010l), (~ n010O), (nl0l0l20 & (~ n01ii)), (~ n01il), (~ n01iO), (~ n01li), (~ n01lO), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli0l_o));
	defparam
		nli0l.sgate_representation = 0,
		nli0l.width_a = 8,
		nli0l.width_b = 8,
		nli0l.width_o = 8;
	oper_add   nli0O
	( 
	.a({n0iiO, n0ili, n0ill, n0ilO, n0iOi, n0iOO, n0l1l, 1'b1}),
	.b({(~ n010l), (~ n010O), (~ n01ii), (~ n01il), (~ n01iO), (~ n01li), (nl0lii14 & (~ n01lO)), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli0O_o));
	defparam
		nli0O.sgate_representation = 0,
		nli0O.width_a = 8,
		nli0O.width_b = 8,
		nli0O.width_o = 8;
	oper_add   nli1OO
	( 
	.a({nli01O}),
	.b({1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli1OO_o));
	defparam
		nli1OO.sgate_representation = 0,
		nli1OO.width_a = 1,
		nli1OO.width_b = 1,
		nli1OO.width_o = 1;
	oper_add   nlilO
	( 
	.a({n0iiO, n0ili, (nl0lil11 & n0ill), n0ilO, n0iOi, n0iOO, n0l1l}),
	.b({{6{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlilO_o));
	defparam
		nlilO.sgate_representation = 0,
		nlilO.width_a = 7,
		nlilO.width_b = 7,
		nlilO.width_o = 7;
	oper_add   nll1iO
	( 
	.a({nlllOi, nlllll, nlllli, nllliO, nlllil, nlllii, nlll0O, nlll0l, nlll0i, nlll1O, nlll1l, nlll1i, nlliOO, nlliOi, nlli1O, nll0iO, 1'b1}),
	.b({{15{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nll1iO_o));
	defparam
		nll1iO.sgate_representation = 0,
		nll1iO.width_a = 17,
		nll1iO.width_b = 17,
		nll1iO.width_o = 17;
	oper_add   nll1li
	( 
	.a({wire_nlliOl_o[16:1], 1'b1}),
	.b({{15{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nll1li_o));
	defparam
		nll1li.sgate_representation = 0,
		nll1li.width_a = 17,
		nll1li.width_b = 17,
		nll1li.width_o = 17;
	oper_add   nlliOl
	( 
	.a({{12{1'b0}}, 1'b1, {3{1'b0}}, 1'b1}),
	.b({{14{1'b1}}, {2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlliOl_o));
	defparam
		nlliOl.sgate_representation = 0,
		nlliOl.width_a = 17,
		nlliOl.width_b = 17,
		nlliOl.width_o = 17;
	oper_decoder   nli11l
	( 
	.i({nli00O}),
	.o(wire_nli11l_o));
	defparam
		nli11l.width_i = 1,
		nli11l.width_o = 2;
	oper_less_than   nil0O
	( 
	.a({{12{1'b0}}, {2{1'b1}}, 1'b0, 1'b1}),
	.b({{9{1'b0}}, nii0i, nii1l, nii1i, ni0OO, ni0Ol, ni0Oi, ni0lO}),
	.cin(1'b0),
	.o(wire_nil0O_o));
	defparam
		nil0O.sgate_representation = 0,
		nil0O.width_a = 16,
		nil0O.width_b = 16;
	oper_less_than   nil1O
	( 
	.a({{9{1'b0}}, nii0i, nii1l, nii1i, ni0OO, ni0Ol, ni0Oi, ni0lO}),
	.b({wire_nil0i_o[15:0]}),
	.cin(1'b0),
	.o(wire_nil1O_o));
	defparam
		nil1O.sgate_representation = 0,
		nil1O.width_a = 16,
		nil1O.width_b = 16;
	oper_less_than   nl0iO
	( 
	.a({{9{1'b0}}, (nl0ill47 & wire_nli0i_dataout), (nl0ilO44 & wire_nli1O_dataout), wire_nli1l_dataout, wire_nli1i_dataout, (nl0iOi41 & wire_nl0OO_dataout), wire_nl0Ol_dataout, wire_nl0Oi_dataout}),
	.b({wire_nl0li_o[16:10], (nl0iil56 & wire_nl0li_o[9]), wire_nl0li_o[8], (nl0iiO53 & wire_nl0li_o[7]), wire_nl0li_o[6:5], (nl0ili50 & wire_nl0li_o[4]), wire_nl0li_o[3:1]}),
	.cin(1'b1),
	.o(wire_nl0iO_o));
	defparam
		nl0iO.sgate_representation = 0,
		nl0iO.width_a = 16,
		nl0iO.width_b = 16;
	oper_less_than   nl0ll
	( 
	.a({wire_nl0lO_o[16], (nl0l1i32 & wire_nl0lO_o[15]), wire_nl0lO_o[14:9], (nl0l1l29 & wire_nl0lO_o[8]), wire_nl0lO_o[7:5], (nl0l1O26 & wire_nl0lO_o[4]), (nl0l0i23 & wire_nl0lO_o[3]), wire_nl0lO_o[2:1]}),
	.b({{9{1'b0}}, (nl0iOl38 & wire_nli0i_dataout), wire_nli1O_dataout, (nl0iOO35 & wire_nli1l_dataout), wire_nli1i_dataout, wire_nl0OO_dataout, wire_nl0Ol_dataout, wire_nl0Oi_dataout}),
	.cin(1'b0),
	.o(wire_nl0ll_o));
	defparam
		nl0ll.sgate_representation = 0,
		nl0ll.width_a = 16,
		nl0ll.width_b = 16;
	oper_selector   nlli1i
	( 
	.data({wire_nlli0O_dataout, wire_nlli0i_dataout}),
	.o(wire_nlli1i_o),
	.sel({(~ nli0li), nli0li}));
	defparam
		nlli1i.width_data = 2,
		nlli1i.width_sel = 2;
	oper_selector   nlli1l
	( 
	.data({wire_nlliii_dataout, wire_nlli0l_dataout}),
	.o(wire_nlli1l_o),
	.sel({(~ nli0li), nli0li}));
	defparam
		nlli1l.width_data = 2,
		nlli1l.width_sel = 2;
	oper_selector   nlO01i
	( 
	.data({wire_nlOi1i_dataout, 1'b0, 1'b1, wire_nlO0iO_dataout}),
	.o(wire_nlO01i_o),
	.sel({nlllOO, (nllO1i | nllO1O), 1'b0, nllO1l}));
	defparam
		nlO01i.width_data = 4,
		nlO01i.width_sel = 4;
	oper_selector   nlO1lO
	( 
	.data({wire_nlO0Ol_dataout, wire_nlO0lO_dataout, 1'b0, wire_nlO0ii_dataout, wire_nlO00i_dataout}),
	.o(wire_nlO1lO_o),
	.sel({nlllOO, nllO1i, 1'b0, nllO1l, nllO1O}));
	defparam
		nlO1lO.width_data = 5,
		nlO1lO.width_sel = 5;
	oper_selector   nlO1Oi
	( 
	.data({wire_nlO0OO_dataout, wire_nlO0Oi_dataout, 1'b0, wire_nlO0il_dataout, wire_nlO00l_dataout}),
	.o(wire_nlO1Oi_o),
	.sel({nlllOO, nllO1i, 1'b0, nllO1l, nllO1O}));
	defparam
		nlO1Oi.width_data = 5,
		nlO1Oi.width_sel = 5;
	oper_selector   nlO1Ol
	( 
	.data({1'b0, (~ ni0ii), wire_nlO00O_dataout}),
	.o(wire_nlO1Ol_o),
	.sel({(nlllOO | nllO1l), nllO1i, nllO1O}));
	defparam
		nlO1Ol.width_data = 3,
		nlO1Ol.width_sel = 3;
	oper_selector   nlOl1l
	( 
	.data({wire_nlOlil_dataout, wire_nlOl0O_dataout, 1'b1, wire_nlOl0l_dataout, wire_nlOl0i_dataout}),
	.o(wire_nlOl1l_o),
	.sel({nlllOO, nllO1i, 1'b0, nllO1l, nllO1O}));
	defparam
		nlOl1l.width_data = 5,
		nlOl1l.width_sel = 5;
	assign
		a_tdat = {nli0ll, nli0lO, nli0Oi, nli0Ol, nli0OO, nlii1i, nlii1l, nlii1O, nlii0i, nlii0l, nlii0O, nliiii, nliiil, nliiiO, nliili, nliill, nliilO, nliiOi, nliiOl, nliiOO, nlil1i, nlil1l, nlil1O, nlil0i, nlil0l, nlil0O, nlilii, nlilil, nliliO, nlilli, nlilll, nlillO},
		a_tenb = nliO0i,
		a_teop = nlilOl,
		a_terr = nlilOO,
		a_tmod = {nliO1l, nliO1O},
		a_tprty = nliO1i,
		a_tsop = nlilOi,
		b_dav = n0l0O,
		nl000i = (nl000O & ni0ii),
		nl000l = (nl000O & (~ ni0ii)),
		nl000O = (nli0li | (nli0iO & nl0OiO)),
		nl001i = ((~ nl0Oil) & (nlO01O & nll1ll)),
		nl001l = (nlO01O & nlOiil),
		nl001O = (nl0Oil | (nl01OO | ((~ nl0Oil) & nliO0l))),
		nl00ii = (nllO1i | nlllOO),
		nl00il = (wire_n110i_q_b[33] & wire_n110i_q_b[34]),
		nl00iO = (nlllOO | nllO1l),
		nl00li = ((nl00ii & ni0ii) | (nl000O & (ni0ii & (nllO1l | nllO1O)))),
		nl00ll = (((((((~ (n01lO ^ n0l1l)) & (~ (n01li ^ n0iOO))) & (~ (n01iO ^ n0iOi))) & (~ (n01il ^ n0ilO))) & (~ (n01ii ^ n0ill))) & (~ (n010O ^ n0ili))) & (~ (n010l ^ n0iiO))),
		nl00lO = (((((((~ (n01lO ^ wire_nlilO_o[0])) & (~ (n01li ^ wire_nlilO_o[1]))) & (~ (n01iO ^ wire_nlilO_o[2]))) & (~ (n01il ^ wire_nlilO_o[3]))) & (~ (n01ii ^ wire_nlilO_o[4]))) & (~ (n010O ^ wire_nlilO_o[5]))) & (~ (n010l ^ wire_nlilO_o[6]))),
		nl00Oi = (((((((~ (nlO1O ^ nl1lO)) & (~ (nlO0i ^ nl1Oi))) & (~ (nlO0O ^ nl1Ol))) & (~ (ni00i ^ nl1OO))) & (~ (ni01O ^ nl01i))) & (~ (ni01l ^ nl01l))) & (~ (ni01i ^ nl01O))),
		nl00Ol = (((((((~ (nlO1O ^ nl00i)) & (~ (nlO0i ^ nliiO))) & (~ (nlO0O ^ nlill))) & (~ (nllli ^ ni00i))) & (~ (nllOl ^ ni01O))) & (~ (nllOO ^ ni01l))) & (~ (nlO1l ^ ni01i))),
		nl00OO = (((((((~ (nii0O ^ ni10l)) & (~ (niiii ^ ni10i))) & (~ (niiil ^ ni11O))) & (~ (niiiO ^ ni11l))) & (~ (niili ^ ni11i))) & (~ (niill ^ n0OOO))) & (~ (niilO ^ n0OOl))),
		nl01iO = (nl01li & (~ nl0OlO)),
		nl01li = (nl0Oil & nlO1iO),
		nl01ll = (nl0OiO & nliO0O),
		nl01lO = ((((((((((((((((~ nlllOi) & (~ nlllll)) & (~ nlllli)) & (~ nllliO)) & (~ nlllil)) & (~ nlllii)) & (~ nlll0O)) & (~ nlll0l)) & (~ nlll0i)) & (~ nlll1O)) & (~ nlll1l)) & (~ nlll1i)) & (~ nlliOO)) & (~ nlliOi)) & (~ nlli1O)) & nll0iO),
		nl01Oi = ((nli0li & nlO01O) | (nl0OiO & (nli0iO & nlO01O))),
		nl01Ol = (nl0Oil | nl01OO),
		nl01OO = (nll1ll | (nli0iO & wire_nlli1l_o)),
		nl0i0i = (nl0i1l & (~ ni0ll)),
		nl0i0l = (((~ n0l0i) & (b_eop & nl0lOO)) & nl0i0O59),
		nl0i1i = (((((((~ (niiOi ^ ni10l)) & (~ (nilli ^ ni10i))) & (~ (niO0O ^ ni11O))) & (~ (niOil ^ ni11l))) & (~ (nl1ii ^ ni11i))) & (~ (nl1il ^ n0OOO))) & (~ (nl1li ^ n0OOl))),
		nl0i1l = (((nl00ii | (nllO1l & nl000O)) | (nl000O & nllO1O)) | (nllO1O & (~ ni0ii))),
		nl0i1O = (n0lil & (~ (n0O0O ^ n0lll))),
		nl0liO = ((n01OO ^ (~ n01Ol)) ^ (~ nl0lli8)),
		nl0llO = ((n1lOO & (~ (n1OlO ^ n1O1O))) & nl0lOi5),
		nl0lOO = (((~ n0l0i) & b_ena) & nl0O1i2),
		nl0O0i = 1'b1,
		nl0O1O = ((~ ni0il) & (wire_n110i_q_b[33] & ni0iO)),
		nl0Oii = (ni1il ^ (~ ni1ii));
endmodule //auk_pac_mtx_pl3_link
//synopsys translate_on
//VALID FILE
