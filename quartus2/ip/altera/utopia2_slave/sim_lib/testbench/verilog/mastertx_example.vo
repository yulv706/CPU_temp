//IP Functional Simulation Model
//VERSION_BEGIN 8.1 cbx_mgl 2008:07:11:15:23:48:SJ cbx_simgen 2008:07:09:16:50:58:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Legal Notice: ï¿½ 2003 Altera Corporation. All rights reserved.
// You may only use these  simulation  model  output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event  Altera disclaims all warranties of any kind). Your use of  Altera
// Corporation's design tools, logic functions and other software and tools,
// and its AMPP partner logic functions, and any output files any of the
// foregoing (including device programming or simulation files), and any
// associated documentation or information  are expressly subject to the
// terms and conditions of the  Altera Program License Subscription Agreement
// or other applicable license agreement, including, without limitation, that
// your use is for the sole purpose of programming logic devices manufactured
// by Altera and sold by Altera or its authorized distributors.  Please refer
// to the applicable agreement for further details.


//synopsys translate_off

//synthesis_resources = altsyncram 2 lpm_decode 1 lpm_ff 31 lut 191 mux21 299 oper_add 10 oper_decoder 1 oper_selector 19 
`timescale 1 ps / 1 ps
module  mastertx_example
	( 
	atm_tx_data,
	atm_tx_enb,
	atm_tx_port,
	atm_tx_port_load,
	atm_tx_port_stat,
	atm_tx_port_wait,
	atm_tx_soc,
	atm_tx_valid,
	reset,
	tx_addr,
	tx_clav,
	tx_clk_in,
	tx_data,
	tx_enb,
	tx_prty,
	tx_soc) /* synthesis synthesis_clearbox=1 */;
	input   [15:0]  atm_tx_data;
	output   atm_tx_enb;
	input   [4:0]  atm_tx_port;
	input   atm_tx_port_load;
	output   [30:0]  atm_tx_port_stat;
	output   atm_tx_port_wait;
	input   atm_tx_soc;
	input   atm_tx_valid;
	input   reset;
	output   [4:0]  tx_addr;
	input   tx_clav;
	input   tx_clk_in;
	output   [15:0]  tx_data;
	output   tx_enb;
	output   tx_prty;
	output   tx_soc;

	wire  [15:0]   wire_nl01Ol_q_b;
	reg	niO00i49;
	reg	niO00i50;
	reg	niO00O47;
	reg	niO00O48;
	reg	niO0il45;
	reg	niO0il46;
	reg	niO0li43;
	reg	niO0li44;
	reg	niO0lO41;
	reg	niO0lO42;
	reg	niO0Ol39;
	reg	niO0Ol40;
	reg	niO10l53;
	reg	niO10l54;
	reg	niO10O51;
	reg	niO10O52;
	reg	niO11i57;
	reg	niO11i58;
	reg	niO11l55;
	reg	niO11l56;
	reg	niOi0i35;
	reg	niOi0i36;
	reg	niOi0O33;
	reg	niOi0O34;
	reg	niOi1i37;
	reg	niOi1i38;
	reg	niOiil31;
	reg	niOiil32;
	reg	niOili29;
	reg	niOili30;
	reg	niOOOl27;
	reg	niOOOl28;
	reg	niOOOO25;
	reg	niOOOO26;
	reg	nl100l3;
	reg	nl100l4;
	reg	nl101i10;
	reg	nl101i9;
	reg	nl101l7;
	reg	nl101l8;
	reg	nl101O5;
	reg	nl101O6;
	reg	nl10ii1;
	reg	nl10ii2;
	reg	nl110i23;
	reg	nl110i24;
	reg	nl110l21;
	reg	nl110l22;
	reg	nl110O19;
	reg	nl110O20;
	reg	nl11iO17;
	reg	nl11iO18;
	reg	nl11ll15;
	reg	nl11ll16;
	reg	nl11lO13;
	reg	nl11lO14;
	reg	nl11Ol11;
	reg	nl11Ol12;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11Ol;
	reg	nl0ii;
	reg	nl0il;
	reg	nl0iO;
	reg	nl0li;
	reg	nl0lO;
	reg	nl0ll_clk_prev;
	wire	wire_nl0ll_PRN;
	reg	nl0Oii;
	reg	nl0Oil;
	reg	nl0Oli;
	reg	nl0OiO_clk_prev;
	wire	wire_nl0OiO_CLRN;
	wire	wire_nl0OiO_PRN;
	reg	nl0Ol;
	reg	nli1i;
	reg	nl0OO_clk_prev;
	wire	wire_nl0OO_CLRN;
	wire	wire_nl0OO_PRN;
	reg	nl0iOO;
	reg	nl0l0i;
	reg	nl0l0l;
	reg	nl0l0O;
	reg	nl0l1i;
	reg	nl0l1l;
	reg	nl0l1O;
	reg	nl0lii;
	reg	nl0lil;
	reg	nl0liO;
	reg	nl0lli;
	reg	nl0lll;
	reg	nl0llO;
	reg	nl0lOi;
	reg	nl0lOl;
	reg	nli10i;
	reg	n100i;
	reg	n100l;
	reg	n100O;
	reg	n101i;
	reg	n101l;
	reg	n101O;
	reg	n10ii;
	reg	n10il;
	reg	n10iO;
	reg	n10li;
	reg	n10ll;
	reg	n10lO;
	reg	n10Oi;
	reg	n10Ol;
	reg	n10OO;
	reg	n11il;
	reg	n11OO;
	reg	n1i1i;
	reg	n1i1l;
	reg	niili;
	reg	nl010i;
	reg	nl010l;
	reg	nl010O;
	reg	nl011i;
	reg	nl011l;
	reg	nl011O;
	reg	nl01ii;
	reg	nl01il;
	reg	nl01iO;
	reg	nl01li;
	reg	nl01ll;
	reg	nl0O0i;
	reg	nl0O0l;
	reg	nl0O0O;
	reg	nl0O1O;
	reg	nl1i0i;
	reg	nl1i0l;
	reg	nl1i0O;
	reg	nl1i1O;
	reg	nl1iii;
	reg	nl1iil;
	reg	nl1O1i;
	reg	nl1Oil;
	reg	nl1OiO;
	reg	nl1Oli;
	reg	nl1Oll;
	reg	nl1OlO;
	reg	nl1OOi;
	reg	nl1OOl;
	reg	nl1OOO;
	reg	nli01i;
	reg	nli01l;
	reg	nli01O;
	reg	nli0i;
	reg	nli1l;
	reg	nlil0i;
	reg	nlil0l;
	reg	nlil0O;
	reg	nlil1O;
	reg	nlilii;
	reg	nlilil;
	reg	nlilOl;
	reg	nlilOO;
	reg	nliOil;
	reg	nliOli;
	reg	nliOll;
	reg	nliOlO;
	reg	nliOOi;
	reg	nli1O_clk_prev;
	wire	wire_nli1O_PRN;
	reg	nliO0i;
	reg	nliO0l;
	reg	nliO1i;
	reg	nliO1l;
	reg	nliO1O;
	reg	nliOii;
	wire	wire_nliO0O_CLRN;
	reg	n0OOO;
	reg	nii0O;
	reg	niiii;
	reg	niiil;
	reg	niiiO;
	reg	nl0Oi;
	reg	nl0Oll;
	reg	nli0l;
	reg	nli0O;
	reg	nliii;
	reg	nliil;
	reg	nliiO;
	reg	nlili;
	reg	nliliO;
	reg	nlill;
	reg	nlilli;
	reg	nlilll;
	reg	nlillO;
	reg	nlilO;
	reg	nlilOi;
	reg	nliOi;
	reg	nliOiO;
	reg	nliOO;
	reg	nliOOl;
	reg	nliOl_clk_prev;
	wire	wire_nliOl_CLRN;
	reg	nl0lOO;
	reg	nl0O1i;
	reg	nl0O1l;
	reg	nll11i;
	wire	wire_nliOOO_CLRN;
	wire  [31:0]   wire_n1iiO_eq;
	wire  [0:0]   wire_n1ili_q;
	wire  [0:0]   wire_n1ill_q;
	wire  [0:0]   wire_n1ilO_q;
	wire  [0:0]   wire_n1iOi_q;
	wire  [0:0]   wire_n1iOl_q;
	wire  [0:0]   wire_n1iOO_q;
	wire  [0:0]   wire_n1l0i_q;
	wire  [0:0]   wire_n1l0l_q;
	wire  [0:0]   wire_n1l0O_q;
	wire  [0:0]   wire_n1l1i_q;
	wire  [0:0]   wire_n1l1l_q;
	wire  [0:0]   wire_n1l1O_q;
	wire  [0:0]   wire_n1lii_q;
	wire  [0:0]   wire_n1lil_q;
	wire  [0:0]   wire_n1liO_q;
	wire  [0:0]   wire_n1lli_q;
	wire  [0:0]   wire_n1lll_q;
	wire  [0:0]   wire_n1llO_q;
	wire  [0:0]   wire_n1lOi_q;
	wire  [0:0]   wire_n1lOl_q;
	wire  [0:0]   wire_n1lOO_q;
	wire  [0:0]   wire_n1O0i_q;
	wire  [0:0]   wire_n1O0l_q;
	wire  [0:0]   wire_n1O0O_q;
	wire  [0:0]   wire_n1O1i_q;
	wire  [0:0]   wire_n1O1l_q;
	wire  [0:0]   wire_n1O1O_q;
	wire  [0:0]   wire_n1Oii_q;
	wire  [0:0]   wire_n1Oil_q;
	wire  [0:0]   wire_n1OiO_q;
	wire  [0:0]   wire_n1Oli_q;
	wire	wire_n0ill_dataout;
	wire	wire_n0ilO_dataout;
	wire	wire_n0iOi_dataout;
	wire	wire_n0iOl_dataout;
	wire	wire_n0iOO_dataout;
	wire	wire_n0l0i_dataout;
	wire	wire_n0l0l_dataout;
	wire	wire_n0l0O_dataout;
	wire	wire_n0l1i_dataout;
	wire	wire_n0l1l_dataout;
	wire	wire_n0l1O_dataout;
	wire	wire_n0lii_dataout;
	wire	wire_n0lil_dataout;
	wire	wire_n0liO_dataout;
	wire	wire_n0lli_dataout;
	wire	wire_n0lll_dataout;
	wire	wire_n0llO_dataout;
	wire	wire_n0lOi_dataout;
	wire	wire_n0lOl_dataout;
	wire	wire_n0lOO_dataout;
	wire	wire_n0O0i_dataout;
	wire	wire_n0O0l_dataout;
	wire	wire_n0O0O_dataout;
	wire	wire_n0O1i_dataout;
	wire	wire_n0O1l_dataout;
	wire	wire_n0O1O_dataout;
	wire	wire_n0Oii_dataout;
	wire	wire_n0Oil_dataout;
	wire	wire_n0OiO_dataout;
	wire	wire_n0Oli_dataout;
	wire	wire_n0Oll_dataout;
	wire	wire_n0OOl_dataout;
	wire	wire_n110i_dataout;
	wire	wire_n110O_dataout;
	wire	wire_n111l_dataout;
	wire	wire_n11ii_dataout;
	wire	wire_n1i0i_dataout;
	wire	wire_n1i1O_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0li_dataout;
	wire	wire_ni0ll_dataout;
	wire	wire_ni0lO_dataout;
	wire	wire_ni0Oi_dataout;
	wire	wire_ni0Ol_dataout;
	wire	wire_ni0OO_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni11i_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_nii0i_dataout;
	wire	wire_nii0l_dataout;
	wire	wire_nii1i_dataout;
	wire	wire_nii1l_dataout;
	wire	wire_nii1O_dataout;
	wire	wire_niill_dataout;
	wire	wire_niilO_dataout;
	wire	wire_niiOi_dataout;
	wire	wire_niiOl_dataout;
	wire	wire_niiOO_dataout;
	wire	wire_nil0i_dataout;
	wire	wire_nil0l_dataout;
	wire	wire_nil0O_dataout;
	wire	wire_nil1i_dataout;
	wire	wire_nil1l_dataout;
	wire	wire_nil1O_dataout;
	wire	wire_nilii_dataout;
	wire	wire_nilil_dataout;
	wire	wire_niliO_dataout;
	wire	wire_nilli_dataout;
	wire	wire_nilll_dataout;
	wire	wire_nillO_dataout;
	wire	wire_nilOi_dataout;
	wire	wire_nilOl_dataout;
	wire	wire_nilOO_dataout;
	wire	wire_niO0i_dataout;
	wire	wire_niO0l_dataout;
	wire	wire_niO0O_dataout;
	wire	wire_niO1i_dataout;
	wire	wire_niO1l_dataout;
	wire	wire_niO1O_dataout;
	wire	wire_niOii_dataout;
	wire	wire_niOil_dataout;
	wire	wire_niOiO_dataout;
	wire	wire_niOli_dataout;
	wire	wire_niOll_dataout;
	wire	wire_niOlO_dataout;
	wire	wire_niOOi_dataout;
	wire	wire_niOOl_dataout;
	wire	wire_niOOO_dataout;
	wire	wire_nl00li_dataout;
	wire	wire_nl00ll_dataout;
	wire	wire_nl00lO_dataout;
	wire	wire_nl00Oi_dataout;
	wire	wire_nl00Ol_dataout;
	wire	wire_nl00OO_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl0i0i_dataout;
	wire	wire_nl0i0l_dataout;
	wire	wire_nl0i0O_dataout;
	wire	wire_nl0i1i_dataout;
	wire	wire_nl0i1l_dataout;
	wire	wire_nl0i1O_dataout;
	wire	wire_nl0iii_dataout;
	wire	wire_nl0iil_dataout;
	wire	wire_nl0iiO_dataout;
	wire	wire_nl0ili_dataout;
	wire	wire_nl0ilO_dataout;
	wire	wire_nl0iOi_dataout;
	wire	wire_nl0iOl_dataout;
	wire	wire_nl0OlO_dataout;
	wire	wire_nl0OOi_dataout;
	wire	wire_nl0OOl_dataout;
	wire	wire_nl0OOO_dataout;
	wire	wire_nl10i_dataout;
	wire	wire_nl10l_dataout;
	wire	wire_nl10O_dataout;
	wire	wire_nl11i_dataout;
	wire	wire_nl11l_dataout;
	wire	wire_nl11O_dataout;
	wire	wire_nl1ii_dataout;
	wire	wire_nl1iiO_dataout;
	wire	wire_nl1il_dataout;
	wire	wire_nl1ili_dataout;
	wire	wire_nl1ill_dataout;
	wire	wire_nl1ilO_dataout;
	wire	wire_nl1iO_dataout;
	wire	wire_nl1iOi_dataout;
	wire	wire_nl1iOl_dataout;
	wire	wire_nl1iOO_dataout;
	wire	wire_nl1l0i_dataout;
	wire	wire_nl1l0l_dataout;
	wire	wire_nl1l1i_dataout;
	wire	wire_nl1l1l_dataout;
	wire	wire_nl1l1O_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1lii_dataout;
	wire	wire_nl1lil_dataout;
	wire	wire_nl1liO_dataout;
	wire	wire_nl1lll_dataout;
	wire	wire_nl1llO_dataout;
	wire	wire_nl1lOi_dataout;
	wire	wire_nl1lOl_dataout;
	wire	wire_nl1lOO_dataout;
	wire	wire_nl1O0l_dataout;
	wire	wire_nl1O0O_dataout;
	wire	wire_nl1O1l_dataout;
	wire	wire_nl1O1O_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nli00i_dataout;
	wire	wire_nli00l_dataout;
	wire	wire_nli11i_dataout;
	wire	wire_nli11l_dataout;
	wire	wire_nli1ii_dataout;
	wire	wire_nli1il_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll0l_dataout;
	wire	wire_nll0O_dataout;
	wire	wire_nll0OO_dataout;
	wire	wire_nll10O_dataout;
	wire	wire_nll11l_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nlli0i_dataout;
	wire	wire_nlli0l_dataout;
	wire	wire_nlli0O_dataout;
	wire	wire_nlli1i_dataout;
	wire	wire_nlli1l_dataout;
	wire	wire_nlli1O_dataout;
	wire	wire_nllii_dataout;
	wire	wire_nlliii_dataout;
	wire	wire_nlliil_dataout;
	wire	wire_nlliiO_dataout;
	wire	wire_nllil_dataout;
	wire	wire_nllilO_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nlliOi_dataout;
	wire	wire_nlliOl_dataout;
	wire	wire_nlliOO_dataout;
	wire	wire_nlll0i_dataout;
	wire	wire_nlll0l_dataout;
	wire	wire_nlll0O_dataout;
	wire	wire_nlll1i_dataout;
	wire	wire_nlll1l_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nlllii_dataout;
	wire	wire_nlllil_dataout;
	wire	wire_nllliO_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllli_dataout;
	wire	wire_nlllll_dataout;
	wire	wire_nllllO_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nlllOi_dataout;
	wire	wire_nlllOl_dataout;
	wire	wire_nlllOO_dataout;
	wire	wire_nllO0i_dataout;
	wire	wire_nllO0l_dataout;
	wire	wire_nllO0O_dataout;
	wire	wire_nllO1i_dataout;
	wire	wire_nllO1l_dataout;
	wire	wire_nllO1O_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOii_dataout;
	wire	wire_nllOil_dataout;
	wire	wire_nllOiO_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOli_dataout;
	wire	wire_nllOll_dataout;
	wire	wire_nllOlO_dataout;
	wire	wire_nllOOi_dataout;
	wire	wire_nllOOl_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0li_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlO1il_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOlil_dataout;
	wire	wire_nlOliO_dataout;
	wire	wire_nlOlll_dataout;
	wire	wire_nlOllO_dataout;
	wire	wire_nlOlOi_dataout;
	wire	wire_nlOlOl_dataout;
	wire	wire_nlOlOO_dataout;
	wire	wire_nlOO0i_dataout;
	wire	wire_nlOO0l_dataout;
	wire	wire_nlOO0O_dataout;
	wire	wire_nlOO1i_dataout;
	wire	wire_nlOO1l_dataout;
	wire	wire_nlOO1O_dataout;
	wire	wire_nlOOii_dataout;
	wire	wire_nlOOil_dataout;
	wire	wire_nlOOiO_dataout;
	wire	wire_nlOOll_dataout;
	wire	wire_nlOOlO_dataout;
	wire	wire_nlOOOi_dataout;
	wire	wire_nlOOOl_dataout;
	wire	wire_nlOOOO_dataout;
	wire  [6:0]   wire_n1iii_o;
	wire  [2:0]   wire_n1iil_o;
	wire  [2:0]   wire_nl01lO_o;
	wire  [4:0]   wire_nl01O_o;
	wire  [3:0]   wire_nl0ill_o;
	wire  [5:0]   wire_nl1l0O_o;
	wire  [4:0]   wire_nl1ll_o;
	wire  [3:0]   wire_nli10O_o;
	wire  [3:0]   wire_nli1iO_o;
	wire  [5:0]   wire_nlOi0l_o;
	wire  [1:0]   wire_nl1lli_o;
	wire  wire_nll00i_o;
	wire  wire_nll00l_o;
	wire  wire_nll00O_o;
	wire  wire_nll01i_o;
	wire  wire_nll01l_o;
	wire  wire_nll01O_o;
	wire  wire_nll0ii_o;
	wire  wire_nll0il_o;
	wire  wire_nll0iO_o;
	wire  wire_nll0li_o;
	wire  wire_nll0ll_o;
	wire  wire_nll0lO_o;
	wire  wire_nll0Oi_o;
	wire  wire_nll10i_o;
	wire  wire_nll1ii_o;
	wire  wire_nll1iO_o;
	wire  wire_nll1ll_o;
	wire  wire_nll1Oi_o;
	wire  wire_nll1Ol_o;
	wire  nilOll;
	wire  nilOlO;
	wire  nilOOi;
	wire  nilOOl;
	wire  nilOOO;
	wire  niO01i;
	wire  niO01l;
	wire  niO01O;
	wire  niO10i;
	wire  niO11O;
	wire  niO1ii;
	wire  niO1il;
	wire  niO1iO;
	wire  niO1li;
	wire  niO1ll;
	wire  niO1lO;
	wire  niO1Oi;
	wire  niO1Ol;
	wire  niO1OO;
	wire  niOi1O;
	wire  niOilO;
	wire  niOiOi;
	wire  niOiOl;
	wire  niOiOO;
	wire  niOl0i;
	wire  niOl0l;
	wire  niOl0O;
	wire  niOl1i;
	wire  niOl1l;
	wire  niOl1O;
	wire  niOlii;
	wire  niOlil;
	wire  niOliO;
	wire  niOlli;
	wire  niOlll;
	wire  niOllO;
	wire  niOlOi;
	wire  niOlOl;
	wire  niOlOO;
	wire  niOO0i;
	wire  niOO0l;
	wire  niOO0O;
	wire  niOO1i;
	wire  niOO1l;
	wire  niOO1O;
	wire  niOOii;
	wire  niOOil;
	wire  niOOiO;
	wire  niOOli;
	wire  niOOll;
	wire  niOOlO;
	wire  niOOOi;
	wire  nl100i;
	wire  nl100O;
	wire  nl111i;
	wire  nl111l;
	wire  nl111O;
	wire  nl11ii;
	wire  nl11il;

	altsyncram   nl01Ol
	( 
	.address_a({nl0O0O, nl0O0l, nl0O0i}),
	.address_b({wire_nl0iOl_dataout, wire_nl0iOi_dataout, wire_nl0ilO_dataout}),
	.clock0(tx_clk_in),
	.data_a({nl01ll, nl01li, nl01iO, nl01il, nl01ii, nl010O, nl010l, nl010i, nl011O, nl011l, nl011i, nl1OOO, nl1OOl, nl1OOi, nl1OlO, nl1Oll}),
	.eccstatus(),
	.q_a(),
	.q_b(wire_nl01Ol_q_b),
	.wren_a(wire_nl1liO_dataout),
	.aclr0(),
	.aclr1(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clock1(),
	.clocken0(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_b()
	);
	defparam
		nl01Ol.address_aclr_a = "NONE",
		nl01Ol.address_aclr_b = "NONE",
		nl01Ol.address_reg_b = "CLOCK0",
		nl01Ol.byte_size = 8,
		nl01Ol.byteena_aclr_a = "NONE",
		nl01Ol.byteena_aclr_b = "NONE",
		nl01Ol.byteena_reg_b = "CLOCK1",
		nl01Ol.clock_enable_core_a = "USE_INPUT_CLKEN",
		nl01Ol.clock_enable_core_b = "USE_INPUT_CLKEN",
		nl01Ol.clock_enable_input_a = "NORMAL",
		nl01Ol.clock_enable_input_b = "NORMAL",
		nl01Ol.clock_enable_output_a = "NORMAL",
		nl01Ol.clock_enable_output_b = "NORMAL",
		nl01Ol.enable_ecc = "FALSE",
		nl01Ol.indata_aclr_a = "NONE",
		nl01Ol.indata_aclr_b = "NONE",
		nl01Ol.indata_reg_b = "CLOCK1",
		nl01Ol.init_file_layout = "PORT_A",
		nl01Ol.intended_device_family = "Stratix II",
		nl01Ol.numwords_a = 8,
		nl01Ol.numwords_b = 8,
		nl01Ol.operation_mode = "DUAL_PORT",
		nl01Ol.outdata_aclr_a = "NONE",
		nl01Ol.outdata_aclr_b = "NONE",
		nl01Ol.outdata_reg_a = "UNREGISTERED",
		nl01Ol.outdata_reg_b = "UNREGISTERED",
		nl01Ol.ram_block_type = "AUTO",
		nl01Ol.rdcontrol_aclr_b = "NONE",
		nl01Ol.rdcontrol_reg_b = "CLOCK1",
		nl01Ol.read_during_write_mode_mixed_ports = "OLD_DATA",
		nl01Ol.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nl01Ol.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nl01Ol.width_a = 16,
		nl01Ol.width_b = 16,
		nl01Ol.width_byteena_a = 1,
		nl01Ol.width_byteena_b = 1,
		nl01Ol.widthad_a = 3,
		nl01Ol.widthad_b = 3,
		nl01Ol.wrcontrol_aclr_a = "NONE",
		nl01Ol.wrcontrol_aclr_b = "NONE",
		nl01Ol.wrcontrol_wraddress_reg_b = "CLOCK1",
		nl01Ol.lpm_hint = "WIDTH_BYTEENA=1";
	altsyncram   nlO0O
	( 
	.address_a({1'b0, 1'b1, 1'b0, 1'b1, 1'b0}),
	.address_b({wire_nilli_dataout, wire_niliO_dataout, wire_nilil_dataout, wire_nilii_dataout, wire_nil0O_dataout}),
	.clock0(tx_clk_in),
	.clock1((~ tx_clk_in)),
	.data_a({1'b0, 1'b1, 1'b0, 1'b1, 1'b0}),
	.eccstatus(),
	.q_a(),
	.q_b(),
	.wren_a(1'b0),
	.aclr0(),
	.aclr1(),
	.addressstall_a(),
	.addressstall_b(),
	.byteena_a(),
	.byteena_b(),
	.clocken0(),
	.clocken1(),
	.clocken2(),
	.clocken3(),
	.data_b(),
	.rden_a(),
	.rden_b(),
	.wren_b()
	);
	defparam
		nlO0O.address_aclr_a = "NONE",
		nlO0O.address_aclr_b = "NONE",
		nlO0O.address_reg_b = "CLOCK1",
		nlO0O.byte_size = 8,
		nlO0O.byteena_aclr_a = "NONE",
		nlO0O.byteena_aclr_b = "NONE",
		nlO0O.byteena_reg_b = "CLOCK1",
		nlO0O.clock_enable_core_a = "USE_INPUT_CLKEN",
		nlO0O.clock_enable_core_b = "USE_INPUT_CLKEN",
		nlO0O.clock_enable_input_a = "NORMAL",
		nlO0O.clock_enable_input_b = "NORMAL",
		nlO0O.clock_enable_output_a = "NORMAL",
		nlO0O.clock_enable_output_b = "NORMAL",
		nlO0O.enable_ecc = "FALSE",
		nlO0O.indata_aclr_a = "NONE",
		nlO0O.indata_aclr_b = "NONE",
		nlO0O.indata_reg_b = "CLOCK1",
		nlO0O.init_file_layout = "PORT_A",
		nlO0O.intended_device_family = "Stratix II",
		nlO0O.numwords_a = 32,
		nlO0O.numwords_b = 32,
		nlO0O.operation_mode = "DUAL_PORT",
		nlO0O.outdata_aclr_a = "NONE",
		nlO0O.outdata_aclr_b = "NONE",
		nlO0O.outdata_reg_a = "UNREGISTERED",
		nlO0O.outdata_reg_b = "UNREGISTERED",
		nlO0O.ram_block_type = "AUTO",
		nlO0O.rdcontrol_aclr_b = "NONE",
		nlO0O.rdcontrol_reg_b = "CLOCK1",
		nlO0O.read_during_write_mode_mixed_ports = "DONT_CARE",
		nlO0O.read_during_write_mode_port_a = "NEW_DATA_NO_NBE_READ",
		nlO0O.read_during_write_mode_port_b = "NEW_DATA_NO_NBE_READ",
		nlO0O.width_a = 5,
		nlO0O.width_b = 5,
		nlO0O.width_byteena_a = 1,
		nlO0O.width_byteena_b = 1,
		nlO0O.widthad_a = 5,
		nlO0O.widthad_b = 5,
		nlO0O.wrcontrol_aclr_a = "NONE",
		nlO0O.wrcontrol_aclr_b = "NONE",
		nlO0O.wrcontrol_wraddress_reg_b = "CLOCK1",
		nlO0O.lpm_hint = "WIDTH_BYTEENA=1";
	initial
		niO00i49 = 0;
	always @ ( posedge tx_clk_in)
		  niO00i49 <= niO00i50;
	event niO00i49_event;
	initial
		#1 ->niO00i49_event;
	always @(niO00i49_event)
		niO00i49 <= {1{1'b1}};
	initial
		niO00i50 = 0;
	always @ ( posedge tx_clk_in)
		  niO00i50 <= niO00i49;
	initial
		niO00O47 = 0;
	always @ ( posedge tx_clk_in)
		  niO00O47 <= niO00O48;
	event niO00O47_event;
	initial
		#1 ->niO00O47_event;
	always @(niO00O47_event)
		niO00O47 <= {1{1'b1}};
	initial
		niO00O48 = 0;
	always @ ( posedge tx_clk_in)
		  niO00O48 <= niO00O47;
	initial
		niO0il45 = 0;
	always @ ( posedge tx_clk_in)
		  niO0il45 <= niO0il46;
	event niO0il45_event;
	initial
		#1 ->niO0il45_event;
	always @(niO0il45_event)
		niO0il45 <= {1{1'b1}};
	initial
		niO0il46 = 0;
	always @ ( posedge tx_clk_in)
		  niO0il46 <= niO0il45;
	initial
		niO0li43 = 0;
	always @ ( posedge tx_clk_in)
		  niO0li43 <= niO0li44;
	event niO0li43_event;
	initial
		#1 ->niO0li43_event;
	always @(niO0li43_event)
		niO0li43 <= {1{1'b1}};
	initial
		niO0li44 = 0;
	always @ ( posedge tx_clk_in)
		  niO0li44 <= niO0li43;
	initial
		niO0lO41 = 0;
	always @ ( posedge tx_clk_in)
		  niO0lO41 <= niO0lO42;
	event niO0lO41_event;
	initial
		#1 ->niO0lO41_event;
	always @(niO0lO41_event)
		niO0lO41 <= {1{1'b1}};
	initial
		niO0lO42 = 0;
	always @ ( posedge tx_clk_in)
		  niO0lO42 <= niO0lO41;
	initial
		niO0Ol39 = 0;
	always @ ( posedge tx_clk_in)
		  niO0Ol39 <= niO0Ol40;
	event niO0Ol39_event;
	initial
		#1 ->niO0Ol39_event;
	always @(niO0Ol39_event)
		niO0Ol39 <= {1{1'b1}};
	initial
		niO0Ol40 = 0;
	always @ ( posedge tx_clk_in)
		  niO0Ol40 <= niO0Ol39;
	initial
		niO10l53 = 0;
	always @ ( posedge tx_clk_in)
		  niO10l53 <= niO10l54;
	event niO10l53_event;
	initial
		#1 ->niO10l53_event;
	always @(niO10l53_event)
		niO10l53 <= {1{1'b1}};
	initial
		niO10l54 = 0;
	always @ ( posedge tx_clk_in)
		  niO10l54 <= niO10l53;
	initial
		niO10O51 = 0;
	always @ ( posedge tx_clk_in)
		  niO10O51 <= niO10O52;
	event niO10O51_event;
	initial
		#1 ->niO10O51_event;
	always @(niO10O51_event)
		niO10O51 <= {1{1'b1}};
	initial
		niO10O52 = 0;
	always @ ( posedge tx_clk_in)
		  niO10O52 <= niO10O51;
	initial
		niO11i57 = 0;
	always @ ( posedge tx_clk_in)
		  niO11i57 <= niO11i58;
	event niO11i57_event;
	initial
		#1 ->niO11i57_event;
	always @(niO11i57_event)
		niO11i57 <= {1{1'b1}};
	initial
		niO11i58 = 0;
	always @ ( posedge tx_clk_in)
		  niO11i58 <= niO11i57;
	initial
		niO11l55 = 0;
	always @ ( posedge tx_clk_in)
		  niO11l55 <= niO11l56;
	event niO11l55_event;
	initial
		#1 ->niO11l55_event;
	always @(niO11l55_event)
		niO11l55 <= {1{1'b1}};
	initial
		niO11l56 = 0;
	always @ ( posedge tx_clk_in)
		  niO11l56 <= niO11l55;
	initial
		niOi0i35 = 0;
	always @ ( posedge tx_clk_in)
		  niOi0i35 <= niOi0i36;
	event niOi0i35_event;
	initial
		#1 ->niOi0i35_event;
	always @(niOi0i35_event)
		niOi0i35 <= {1{1'b1}};
	initial
		niOi0i36 = 0;
	always @ ( posedge tx_clk_in)
		  niOi0i36 <= niOi0i35;
	initial
		niOi0O33 = 0;
	always @ ( posedge tx_clk_in)
		  niOi0O33 <= niOi0O34;
	event niOi0O33_event;
	initial
		#1 ->niOi0O33_event;
	always @(niOi0O33_event)
		niOi0O33 <= {1{1'b1}};
	initial
		niOi0O34 = 0;
	always @ ( posedge tx_clk_in)
		  niOi0O34 <= niOi0O33;
	initial
		niOi1i37 = 0;
	always @ ( posedge tx_clk_in)
		  niOi1i37 <= niOi1i38;
	event niOi1i37_event;
	initial
		#1 ->niOi1i37_event;
	always @(niOi1i37_event)
		niOi1i37 <= {1{1'b1}};
	initial
		niOi1i38 = 0;
	always @ ( posedge tx_clk_in)
		  niOi1i38 <= niOi1i37;
	initial
		niOiil31 = 0;
	always @ ( posedge tx_clk_in)
		  niOiil31 <= niOiil32;
	event niOiil31_event;
	initial
		#1 ->niOiil31_event;
	always @(niOiil31_event)
		niOiil31 <= {1{1'b1}};
	initial
		niOiil32 = 0;
	always @ ( posedge tx_clk_in)
		  niOiil32 <= niOiil31;
	initial
		niOili29 = 0;
	always @ ( posedge tx_clk_in)
		  niOili29 <= niOili30;
	event niOili29_event;
	initial
		#1 ->niOili29_event;
	always @(niOili29_event)
		niOili29 <= {1{1'b1}};
	initial
		niOili30 = 0;
	always @ ( posedge tx_clk_in)
		  niOili30 <= niOili29;
	initial
		niOOOl27 = 0;
	always @ ( posedge tx_clk_in)
		  niOOOl27 <= niOOOl28;
	event niOOOl27_event;
	initial
		#1 ->niOOOl27_event;
	always @(niOOOl27_event)
		niOOOl27 <= {1{1'b1}};
	initial
		niOOOl28 = 0;
	always @ ( posedge tx_clk_in)
		  niOOOl28 <= niOOOl27;
	initial
		niOOOO25 = 0;
	always @ ( posedge tx_clk_in)
		  niOOOO25 <= niOOOO26;
	event niOOOO25_event;
	initial
		#1 ->niOOOO25_event;
	always @(niOOOO25_event)
		niOOOO25 <= {1{1'b1}};
	initial
		niOOOO26 = 0;
	always @ ( posedge tx_clk_in)
		  niOOOO26 <= niOOOO25;
	initial
		nl100l3 = 0;
	always @ ( posedge tx_clk_in)
		  nl100l3 <= nl100l4;
	event nl100l3_event;
	initial
		#1 ->nl100l3_event;
	always @(nl100l3_event)
		nl100l3 <= {1{1'b1}};
	initial
		nl100l4 = 0;
	always @ ( posedge tx_clk_in)
		  nl100l4 <= nl100l3;
	initial
		nl101i10 = 0;
	always @ ( posedge tx_clk_in)
		  nl101i10 <= nl101i9;
	initial
		nl101i9 = 0;
	always @ ( posedge tx_clk_in)
		  nl101i9 <= nl101i10;
	event nl101i9_event;
	initial
		#1 ->nl101i9_event;
	always @(nl101i9_event)
		nl101i9 <= {1{1'b1}};
	initial
		nl101l7 = 0;
	always @ ( posedge tx_clk_in)
		  nl101l7 <= nl101l8;
	event nl101l7_event;
	initial
		#1 ->nl101l7_event;
	always @(nl101l7_event)
		nl101l7 <= {1{1'b1}};
	initial
		nl101l8 = 0;
	always @ ( posedge tx_clk_in)
		  nl101l8 <= nl101l7;
	initial
		nl101O5 = 0;
	always @ ( posedge tx_clk_in)
		  nl101O5 <= nl101O6;
	event nl101O5_event;
	initial
		#1 ->nl101O5_event;
	always @(nl101O5_event)
		nl101O5 <= {1{1'b1}};
	initial
		nl101O6 = 0;
	always @ ( posedge tx_clk_in)
		  nl101O6 <= nl101O5;
	initial
		nl10ii1 = 0;
	always @ ( posedge tx_clk_in)
		  nl10ii1 <= nl10ii2;
	event nl10ii1_event;
	initial
		#1 ->nl10ii1_event;
	always @(nl10ii1_event)
		nl10ii1 <= {1{1'b1}};
	initial
		nl10ii2 = 0;
	always @ ( posedge tx_clk_in)
		  nl10ii2 <= nl10ii1;
	initial
		nl110i23 = 0;
	always @ ( posedge tx_clk_in)
		  nl110i23 <= nl110i24;
	event nl110i23_event;
	initial
		#1 ->nl110i23_event;
	always @(nl110i23_event)
		nl110i23 <= {1{1'b1}};
	initial
		nl110i24 = 0;
	always @ ( posedge tx_clk_in)
		  nl110i24 <= nl110i23;
	initial
		nl110l21 = 0;
	always @ ( posedge tx_clk_in)
		  nl110l21 <= nl110l22;
	event nl110l21_event;
	initial
		#1 ->nl110l21_event;
	always @(nl110l21_event)
		nl110l21 <= {1{1'b1}};
	initial
		nl110l22 = 0;
	always @ ( posedge tx_clk_in)
		  nl110l22 <= nl110l21;
	initial
		nl110O19 = 0;
	always @ ( posedge tx_clk_in)
		  nl110O19 <= nl110O20;
	event nl110O19_event;
	initial
		#1 ->nl110O19_event;
	always @(nl110O19_event)
		nl110O19 <= {1{1'b1}};
	initial
		nl110O20 = 0;
	always @ ( posedge tx_clk_in)
		  nl110O20 <= nl110O19;
	initial
		nl11iO17 = 0;
	always @ ( posedge tx_clk_in)
		  nl11iO17 <= nl11iO18;
	event nl11iO17_event;
	initial
		#1 ->nl11iO17_event;
	always @(nl11iO17_event)
		nl11iO17 <= {1{1'b1}};
	initial
		nl11iO18 = 0;
	always @ ( posedge tx_clk_in)
		  nl11iO18 <= nl11iO17;
	initial
		nl11ll15 = 0;
	always @ ( posedge tx_clk_in)
		  nl11ll15 <= nl11ll16;
	event nl11ll15_event;
	initial
		#1 ->nl11ll15_event;
	always @(nl11ll15_event)
		nl11ll15 <= {1{1'b1}};
	initial
		nl11ll16 = 0;
	always @ ( posedge tx_clk_in)
		  nl11ll16 <= nl11ll15;
	initial
		nl11lO13 = 0;
	always @ ( posedge tx_clk_in)
		  nl11lO13 <= nl11lO14;
	event nl11lO13_event;
	initial
		#1 ->nl11lO13_event;
	always @(nl11lO13_event)
		nl11lO13 <= {1{1'b1}};
	initial
		nl11lO14 = 0;
	always @ ( posedge tx_clk_in)
		  nl11lO14 <= nl11lO13;
	initial
		nl11Ol11 = 0;
	always @ ( posedge tx_clk_in)
		  nl11Ol11 <= nl11Ol12;
	event nl11Ol11_event;
	initial
		#1 ->nl11Ol11_event;
	always @(nl11Ol11_event)
		nl11Ol11 <= {1{1'b1}};
	initial
		nl11Ol12 = 0;
	always @ ( posedge tx_clk_in)
		  nl11Ol12 <= nl11Ol11;
	initial
	begin
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11Ol = 0;
	end
	always @ ( posedge tx_clk_in or  negedge reset)
	begin
		if (reset == 1'b0) 
		begin
			n11iO <= 0;
			n11li <= 0;
			n11ll <= 0;
			n11lO <= 0;
			n11Ol <= 0;
		end
		else if  (atm_tx_port_load == 1'b1) 
		begin
			n11iO <= atm_tx_port[0];
			n11li <= atm_tx_port[1];
			n11ll <= atm_tx_port[2];
			n11lO <= atm_tx_port[3];
			n11Ol <= atm_tx_port[4];
		end
	end
	initial
	begin
		nl0ii = 0;
		nl0il = 0;
		nl0iO = 0;
		nl0li = 0;
		nl0lO = 0;
	end
	always @ (tx_clk_in or wire_nl0ll_PRN or reset)
	begin
		if (wire_nl0ll_PRN == 1'b0) 
		begin
			nl0ii <= 1;
			nl0il <= 1;
			nl0iO <= 1;
			nl0li <= 1;
			nl0lO <= 1;
		end
		else if  (reset == 1'b0) 
		begin
			nl0ii <= 0;
			nl0il <= 0;
			nl0iO <= 0;
			nl0li <= 0;
			nl0lO <= 0;
		end
		else if  (nl0Oi == 1'b0) 
		if (tx_clk_in != nl0ll_clk_prev && tx_clk_in == 1'b1) 
		begin
			nl0ii <= wire_niO1i_dataout;
			nl0il <= wire_niO1l_dataout;
			nl0iO <= wire_niO1O_dataout;
			nl0li <= wire_niO0i_dataout;
			nl0lO <= wire_niO0l_dataout;
		end
		nl0ll_clk_prev <= tx_clk_in;
	end
	assign
		wire_nl0ll_PRN = (nl11ll16 ^ nl11ll15);
	event nl0ii_event;
	event nl0il_event;
	event nl0iO_event;
	event nl0li_event;
	event nl0lO_event;
	initial
		#1 ->nl0ii_event;
	initial
		#1 ->nl0il_event;
	initial
		#1 ->nl0iO_event;
	initial
		#1 ->nl0li_event;
	initial
		#1 ->nl0lO_event;
	always @(nl0ii_event)
		nl0ii <= 1;
	always @(nl0il_event)
		nl0il <= 1;
	always @(nl0iO_event)
		nl0iO <= 1;
	always @(nl0li_event)
		nl0li <= 1;
	always @(nl0lO_event)
		nl0lO <= 1;
	initial
	begin
		nl0Oii = 0;
		nl0Oil = 0;
		nl0Oli = 0;
	end
	always @ (tx_clk_in or wire_nl0OiO_PRN or wire_nl0OiO_CLRN)
	begin
		if (wire_nl0OiO_PRN == 1'b0) 
		begin
			nl0Oii <= 1;
			nl0Oil <= 1;
			nl0Oli <= 1;
		end
		else if  (wire_nl0OiO_CLRN == 1'b0) 
		begin
			nl0Oii <= 0;
			nl0Oil <= 0;
			nl0Oli <= 0;
		end
		else if  (niO10i == 1'b1) 
		if (tx_clk_in != nl0OiO_clk_prev && tx_clk_in == 1'b1) 
		begin
			nl0Oii <= wire_nli1iO_o[0];
			nl0Oil <= wire_nli1iO_o[1];
			nl0Oli <= wire_nli1iO_o[2];
		end
		nl0OiO_clk_prev <= tx_clk_in;
	end
	assign
		wire_nl0OiO_CLRN = ((niO11l56 ^ niO11l55) & reset),
		wire_nl0OiO_PRN = (niO11i58 ^ niO11i57);
	initial
	begin
		nl0Ol = 0;
		nli1i = 0;
	end
	always @ (tx_clk_in or wire_nl0OO_PRN or wire_nl0OO_CLRN)
	begin
		if (wire_nl0OO_PRN == 1'b0) 
		begin
			nl0Ol <= 1;
			nli1i <= 1;
		end
		else if  (wire_nl0OO_CLRN == 1'b0) 
		begin
			nl0Ol <= 0;
			nli1i <= 0;
		end
		else if  (nl0Oi == 1'b1) 
		if (tx_clk_in != nl0OO_clk_prev && tx_clk_in == 1'b1) 
		begin
			nl0Ol <= ((nlilii & ((nli0i | nli1l) | (~ (nl11Ol12 ^ nl11Ol11)))) & (nl11lO14 ^ nl11lO13));
			nli1i <= (nli1l | (nli0i & (nlilil | nlilOO)));
		end
		nl0OO_clk_prev <= tx_clk_in;
	end
	assign
		wire_nl0OO_CLRN = ((nl101l8 ^ nl101l7) & reset),
		wire_nl0OO_PRN = (nl101i10 ^ nl101i9);
	initial
	begin
		nl0iOO = 0;
		nl0l0i = 0;
		nl0l0l = 0;
		nl0l0O = 0;
		nl0l1i = 0;
		nl0l1l = 0;
		nl0l1O = 0;
		nl0lii = 0;
		nl0lil = 0;
		nl0liO = 0;
		nl0lli = 0;
		nl0lll = 0;
		nl0llO = 0;
		nl0lOi = 0;
		nl0lOl = 0;
		nli10i = 0;
	end
	always @ ( posedge tx_clk_in or  negedge reset)
	begin
		if (reset == 1'b0) 
		begin
			nl0iOO <= 0;
			nl0l0i <= 0;
			nl0l0l <= 0;
			nl0l0O <= 0;
			nl0l1i <= 0;
			nl0l1l <= 0;
			nl0l1O <= 0;
			nl0lii <= 0;
			nl0lil <= 0;
			nl0liO <= 0;
			nl0lli <= 0;
			nl0lll <= 0;
			nl0llO <= 0;
			nl0lOi <= 0;
			nl0lOl <= 0;
			nli10i <= 0;
		end
		else if  (nl0O1O == 1'b1) 
		begin
			nl0iOO <= wire_nl01Ol_q_b[1];
			nl0l0i <= wire_nl01Ol_q_b[5];
			nl0l0l <= wire_nl01Ol_q_b[6];
			nl0l0O <= wire_nl01Ol_q_b[7];
			nl0l1i <= wire_nl01Ol_q_b[2];
			nl0l1l <= wire_nl01Ol_q_b[3];
			nl0l1O <= wire_nl01Ol_q_b[4];
			nl0lii <= wire_nl01Ol_q_b[8];
			nl0lil <= wire_nl01Ol_q_b[9];
			nl0liO <= wire_nl01Ol_q_b[10];
			nl0lli <= wire_nl01Ol_q_b[11];
			nl0lll <= wire_nl01Ol_q_b[12];
			nl0llO <= wire_nl01Ol_q_b[13];
			nl0lOi <= wire_nl01Ol_q_b[14];
			nl0lOl <= wire_nl01Ol_q_b[15];
			nli10i <= wire_nl01Ol_q_b[0];
		end
	end
	initial
	begin
		n100i = 0;
		n100l = 0;
		n100O = 0;
		n101i = 0;
		n101l = 0;
		n101O = 0;
		n10ii = 0;
		n10il = 0;
		n10iO = 0;
		n10li = 0;
		n10ll = 0;
		n10lO = 0;
		n10Oi = 0;
		n10Ol = 0;
		n10OO = 0;
		n11il = 0;
		n11OO = 0;
		n1i1i = 0;
		n1i1l = 0;
		niili = 0;
		nl010i = 0;
		nl010l = 0;
		nl010O = 0;
		nl011i = 0;
		nl011l = 0;
		nl011O = 0;
		nl01ii = 0;
		nl01il = 0;
		nl01iO = 0;
		nl01li = 0;
		nl01ll = 0;
		nl0O0i = 0;
		nl0O0l = 0;
		nl0O0O = 0;
		nl0O1O = 0;
		nl1i0i = 0;
		nl1i0l = 0;
		nl1i0O = 0;
		nl1i1O = 0;
		nl1iii = 0;
		nl1iil = 0;
		nl1O1i = 0;
		nl1Oil = 0;
		nl1OiO = 0;
		nl1Oli = 0;
		nl1Oll = 0;
		nl1OlO = 0;
		nl1OOi = 0;
		nl1OOl = 0;
		nl1OOO = 0;
		nli01i = 0;
		nli01l = 0;
		nli01O = 0;
		nli0i = 0;
		nli1l = 0;
		nlil0i = 0;
		nlil0l = 0;
		nlil0O = 0;
		nlil1O = 0;
		nlilii = 0;
		nlilil = 0;
		nlilOl = 0;
		nlilOO = 0;
		nliOil = 0;
		nliOli = 0;
		nliOll = 0;
		nliOlO = 0;
		nliOOi = 0;
	end
	always @ (tx_clk_in or wire_nli1O_PRN or reset)
	begin
		if (wire_nli1O_PRN == 1'b0) 
		begin
			n100i <= 1;
			n100l <= 1;
			n100O <= 1;
			n101i <= 1;
			n101l <= 1;
			n101O <= 1;
			n10ii <= 1;
			n10il <= 1;
			n10iO <= 1;
			n10li <= 1;
			n10ll <= 1;
			n10lO <= 1;
			n10Oi <= 1;
			n10Ol <= 1;
			n10OO <= 1;
			n11il <= 1;
			n11OO <= 1;
			n1i1i <= 1;
			n1i1l <= 1;
			niili <= 1;
			nl010i <= 1;
			nl010l <= 1;
			nl010O <= 1;
			nl011i <= 1;
			nl011l <= 1;
			nl011O <= 1;
			nl01ii <= 1;
			nl01il <= 1;
			nl01iO <= 1;
			nl01li <= 1;
			nl01ll <= 1;
			nl0O0i <= 1;
			nl0O0l <= 1;
			nl0O0O <= 1;
			nl0O1O <= 1;
			nl1i0i <= 1;
			nl1i0l <= 1;
			nl1i0O <= 1;
			nl1i1O <= 1;
			nl1iii <= 1;
			nl1iil <= 1;
			nl1O1i <= 1;
			nl1Oil <= 1;
			nl1OiO <= 1;
			nl1Oli <= 1;
			nl1Oll <= 1;
			nl1OlO <= 1;
			nl1OOi <= 1;
			nl1OOl <= 1;
			nl1OOO <= 1;
			nli01i <= 1;
			nli01l <= 1;
			nli01O <= 1;
			nli0i <= 1;
			nli1l <= 1;
			nlil0i <= 1;
			nlil0l <= 1;
			nlil0O <= 1;
			nlil1O <= 1;
			nlilii <= 1;
			nlilil <= 1;
			nlilOl <= 1;
			nlilOO <= 1;
			nliOil <= 1;
			nliOli <= 1;
			nliOll <= 1;
			nliOlO <= 1;
			nliOOi <= 1;
		end
		else if  (reset == 1'b0) 
		begin
			n100i <= 0;
			n100l <= 0;
			n100O <= 0;
			n101i <= 0;
			n101l <= 0;
			n101O <= 0;
			n10ii <= 0;
			n10il <= 0;
			n10iO <= 0;
			n10li <= 0;
			n10ll <= 0;
			n10lO <= 0;
			n10Oi <= 0;
			n10Ol <= 0;
			n10OO <= 0;
			n11il <= 0;
			n11OO <= 0;
			n1i1i <= 0;
			n1i1l <= 0;
			niili <= 0;
			nl010i <= 0;
			nl010l <= 0;
			nl010O <= 0;
			nl011i <= 0;
			nl011l <= 0;
			nl011O <= 0;
			nl01ii <= 0;
			nl01il <= 0;
			nl01iO <= 0;
			nl01li <= 0;
			nl01ll <= 0;
			nl0O0i <= 0;
			nl0O0l <= 0;
			nl0O0O <= 0;
			nl0O1O <= 0;
			nl1i0i <= 0;
			nl1i0l <= 0;
			nl1i0O <= 0;
			nl1i1O <= 0;
			nl1iii <= 0;
			nl1iil <= 0;
			nl1O1i <= 0;
			nl1Oil <= 0;
			nl1OiO <= 0;
			nl1Oli <= 0;
			nl1Oll <= 0;
			nl1OlO <= 0;
			nl1OOi <= 0;
			nl1OOl <= 0;
			nl1OOO <= 0;
			nli01i <= 0;
			nli01l <= 0;
			nli01O <= 0;
			nli0i <= 0;
			nli1l <= 0;
			nlil0i <= 0;
			nlil0l <= 0;
			nlil0O <= 0;
			nlil1O <= 0;
			nlilii <= 0;
			nlilil <= 0;
			nlilOl <= 0;
			nlilOO <= 0;
			nliOil <= 0;
			nliOli <= 0;
			nliOll <= 0;
			nliOlO <= 0;
			nliOOi <= 0;
		end
		else 
		if (tx_clk_in != nli1O_clk_prev && tx_clk_in == 1'b1) 
		begin
			n100i <= wire_nl00Oi_dataout;
			n100l <= wire_nl00Ol_dataout;
			n100O <= wire_nl00OO_dataout;
			n101i <= wire_nl00li_dataout;
			n101l <= wire_nl00ll_dataout;
			n101O <= wire_nl00lO_dataout;
			n10ii <= wire_nl0i1i_dataout;
			n10il <= wire_nl0i1l_dataout;
			n10iO <= wire_nl0i1O_dataout;
			n10li <= wire_nl0i0i_dataout;
			n10ll <= wire_nl0i0l_dataout;
			n10lO <= wire_nl0i0O_dataout;
			n10Oi <= wire_nl0iii_dataout;
			n10Ol <= wire_nl0iil_dataout;
			n10OO <= wire_nl0iiO_dataout;
			n11il <= wire_n1i1O_dataout;
			n11OO <= (~ niO01O);
			n1i1i <= wire_nl0ili_dataout;
			n1i1l <= wire_nll1ii_o;
			niili <= tx_clav;
			nl010i <= atm_tx_data[8];
			nl010l <= atm_tx_data[9];
			nl010O <= atm_tx_data[10];
			nl011i <= atm_tx_data[5];
			nl011l <= atm_tx_data[6];
			nl011O <= atm_tx_data[7];
			nl01ii <= atm_tx_data[11];
			nl01il <= atm_tx_data[12];
			nl01iO <= atm_tx_data[13];
			nl01li <= atm_tx_data[14];
			nl01ll <= atm_tx_data[15];
			nl0O0i <= wire_nl0OlO_dataout;
			nl0O0l <= wire_nl0OOi_dataout;
			nl0O0O <= wire_nl0OOl_dataout;
			nl0O1O <= wire_nll11l_dataout;
			nl1i0i <= wire_nl1ill_dataout;
			nl1i0l <= wire_nl1ilO_dataout;
			nl1i0O <= wire_nl1iOi_dataout;
			nl1i1O <= wire_nl1ili_dataout;
			nl1iii <= wire_nl1iOl_dataout;
			nl1iil <= wire_nl1lll_dataout;
			nl1O1i <= wire_nl1iiO_dataout;
			nl1Oil <= (~ nli01O);
			nl1OiO <= atm_tx_valid;
			nl1Oli <= atm_tx_soc;
			nl1Oll <= atm_tx_data[0];
			nl1OlO <= atm_tx_data[1];
			nl1OOi <= atm_tx_data[2];
			nl1OOl <= atm_tx_data[3];
			nl1OOO <= atm_tx_data[4];
			nli01i <= (wire_nll11l_dataout & ((~ wire_nl1liO_dataout) & (((~ wire_nl0ill_o[1]) & (~ wire_nl0ill_o[2])) & wire_nl0ill_o[3])));
			nli01l <= ((~ wire_nll11l_dataout) & (wire_nl1liO_dataout & ((wire_nl0ill_o[1] & wire_nl0ill_o[2]) & (~ wire_nl0ill_o[3]))));
			nli01O <= wire_nli00i_dataout;
			nli0i <= wire_nll1l_dataout;
			nli1l <= wire_nll1i_dataout;
			nlil0i <= wire_nll1iO_o;
			nlil0l <= wire_n110i_dataout;
			nlil0O <= wire_nll10O_dataout;
			nlil1O <= wire_nll1ll_o;
			nlilii <= wire_nll0ii_o;
			nlilil <= wire_nll10i_o;
			nlilOl <= wire_nll1Oi_o;
			nlilOO <= wire_nll0il_o;
			nliOil <= wire_nll1Ol_o;
			nliOli <= wire_nll01l_o;
			nliOll <= wire_nll01O_o;
			nliOlO <= wire_nll00i_o;
			nliOOi <= wire_nll00l_o;
		end
		nli1O_clk_prev <= tx_clk_in;
	end
	assign
		wire_nli1O_PRN = (nl101O6 ^ nl101O5);
	event n100i_event;
	event n100l_event;
	event n100O_event;
	event n101i_event;
	event n101l_event;
	event n101O_event;
	event n10ii_event;
	event n10il_event;
	event n10iO_event;
	event n10li_event;
	event n10ll_event;
	event n10lO_event;
	event n10Oi_event;
	event n10Ol_event;
	event n10OO_event;
	event n11il_event;
	event n11OO_event;
	event n1i1i_event;
	event n1i1l_event;
	event niili_event;
	event nl010i_event;
	event nl010l_event;
	event nl010O_event;
	event nl011i_event;
	event nl011l_event;
	event nl011O_event;
	event nl01ii_event;
	event nl01il_event;
	event nl01iO_event;
	event nl01li_event;
	event nl01ll_event;
	event nl0O0i_event;
	event nl0O0l_event;
	event nl0O0O_event;
	event nl0O1O_event;
	event nl1i0i_event;
	event nl1i0l_event;
	event nl1i0O_event;
	event nl1i1O_event;
	event nl1iii_event;
	event nl1iil_event;
	event nl1O1i_event;
	event nl1Oil_event;
	event nl1OiO_event;
	event nl1Oli_event;
	event nl1Oll_event;
	event nl1OlO_event;
	event nl1OOi_event;
	event nl1OOl_event;
	event nl1OOO_event;
	event nli01i_event;
	event nli01l_event;
	event nli01O_event;
	event nli0i_event;
	event nli1l_event;
	event nlil0i_event;
	event nlil0l_event;
	event nlil0O_event;
	event nlil1O_event;
	event nlilii_event;
	event nlilil_event;
	event nlilOl_event;
	event nlilOO_event;
	event nliOil_event;
	event nliOli_event;
	event nliOll_event;
	event nliOlO_event;
	event nliOOi_event;
	initial
		#1 ->n100i_event;
	initial
		#1 ->n100l_event;
	initial
		#1 ->n100O_event;
	initial
		#1 ->n101i_event;
	initial
		#1 ->n101l_event;
	initial
		#1 ->n101O_event;
	initial
		#1 ->n10ii_event;
	initial
		#1 ->n10il_event;
	initial
		#1 ->n10iO_event;
	initial
		#1 ->n10li_event;
	initial
		#1 ->n10ll_event;
	initial
		#1 ->n10lO_event;
	initial
		#1 ->n10Oi_event;
	initial
		#1 ->n10Ol_event;
	initial
		#1 ->n10OO_event;
	initial
		#1 ->n11il_event;
	initial
		#1 ->n11OO_event;
	initial
		#1 ->n1i1i_event;
	initial
		#1 ->n1i1l_event;
	initial
		#1 ->niili_event;
	initial
		#1 ->nl010i_event;
	initial
		#1 ->nl010l_event;
	initial
		#1 ->nl010O_event;
	initial
		#1 ->nl011i_event;
	initial
		#1 ->nl011l_event;
	initial
		#1 ->nl011O_event;
	initial
		#1 ->nl01ii_event;
	initial
		#1 ->nl01il_event;
	initial
		#1 ->nl01iO_event;
	initial
		#1 ->nl01li_event;
	initial
		#1 ->nl01ll_event;
	initial
		#1 ->nl0O0i_event;
	initial
		#1 ->nl0O0l_event;
	initial
		#1 ->nl0O0O_event;
	initial
		#1 ->nl0O1O_event;
	initial
		#1 ->nl1i0i_event;
	initial
		#1 ->nl1i0l_event;
	initial
		#1 ->nl1i0O_event;
	initial
		#1 ->nl1i1O_event;
	initial
		#1 ->nl1iii_event;
	initial
		#1 ->nl1iil_event;
	initial
		#1 ->nl1O1i_event;
	initial
		#1 ->nl1Oil_event;
	initial
		#1 ->nl1OiO_event;
	initial
		#1 ->nl1Oli_event;
	initial
		#1 ->nl1Oll_event;
	initial
		#1 ->nl1OlO_event;
	initial
		#1 ->nl1OOi_event;
	initial
		#1 ->nl1OOl_event;
	initial
		#1 ->nl1OOO_event;
	initial
		#1 ->nli01i_event;
	initial
		#1 ->nli01l_event;
	initial
		#1 ->nli01O_event;
	initial
		#1 ->nli0i_event;
	initial
		#1 ->nli1l_event;
	initial
		#1 ->nlil0i_event;
	initial
		#1 ->nlil0l_event;
	initial
		#1 ->nlil0O_event;
	initial
		#1 ->nlil1O_event;
	initial
		#1 ->nlilii_event;
	initial
		#1 ->nlilil_event;
	initial
		#1 ->nlilOl_event;
	initial
		#1 ->nlilOO_event;
	initial
		#1 ->nliOil_event;
	initial
		#1 ->nliOli_event;
	initial
		#1 ->nliOll_event;
	initial
		#1 ->nliOlO_event;
	initial
		#1 ->nliOOi_event;
	always @(n100i_event)
		n100i <= 1;
	always @(n100l_event)
		n100l <= 1;
	always @(n100O_event)
		n100O <= 1;
	always @(n101i_event)
		n101i <= 1;
	always @(n101l_event)
		n101l <= 1;
	always @(n101O_event)
		n101O <= 1;
	always @(n10ii_event)
		n10ii <= 1;
	always @(n10il_event)
		n10il <= 1;
	always @(n10iO_event)
		n10iO <= 1;
	always @(n10li_event)
		n10li <= 1;
	always @(n10ll_event)
		n10ll <= 1;
	always @(n10lO_event)
		n10lO <= 1;
	always @(n10Oi_event)
		n10Oi <= 1;
	always @(n10Ol_event)
		n10Ol <= 1;
	always @(n10OO_event)
		n10OO <= 1;
	always @(n11il_event)
		n11il <= 1;
	always @(n11OO_event)
		n11OO <= 1;
	always @(n1i1i_event)
		n1i1i <= 1;
	always @(n1i1l_event)
		n1i1l <= 1;
	always @(niili_event)
		niili <= 1;
	always @(nl010i_event)
		nl010i <= 1;
	always @(nl010l_event)
		nl010l <= 1;
	always @(nl010O_event)
		nl010O <= 1;
	always @(nl011i_event)
		nl011i <= 1;
	always @(nl011l_event)
		nl011l <= 1;
	always @(nl011O_event)
		nl011O <= 1;
	always @(nl01ii_event)
		nl01ii <= 1;
	always @(nl01il_event)
		nl01il <= 1;
	always @(nl01iO_event)
		nl01iO <= 1;
	always @(nl01li_event)
		nl01li <= 1;
	always @(nl01ll_event)
		nl01ll <= 1;
	always @(nl0O0i_event)
		nl0O0i <= 1;
	always @(nl0O0l_event)
		nl0O0l <= 1;
	always @(nl0O0O_event)
		nl0O0O <= 1;
	always @(nl0O1O_event)
		nl0O1O <= 1;
	always @(nl1i0i_event)
		nl1i0i <= 1;
	always @(nl1i0l_event)
		nl1i0l <= 1;
	always @(nl1i0O_event)
		nl1i0O <= 1;
	always @(nl1i1O_event)
		nl1i1O <= 1;
	always @(nl1iii_event)
		nl1iii <= 1;
	always @(nl1iil_event)
		nl1iil <= 1;
	always @(nl1O1i_event)
		nl1O1i <= 1;
	always @(nl1Oil_event)
		nl1Oil <= 1;
	always @(nl1OiO_event)
		nl1OiO <= 1;
	always @(nl1Oli_event)
		nl1Oli <= 1;
	always @(nl1Oll_event)
		nl1Oll <= 1;
	always @(nl1OlO_event)
		nl1OlO <= 1;
	always @(nl1OOi_event)
		nl1OOi <= 1;
	always @(nl1OOl_event)
		nl1OOl <= 1;
	always @(nl1OOO_event)
		nl1OOO <= 1;
	always @(nli01i_event)
		nli01i <= 1;
	always @(nli01l_event)
		nli01l <= 1;
	always @(nli01O_event)
		nli01O <= 1;
	always @(nli0i_event)
		nli0i <= 1;
	always @(nli1l_event)
		nli1l <= 1;
	always @(nlil0i_event)
		nlil0i <= 1;
	always @(nlil0l_event)
		nlil0l <= 1;
	always @(nlil0O_event)
		nlil0O <= 1;
	always @(nlil1O_event)
		nlil1O <= 1;
	always @(nlilii_event)
		nlilii <= 1;
	always @(nlilil_event)
		nlilil <= 1;
	always @(nlilOl_event)
		nlilOl <= 1;
	always @(nlilOO_event)
		nlilOO <= 1;
	always @(nliOil_event)
		nliOil <= 1;
	always @(nliOli_event)
		nliOli <= 1;
	always @(nliOll_event)
		nliOll <= 1;
	always @(nliOlO_event)
		nliOlO <= 1;
	always @(nliOOi_event)
		nliOOi <= 1;
	initial
	begin
		nliO0i = 0;
		nliO0l = 0;
		nliO1i = 0;
		nliO1l = 0;
		nliO1O = 0;
		nliOii = 0;
	end
	always @ ( posedge tx_clk_in or  negedge wire_nliO0O_CLRN)
	begin
		if (wire_nliO0O_CLRN == 1'b0) 
		begin
			nliO0i <= 0;
			nliO0l <= 0;
			nliO1i <= 0;
			nliO1l <= 0;
			nliO1O <= 0;
			nliOii <= 0;
		end
		else if  (nliOlO == 1'b1) 
		begin
			nliO0i <= wire_nllOiO_dataout;
			nliO0l <= wire_nllOli_dataout;
			nliO1i <= wire_nllO0O_dataout;
			nliO1l <= wire_nllOii_dataout;
			nliO1O <= wire_nllOil_dataout;
			nliOii <= wire_nllOll_dataout;
		end
	end
	assign
		wire_nliO0O_CLRN = ((niO10l54 ^ niO10l53) & reset);
	event nliO0i_event;
	event nliO0l_event;
	event nliO1i_event;
	event nliO1l_event;
	event nliO1O_event;
	event nliOii_event;
	initial
		#1 ->nliO0i_event;
	initial
		#1 ->nliO0l_event;
	initial
		#1 ->nliO1i_event;
	initial
		#1 ->nliO1l_event;
	initial
		#1 ->nliO1O_event;
	initial
		#1 ->nliOii_event;
	always @(nliO0i_event)
		nliO0i <= 1;
	always @(nliO0l_event)
		nliO0l <= 1;
	always @(nliO1i_event)
		nliO1i <= 1;
	always @(nliO1l_event)
		nliO1l <= 1;
	always @(nliO1O_event)
		nliO1O <= 1;
	always @(nliOii_event)
		nliOii <= 1;
	initial
	begin
		n0OOO = 0;
		nii0O = 0;
		niiii = 0;
		niiil = 0;
		niiiO = 0;
		nl0Oi = 0;
		nl0Oll = 0;
		nli0l = 0;
		nli0O = 0;
		nliii = 0;
		nliil = 0;
		nliiO = 0;
		nlili = 0;
		nliliO = 0;
		nlill = 0;
		nlilli = 0;
		nlilll = 0;
		nlillO = 0;
		nlilO = 0;
		nlilOi = 0;
		nliOi = 0;
		nliOiO = 0;
		nliOO = 0;
		nliOOl = 0;
	end
	always @ (tx_clk_in or reset or wire_nliOl_CLRN)
	begin
		if (reset == 1'b0) 
		begin
			n0OOO <= 1;
			nii0O <= 1;
			niiii <= 1;
			niiil <= 1;
			niiiO <= 1;
			nl0Oi <= 1;
			nl0Oll <= 1;
			nli0l <= 1;
			nli0O <= 1;
			nliii <= 1;
			nliil <= 1;
			nliiO <= 1;
			nlili <= 1;
			nliliO <= 1;
			nlill <= 1;
			nlilli <= 1;
			nlilll <= 1;
			nlillO <= 1;
			nlilO <= 1;
			nlilOi <= 1;
			nliOi <= 1;
			nliOiO <= 1;
			nliOO <= 1;
			nliOOl <= 1;
		end
		else if  (wire_nliOl_CLRN == 1'b0) 
		begin
			n0OOO <= 0;
			nii0O <= 0;
			niiii <= 0;
			niiil <= 0;
			niiiO <= 0;
			nl0Oi <= 0;
			nl0Oll <= 0;
			nli0l <= 0;
			nli0O <= 0;
			nliii <= 0;
			nliil <= 0;
			nliiO <= 0;
			nlili <= 0;
			nliliO <= 0;
			nlill <= 0;
			nlilli <= 0;
			nlilll <= 0;
			nlillO <= 0;
			nlilO <= 0;
			nlilOi <= 0;
			nliOi <= 0;
			nliOiO <= 0;
			nliOO <= 0;
			nliOOl <= 0;
		end
		else 
		if (tx_clk_in != nliOl_clk_prev && tx_clk_in == 1'b1) 
		begin
			n0OOO <= wire_niill_dataout;
			nii0O <= wire_niilO_dataout;
			niiii <= wire_niiOi_dataout;
			niiil <= wire_niiOl_dataout;
			niiiO <= wire_niiOO_dataout;
			nl0Oi <= (~ nl0Oi);
			nl0Oll <= wire_nl0OOO_dataout;
			nli0l <= wire_nllil_dataout;
			nli0O <= wire_nlliO_dataout;
			nliii <= wire_nllli_dataout;
			nliil <= wire_nllll_dataout;
			nliiO <= wire_nlllO_dataout;
			nlili <= wire_nll1O_dataout;
			nliliO <= wire_nll0iO_o;
			nlill <= wire_nll0i_dataout;
			nlilli <= wire_nll0li_o;
			nlilll <= wire_nll0ll_o;
			nlillO <= wire_nll0lO_o;
			nlilO <= wire_nll0l_dataout;
			nlilOi <= wire_nll0Oi_o;
			nliOi <= wire_nll0O_dataout;
			nliOiO <= wire_nll01i_o;
			nliOO <= wire_nllii_dataout;
			nliOOl <= wire_nll00O_o;
		end
		nliOl_clk_prev <= tx_clk_in;
	end
	assign
		wire_nliOl_CLRN = (nl100l4 ^ nl100l3);
	initial
	begin
		nl0lOO = 0;
		nl0O1i = 0;
		nl0O1l = 0;
		nll11i = 0;
	end
	always @ ( posedge tx_clk_in or  negedge wire_nliOOO_CLRN)
	begin
		if (wire_nliOOO_CLRN == 1'b0) 
		begin
			nl0lOO <= 0;
			nl0O1i <= 0;
			nl0O1l <= 0;
			nll11i <= 0;
		end
		else if  (wire_nll11l_dataout == 1'b1) 
		begin
			nl0lOO <= nl0Oii;
			nl0O1i <= nl0Oil;
			nl0O1l <= nl0Oli;
			nll11i <= (~ nl0Oll);
		end
	end
	assign
		wire_nliOOO_CLRN = ((niO10O52 ^ niO10O51) & reset);
	lpm_decode   n1iiO
	( 
	.data({niiiO, niiil, niiii, nii0O, n0OOO}),
	.enable(1'b1),
	.eq(wire_n1iiO_eq),
	.aclr(),
	.clken(),
	.clock()
	);
	defparam
		n1iiO.lpm_decodes = 32,
		n1iiO.lpm_pipeline = 0,
		n1iiO.lpm_width = 5;
	lpm_ff   n1ili
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0ill_dataout),
	.q(wire_n1ili_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1ili.lpm_fftype = "DFF",
		n1ili.lpm_width = 1;
	lpm_ff   n1ill
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0ilO_dataout),
	.q(wire_n1ill_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1ill.lpm_fftype = "DFF",
		n1ill.lpm_width = 1;
	lpm_ff   n1ilO
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0iOi_dataout),
	.q(wire_n1ilO_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1ilO.lpm_fftype = "DFF",
		n1ilO.lpm_width = 1;
	lpm_ff   n1iOi
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0iOl_dataout),
	.q(wire_n1iOi_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1iOi.lpm_fftype = "DFF",
		n1iOi.lpm_width = 1;
	lpm_ff   n1iOl
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0iOO_dataout),
	.q(wire_n1iOl_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1iOl.lpm_fftype = "DFF",
		n1iOl.lpm_width = 1;
	lpm_ff   n1iOO
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0l1i_dataout),
	.q(wire_n1iOO_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1iOO.lpm_fftype = "DFF",
		n1iOO.lpm_width = 1;
	lpm_ff   n1l0i
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0l0l_dataout),
	.q(wire_n1l0i_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1l0i.lpm_fftype = "DFF",
		n1l0i.lpm_width = 1;
	lpm_ff   n1l0l
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0l0O_dataout),
	.q(wire_n1l0l_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1l0l.lpm_fftype = "DFF",
		n1l0l.lpm_width = 1;
	lpm_ff   n1l0O
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lii_dataout),
	.q(wire_n1l0O_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1l0O.lpm_fftype = "DFF",
		n1l0O.lpm_width = 1;
	lpm_ff   n1l1i
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0l1l_dataout),
	.q(wire_n1l1i_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1l1i.lpm_fftype = "DFF",
		n1l1i.lpm_width = 1;
	lpm_ff   n1l1l
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0l1O_dataout),
	.q(wire_n1l1l_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1l1l.lpm_fftype = "DFF",
		n1l1l.lpm_width = 1;
	lpm_ff   n1l1O
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0l0i_dataout),
	.q(wire_n1l1O_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1l1O.lpm_fftype = "DFF",
		n1l1O.lpm_width = 1;
	lpm_ff   n1lii
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lil_dataout),
	.q(wire_n1lii_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lii.lpm_fftype = "DFF",
		n1lii.lpm_width = 1;
	lpm_ff   n1lil
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0liO_dataout),
	.q(wire_n1lil_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lil.lpm_fftype = "DFF",
		n1lil.lpm_width = 1;
	lpm_ff   n1liO
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lli_dataout),
	.q(wire_n1liO_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1liO.lpm_fftype = "DFF",
		n1liO.lpm_width = 1;
	lpm_ff   n1lli
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lll_dataout),
	.q(wire_n1lli_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lli.lpm_fftype = "DFF",
		n1lli.lpm_width = 1;
	lpm_ff   n1lll
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0llO_dataout),
	.q(wire_n1lll_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lll.lpm_fftype = "DFF",
		n1lll.lpm_width = 1;
	lpm_ff   n1llO
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lOi_dataout),
	.q(wire_n1llO_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1llO.lpm_fftype = "DFF",
		n1llO.lpm_width = 1;
	lpm_ff   n1lOi
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lOl_dataout),
	.q(wire_n1lOi_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lOi.lpm_fftype = "DFF",
		n1lOi.lpm_width = 1;
	lpm_ff   n1lOl
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0lOO_dataout),
	.q(wire_n1lOl_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lOl.lpm_fftype = "DFF",
		n1lOl.lpm_width = 1;
	lpm_ff   n1lOO
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0O1i_dataout),
	.q(wire_n1lOO_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1lOO.lpm_fftype = "DFF",
		n1lOO.lpm_width = 1;
	lpm_ff   n1O0i
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0O0l_dataout),
	.q(wire_n1O0i_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1O0i.lpm_fftype = "DFF",
		n1O0i.lpm_width = 1;
	lpm_ff   n1O0l
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0O0O_dataout),
	.q(wire_n1O0l_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1O0l.lpm_fftype = "DFF",
		n1O0l.lpm_width = 1;
	lpm_ff   n1O0O
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0Oii_dataout),
	.q(wire_n1O0O_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1O0O.lpm_fftype = "DFF",
		n1O0O.lpm_width = 1;
	lpm_ff   n1O1i
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0O1l_dataout),
	.q(wire_n1O1i_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1O1i.lpm_fftype = "DFF",
		n1O1i.lpm_width = 1;
	lpm_ff   n1O1l
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0O1O_dataout),
	.q(wire_n1O1l_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1O1l.lpm_fftype = "DFF",
		n1O1l.lpm_width = 1;
	lpm_ff   n1O1O
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0O0i_dataout),
	.q(wire_n1O1O_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1O1O.lpm_fftype = "DFF",
		n1O1O.lpm_width = 1;
	lpm_ff   n1Oii
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0Oil_dataout),
	.q(wire_n1Oii_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1Oii.lpm_fftype = "DFF",
		n1Oii.lpm_width = 1;
	lpm_ff   n1Oil
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0OiO_dataout),
	.q(wire_n1Oil_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1Oil.lpm_fftype = "DFF",
		n1Oil.lpm_width = 1;
	lpm_ff   n1OiO
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0Oli_dataout),
	.q(wire_n1OiO_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1OiO.lpm_fftype = "DFF",
		n1OiO.lpm_width = 1;
	lpm_ff   n1Oli
	( 
	.aclr((~ reset)),
	.aload(1'b0),
	.aset(1'b0),
	.clock(tx_clk_in),
	.data({wire_n0OOl_dataout}),
	.enable(wire_n0Oll_dataout),
	.q(wire_n1Oli_q),
	.sclr(1'b0),
	.sload(1'b0),
	.sset(1'b0));
	defparam
		n1Oli.lpm_fftype = "DFF",
		n1Oli.lpm_width = 1;
	and(wire_n0ill_dataout, wire_n1iiO_eq[0], ~{niOi1O});
	and(wire_n0ilO_dataout, wire_n1iiO_eq[1], ~{niOi1O});
	and(wire_n0iOi_dataout, wire_n1iiO_eq[2], ~{niOi1O});
	and(wire_n0iOl_dataout, wire_n1iiO_eq[3], ~{niOi1O});
	and(wire_n0iOO_dataout, wire_n1iiO_eq[4], ~{niOi1O});
	and(wire_n0l0i_dataout, wire_n1iiO_eq[8], ~{niOi1O});
	and(wire_n0l0l_dataout, wire_n1iiO_eq[9], ~{niOi1O});
	and(wire_n0l0O_dataout, wire_n1iiO_eq[10], ~{niOi1O});
	and(wire_n0l1i_dataout, wire_n1iiO_eq[5], ~{niOi1O});
	and(wire_n0l1l_dataout, wire_n1iiO_eq[6], ~{niOi1O});
	and(wire_n0l1O_dataout, wire_n1iiO_eq[7], ~{niOi1O});
	and(wire_n0lii_dataout, wire_n1iiO_eq[11], ~{niOi1O});
	and(wire_n0lil_dataout, wire_n1iiO_eq[12], ~{niOi1O});
	and(wire_n0liO_dataout, wire_n1iiO_eq[13], ~{niOi1O});
	and(wire_n0lli_dataout, wire_n1iiO_eq[14], ~{niOi1O});
	and(wire_n0lll_dataout, wire_n1iiO_eq[15], ~{niOi1O});
	and(wire_n0llO_dataout, wire_n1iiO_eq[16], ~{niOi1O});
	and(wire_n0lOi_dataout, wire_n1iiO_eq[17], ~{niOi1O});
	and(wire_n0lOl_dataout, wire_n1iiO_eq[18], ~{niOi1O});
	and(wire_n0lOO_dataout, wire_n1iiO_eq[19], ~{niOi1O});
	and(wire_n0O0i_dataout, wire_n1iiO_eq[23], ~{niOi1O});
	and(wire_n0O0l_dataout, wire_n1iiO_eq[24], ~{niOi1O});
	and(wire_n0O0O_dataout, wire_n1iiO_eq[25], ~{niOi1O});
	and(wire_n0O1i_dataout, wire_n1iiO_eq[20], ~{niOi1O});
	and(wire_n0O1l_dataout, wire_n1iiO_eq[21], ~{niOi1O});
	and(wire_n0O1O_dataout, wire_n1iiO_eq[22], ~{niOi1O});
	and(wire_n0Oii_dataout, wire_n1iiO_eq[26], ~{niOi1O});
	and(wire_n0Oil_dataout, wire_n1iiO_eq[27], ~{niOi1O});
	and(wire_n0OiO_dataout, wire_n1iiO_eq[28], ~{niOi1O});
	and(wire_n0Oli_dataout, wire_n1iiO_eq[29], ~{niOi1O});
	and(wire_n0Oll_dataout, wire_n1iiO_eq[30], ~{niOi1O});
	and(wire_n0OOl_dataout, wire_ni11i_dataout, nl0Oi);
	and(wire_n110i_dataout, (wire_ni10l_dataout & niO01l), n11il);
	and(wire_n110O_dataout, nlilii, ~{nlil0O});
	and(wire_n111l_dataout, nlilOO, ~{(nlil0l | nlilOl)});
	and(wire_n11ii_dataout, nlilOl, n11il);
	and(wire_n1i0i_dataout, n11il, ~{((~ nl0Oi) & nlilOl)});
	or(wire_n1i1O_dataout, wire_n1i0i_dataout, atm_tx_port_load);
	assign		wire_ni00i_dataout = (niOlll === 1'b1) ? wire_n1lll_q[0] : wire_ni00l_dataout;
	assign		wire_ni00l_dataout = (niOllO === 1'b1) ? wire_n1lli_q[0] : wire_ni00O_dataout;
	assign		wire_ni00O_dataout = (niOlOi === 1'b1) ? wire_n1liO_q[0] : wire_ni0ii_dataout;
	assign		wire_ni01i_dataout = (niOlil === 1'b1) ? wire_n1lOl_q[0] : wire_ni01l_dataout;
	assign		wire_ni01l_dataout = (niOliO === 1'b1) ? wire_n1lOi_q[0] : wire_ni01O_dataout;
	assign		wire_ni01O_dataout = (niOlli === 1'b1) ? wire_n1llO_q[0] : wire_ni00i_dataout;
	assign		wire_ni0ii_dataout = (niOlOl === 1'b1) ? wire_n1lil_q[0] : wire_ni0il_dataout;
	assign		wire_ni0il_dataout = (niOlOO === 1'b1) ? wire_n1lii_q[0] : wire_ni0iO_dataout;
	assign		wire_ni0iO_dataout = (niOO1i === 1'b1) ? wire_n1l0O_q[0] : wire_ni0li_dataout;
	assign		wire_ni0li_dataout = (niOO1l === 1'b1) ? wire_n1l0l_q[0] : wire_ni0ll_dataout;
	assign		wire_ni0ll_dataout = (niOO1O === 1'b1) ? wire_n1l0i_q[0] : wire_ni0lO_dataout;
	assign		wire_ni0lO_dataout = (niOO0i === 1'b1) ? wire_n1l1O_q[0] : wire_ni0Oi_dataout;
	assign		wire_ni0Oi_dataout = (niOO0l === 1'b1) ? wire_n1l1l_q[0] : wire_ni0Ol_dataout;
	assign		wire_ni0Ol_dataout = (niOO0O === 1'b1) ? wire_n1l1i_q[0] : wire_ni0OO_dataout;
	assign		wire_ni0OO_dataout = (niOOii === 1'b1) ? wire_n1iOO_q[0] : wire_nii1i_dataout;
	assign		wire_ni10l_dataout = (niOilO === 1'b1) ? wire_n1Oli_q[0] : wire_ni10O_dataout;
	assign		wire_ni10O_dataout = (niOiOi === 1'b1) ? wire_n1OiO_q[0] : wire_ni1ii_dataout;
	and(wire_ni11i_dataout, niili, (((~ nli1i) | ((nl0Ol | ((nli1i & nlilii) & (niOili30 ^ niOili29))) | (~ (niOiil32 ^ niOiil31)))) | (~ (niOi0O34 ^ niOi0O33))));
	assign		wire_ni1ii_dataout = (niOiOl === 1'b1) ? wire_n1Oil_q[0] : wire_ni1il_dataout;
	assign		wire_ni1il_dataout = (niOiOO === 1'b1) ? wire_n1Oii_q[0] : wire_ni1iO_dataout;
	assign		wire_ni1iO_dataout = (niOl1i === 1'b1) ? wire_n1O0O_q[0] : wire_ni1li_dataout;
	assign		wire_ni1li_dataout = (niOl1l === 1'b1) ? wire_n1O0l_q[0] : wire_ni1ll_dataout;
	assign		wire_ni1ll_dataout = (niOl1O === 1'b1) ? wire_n1O0i_q[0] : wire_ni1lO_dataout;
	assign		wire_ni1lO_dataout = (niOl0i === 1'b1) ? wire_n1O1O_q[0] : wire_ni1Oi_dataout;
	assign		wire_ni1Oi_dataout = (niOl0l === 1'b1) ? wire_n1O1l_q[0] : wire_ni1Ol_dataout;
	assign		wire_ni1Ol_dataout = (niOl0O === 1'b1) ? wire_n1O1i_q[0] : wire_ni1OO_dataout;
	assign		wire_ni1OO_dataout = (niOlii === 1'b1) ? wire_n1lOO_q[0] : wire_ni01i_dataout;
	assign		wire_nii0i_dataout = (niOOll === 1'b1) ? wire_n1ill_q[0] : wire_nii0l_dataout;
	and(wire_nii0l_dataout, wire_n1ili_q[0], niOOlO);
	assign		wire_nii1i_dataout = (niOOil === 1'b1) ? wire_n1iOl_q[0] : wire_nii1l_dataout;
	assign		wire_nii1l_dataout = (niOOiO === 1'b1) ? wire_n1iOi_q[0] : wire_nii1O_dataout;
	assign		wire_nii1O_dataout = (niOOli === 1'b1) ? wire_n1ilO_q[0] : wire_nii0i_dataout;
	assign		wire_niill_dataout = (nl0Oi === 1'b1) ? wire_nil1i_dataout : nli0l;
	assign		wire_niilO_dataout = (nl0Oi === 1'b1) ? wire_nil1l_dataout : nli0O;
	assign		wire_niiOi_dataout = (nl0Oi === 1'b1) ? wire_nil1O_dataout : nliii;
	assign		wire_niiOl_dataout = (nl0Oi === 1'b1) ? wire_nil0i_dataout : nliil;
	assign		wire_niiOO_dataout = (nl0Oi === 1'b1) ? wire_nil0l_dataout : nliiO;
	assign		wire_nil0i_dataout = (nlilOO === 1'b1) ? n11lO : nlillO;
	assign		wire_nil0l_dataout = (nlilOO === 1'b1) ? n11Ol : nlilOi;
	assign		wire_nil0O_dataout = (nlilOO === 1'b1) ? n11iO : wire_nilll_dataout;
	assign		wire_nil1i_dataout = (nlilOO === 1'b1) ? n11iO : nliliO;
	assign		wire_nil1l_dataout = (nlilOO === 1'b1) ? n11li : nlilli;
	assign		wire_nil1O_dataout = (nlilOO === 1'b1) ? n11ll : nlilll;
	assign		wire_nilii_dataout = (nlilOO === 1'b1) ? n11li : wire_nillO_dataout;
	assign		wire_nilil_dataout = (nlilOO === 1'b1) ? n11ll : wire_nilOi_dataout;
	assign		wire_niliO_dataout = (nlilOO === 1'b1) ? n11lO : wire_nilOl_dataout;
	assign		wire_nilli_dataout = (nlilOO === 1'b1) ? n11Ol : wire_nilOO_dataout;
	assign		wire_nilll_dataout = (nl100O === 1'b1) ? nliliO : nl0ii;
	assign		wire_nillO_dataout = (nl100O === 1'b1) ? nlilli : nl0il;
	assign		wire_nilOi_dataout = (nl100O === 1'b1) ? nlilll : nl0iO;
	assign		wire_nilOl_dataout = (nl100O === 1'b1) ? nlillO : nl0li;
	assign		wire_nilOO_dataout = (nl100O === 1'b1) ? nlilOi : nl0lO;
	assign		wire_niO0i_dataout = (nl11ii === 1'b1) ? wire_niOOl_dataout : wire_niOiO_dataout;
	assign		wire_niO0l_dataout = (nl11ii === 1'b1) ? wire_niOOO_dataout : wire_niOli_dataout;
	assign		wire_niO0O_dataout = (nlilOO === 1'b1) ? (~ n11iO) : nl0ii;
	assign		wire_niO1i_dataout = (nl11ii === 1'b1) ? wire_niOll_dataout : wire_niO0O_dataout;
	assign		wire_niO1l_dataout = (nl11ii === 1'b1) ? wire_niOlO_dataout : wire_niOii_dataout;
	assign		wire_niO1O_dataout = (nl11ii === 1'b1) ? wire_niOOi_dataout : wire_niOil_dataout;
	and(wire_niOii_dataout, nl0il, ~{nlilOO});
	and(wire_niOil_dataout, nl0iO, ~{nlilOO});
	and(wire_niOiO_dataout, nl0li, ~{nlilOO});
	and(wire_niOli_dataout, nl0lO, ~{nlilOO});
	assign		wire_niOll_dataout = (nlilOO === 1'b1) ? (~ n11iO) : wire_nl11i_dataout;
	and(wire_niOlO_dataout, wire_nl11l_dataout, ~{nlilOO});
	and(wire_niOOi_dataout, wire_nl11O_dataout, ~{nlilOO});
	and(wire_niOOl_dataout, wire_nl10i_dataout, ~{nlilOO});
	and(wire_niOOO_dataout, wire_nl10l_dataout, ~{nlilOO});
	assign		wire_nl00li_dataout = ((~ nl0O1O) === 1'b1) ? nli10i : wire_nl01Ol_q_b[0];
	assign		wire_nl00ll_dataout = ((~ nl0O1O) === 1'b1) ? nl0iOO : wire_nl01Ol_q_b[1];
	assign		wire_nl00lO_dataout = ((~ nl0O1O) === 1'b1) ? nl0l1i : wire_nl01Ol_q_b[2];
	assign		wire_nl00Oi_dataout = ((~ nl0O1O) === 1'b1) ? nl0l1l : wire_nl01Ol_q_b[3];
	assign		wire_nl00Ol_dataout = ((~ nl0O1O) === 1'b1) ? nl0l1O : wire_nl01Ol_q_b[4];
	assign		wire_nl00OO_dataout = ((~ nl0O1O) === 1'b1) ? nl0l0i : wire_nl01Ol_q_b[5];
	and(wire_nl01i_dataout, wire_nl01O_o[3], ~{nl111O});
	and(wire_nl01l_dataout, wire_nl01O_o[4], ~{nl111O});
	assign		wire_nl0i0i_dataout = ((~ nl0O1O) === 1'b1) ? nl0lil : wire_nl01Ol_q_b[9];
	assign		wire_nl0i0l_dataout = ((~ nl0O1O) === 1'b1) ? nl0liO : wire_nl01Ol_q_b[10];
	assign		wire_nl0i0O_dataout = ((~ nl0O1O) === 1'b1) ? nl0lli : wire_nl01Ol_q_b[11];
	assign		wire_nl0i1i_dataout = ((~ nl0O1O) === 1'b1) ? nl0l0l : wire_nl01Ol_q_b[6];
	assign		wire_nl0i1l_dataout = ((~ nl0O1O) === 1'b1) ? nl0l0O : wire_nl01Ol_q_b[7];
	assign		wire_nl0i1O_dataout = ((~ nl0O1O) === 1'b1) ? nl0lii : wire_nl01Ol_q_b[8];
	assign		wire_nl0iii_dataout = ((~ nl0O1O) === 1'b1) ? nl0lll : wire_nl01Ol_q_b[12];
	assign		wire_nl0iil_dataout = ((~ nl0O1O) === 1'b1) ? nl0llO : wire_nl01Ol_q_b[13];
	assign		wire_nl0iiO_dataout = ((~ nl0O1O) === 1'b1) ? nl0lOi : wire_nl01Ol_q_b[14];
	assign		wire_nl0ili_dataout = ((~ nl0O1O) === 1'b1) ? nl0lOl : wire_nl01Ol_q_b[15];
	assign		wire_nl0ilO_dataout = (wire_nll11l_dataout === 1'b1) ? nl0Oii : nl0lOO;
	assign		wire_nl0iOi_dataout = (wire_nll11l_dataout === 1'b1) ? nl0Oil : nl0O1i;
	assign		wire_nl0iOl_dataout = (wire_nll11l_dataout === 1'b1) ? nl0Oli : nl0O1l;
	assign		wire_nl0OlO_dataout = (wire_nl1liO_dataout === 1'b1) ? wire_nli10O_o[0] : nl0O0i;
	assign		wire_nl0OOi_dataout = (wire_nl1liO_dataout === 1'b1) ? wire_nli10O_o[1] : nl0O0l;
	assign		wire_nl0OOl_dataout = (wire_nl1liO_dataout === 1'b1) ? wire_nli10O_o[2] : nl0O0O;
	assign		wire_nl0OOO_dataout = (wire_nl1liO_dataout === 1'b1) ? wire_nli11i_dataout : wire_nli1ii_dataout;
	assign		wire_nl10i_dataout = (nl111i === 1'b1) ? wire_nl1iO_dataout : wire_nl01i_dataout;
	assign		wire_nl10l_dataout = (nl111i === 1'b1) ? wire_nl1li_dataout : wire_nl01l_dataout;
	and(wire_nl10O_dataout, wire_nl1ll_o[0], ~{niOOOi});
	assign		wire_nl11i_dataout = (nl111i === 1'b1) ? wire_nl10O_dataout : wire_nl1Oi_dataout;
	assign		wire_nl11l_dataout = (nl111i === 1'b1) ? wire_nl1ii_dataout : wire_nl1Ol_dataout;
	assign		wire_nl11O_dataout = (nl111i === 1'b1) ? wire_nl1il_dataout : wire_nl1OO_dataout;
	and(wire_nl1ii_dataout, wire_nl1ll_o[1], ~{niOOOi});
	and(wire_nl1iiO_dataout, wire_nl1iOO_dataout, ~{wire_nl1lii_dataout});
	and(wire_nl1il_dataout, wire_nl1ll_o[2], ~{niOOOi});
	and(wire_nl1ili_dataout, wire_nl1l1i_dataout, ~{wire_nl1lii_dataout});
	and(wire_nl1ill_dataout, wire_nl1l1l_dataout, ~{wire_nl1lii_dataout});
	and(wire_nl1ilO_dataout, wire_nl1l1O_dataout, ~{wire_nl1lii_dataout});
	and(wire_nl1iO_dataout, wire_nl1ll_o[3], ~{niOOOi});
	and(wire_nl1iOi_dataout, wire_nl1l0i_dataout, ~{wire_nl1lii_dataout});
	and(wire_nl1iOl_dataout, wire_nl1l0l_dataout, ~{wire_nl1lii_dataout});
	assign		wire_nl1iOO_dataout = (wire_nl1lil_dataout === 1'b1) ? wire_nl1l0O_o[0] : nl1O1i;
	assign		wire_nl1l0i_dataout = (wire_nl1lil_dataout === 1'b1) ? wire_nl1l0O_o[4] : nl1i0O;
	assign		wire_nl1l0l_dataout = (wire_nl1lil_dataout === 1'b1) ? wire_nl1l0O_o[5] : nl1iii;
	assign		wire_nl1l1i_dataout = (wire_nl1lil_dataout === 1'b1) ? wire_nl1l0O_o[1] : nl1i1O;
	assign		wire_nl1l1l_dataout = (wire_nl1lil_dataout === 1'b1) ? wire_nl1l0O_o[2] : nl1i0i;
	assign		wire_nl1l1O_dataout = (wire_nl1lil_dataout === 1'b1) ? wire_nl1l0O_o[3] : nl1i0l;
	and(wire_nl1li_dataout, wire_nl1ll_o[4], ~{niOOOi});
	and(wire_nl1lii_dataout, wire_nl1llO_dataout, wire_nl1lli_o[1]);
	assign		wire_nl1lil_dataout = (wire_nl1lli_o[1] === 1'b1) ? wire_nl1lOi_dataout : nilOOl;
	assign		wire_nl1liO_dataout = (wire_nl1lli_o[1] === 1'b1) ? wire_nl1lOl_dataout : wire_nl1O0l_dataout;
	assign		wire_nl1lll_dataout = (wire_nl1lli_o[1] === 1'b1) ? wire_nl1lOO_dataout : wire_nl1O0O_dataout;
	and(wire_nl1llO_dataout, nilOll, nilOOO);
	and(wire_nl1lOi_dataout, (~ nilOlO), nilOOO);
	and(wire_nl1lOl_dataout, wire_nl1O1l_dataout, nilOOO);
	assign		wire_nl1lOO_dataout = (nilOOO === 1'b1) ? wire_nl1O1O_dataout : nl1iil;
	and(wire_nl1O0l_dataout, nilOOO, nilOOl);
	or(wire_nl1O0O_dataout, nl1iil, nilOOl);
	and(wire_nl1O1l_dataout, nilOOO, ~{nilOlO});
	and(wire_nl1O1O_dataout, nl1iil, ~{nilOlO});
	and(wire_nl1Oi_dataout, wire_nl01O_o[0], ~{nl111O});
	and(wire_nl1Ol_dataout, wire_nl01O_o[1], ~{nl111O});
	and(wire_nl1OO_dataout, wire_nl01O_o[2], ~{nl111O});
	or(wire_nli00i_dataout, wire_nli00l_dataout, nli01l);
	and(wire_nli00l_dataout, nli01O, ~{nli01i});
	assign		wire_nli11i_dataout = (((~ wire_nll11l_dataout) & niO11O) === 1'b1) ? wire_nli1ii_dataout : wire_nli11l_dataout;
	and(wire_nli11l_dataout, wire_nli1ii_dataout, niO11O);
	assign		wire_nli1ii_dataout = (niO10i === 1'b1) ? wire_nli1il_dataout : nl0Oll;
	or(wire_nli1il_dataout, nl0Oll, ((~ wire_nl1liO_dataout) & ((((nl0Oii & nl0Oil) & nl0Oli) & (((~ nl0O0i) & (~ nl0O0l)) & (~ nl0O0O))) | ((((~ (nl0O0i ^ wire_nli1iO_o[0])) & (~ (nl0O0l ^ wire_nli1iO_o[1]))) & (~ (nl0O0O ^ wire_nli1iO_o[2]))) & (~ wire_nli1iO_o[3])))));
	or(wire_nll0i_dataout, wire_nilii_dataout, nl0Oi);
	or(wire_nll0l_dataout, wire_nilil_dataout, nl0Oi);
	or(wire_nll0O_dataout, wire_niliO_dataout, nl0Oi);
	assign		wire_nll0OO_dataout = (niO1iO === 1'b1) ? wire_nlliiO_dataout : nlil0i;
	and(wire_nll10O_dataout, wire_nllO1l_dataout, nliOlO);
	or(wire_nll11l_dataout, (~ wire_nll01i_o), ((~ nll11i) & (~ nl0Oll)));
	and(wire_nll1i_dataout, wire_nllOi_dataout, ~{nl0Oi});
	and(wire_nll1l_dataout, wire_nllOl_dataout, ~{nl0Oi});
	or(wire_nll1O_dataout, wire_nil0O_dataout, nl0Oi);
	or(wire_nlli0i_dataout, nliOlO, niO1iO);
	and(wire_nlli0l_dataout, nliOOi, ~{niO1iO});
	and(wire_nlli0O_dataout, nliOOl, ~{niO1iO});
	and(wire_nlli1i_dataout, n1i1l, ~{niO1iO});
	and(wire_nlli1l_dataout, nliOli, ~{niO1iO});
	and(wire_nlli1O_dataout, nliOll, ~{niO1iO});
	or(wire_nllii_dataout, wire_nilli_dataout, nl0Oi);
	and(wire_nlliii_dataout, nliOiO, ~{niO1iO});
	and(wire_nlliil_dataout, nlilil, ~{niO1iO});
	or(wire_nlliiO_dataout, nlil0i, (nlil1O & (~ n1i1l)));
	assign		wire_nllil_dataout = (nl0Oi === 1'b1) ? nli0l : wire_nil0O_dataout;
	or(wire_nllilO_dataout, nliOli, niO1li);
	assign		wire_nlliO_dataout = (nl0Oi === 1'b1) ? nli0O : wire_nilii_dataout;
	and(wire_nlliOi_dataout, nliOll, ~{niO1li});
	and(wire_nlliOl_dataout, nliOlO, ~{niO1li});
	and(wire_nlliOO_dataout, nliOOi, ~{niO1li});
	or(wire_nlll0i_dataout, nlil1O, nlil0i);
	assign		wire_nlll0l_dataout = ((~ nliOiO) === 1'b1) ? wire_nllOlO_dataout : nliliO;
	assign		wire_nlll0O_dataout = ((~ nliOiO) === 1'b1) ? wire_nllOOi_dataout : nlilli;
	and(wire_nlll1i_dataout, nliOOl, ~{niO1li});
	or(wire_nlll1l_dataout, nlilil, niO1li);
	assign		wire_nllli_dataout = (nl0Oi === 1'b1) ? nliii : wire_nilil_dataout;
	assign		wire_nlllii_dataout = ((~ nliOiO) === 1'b1) ? wire_nllOOl_dataout : nlilll;
	assign		wire_nlllil_dataout = ((~ nliOiO) === 1'b1) ? wire_nllOOO_dataout : nlillO;
	assign		wire_nllliO_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO11i_dataout : nlilOi;
	assign		wire_nllll_dataout = (nl0Oi === 1'b1) ? nliil : wire_niliO_dataout;
	assign		wire_nlllli_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO11O_dataout : wire_n11ii_dataout;
	and(wire_nlllll_dataout, wire_nlO10i_dataout, (~ nliOiO));
	assign		wire_nllllO_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO10l_dataout : wire_nlOiii_dataout;
	assign		wire_nlllO_dataout = (nl0Oi === 1'b1) ? nliiO : wire_nilli_dataout;
	assign		wire_nlllOi_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO10O_dataout : wire_nlOiil_dataout;
	assign		wire_nlllOl_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1ii_dataout : wire_nlOiiO_dataout;
	assign		wire_nlllOO_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1il_dataout : wire_nlOili_dataout;
	assign		wire_nllO0i_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1ll_dataout : wire_nlOilO_dataout;
	assign		wire_nllO0l_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO11l_dataout : wire_n111l_dataout;
	assign		wire_nllO0O_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1lO_dataout : nliO1i;
	assign		wire_nllO1i_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1iO_dataout : wire_nlOill_dataout;
	and(wire_nllO1l_dataout, niO1ll, (~ nliOiO));
	assign		wire_nllO1O_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1li_dataout : wire_nlOl0O_dataout;
	and(wire_nllOi_dataout, nlil0i, ~{nlilOO});
	assign		wire_nllOii_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1Oi_dataout : nliO1l;
	assign		wire_nllOil_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1Ol_dataout : nliO1O;
	assign		wire_nllOiO_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO1OO_dataout : nliO0i;
	assign		wire_nllOl_dataout = (nlilOO === 1'b1) ? wire_ni10l_dataout : nlilil;
	assign		wire_nllOli_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO01i_dataout : nliO0l;
	assign		wire_nllOll_dataout = ((~ nliOiO) === 1'b1) ? wire_nlO01l_dataout : nliOii;
	assign		wire_nllOlO_dataout = (niO1ll === 1'b1) ? wire_nlO01O_dataout : nliliO;
	assign		wire_nllOOi_dataout = (niO1ll === 1'b1) ? wire_nlO00i_dataout : nlilli;
	assign		wire_nllOOl_dataout = (niO1ll === 1'b1) ? wire_nlO00l_dataout : nlilll;
	assign		wire_nllOOO_dataout = (niO1ll === 1'b1) ? wire_nlO00O_dataout : nlillO;
	or(wire_nlO00i_dataout, nlilli, ~{nll11i});
	or(wire_nlO00l_dataout, nlilll, ~{nll11i});
	or(wire_nlO00O_dataout, nlillO, ~{nll11i});
	and(wire_nlO01i_dataout, wire_nlOi0l_o[4], ~{niO1ll});
	and(wire_nlO01l_dataout, wire_nlOi0l_o[5], ~{niO1ll});
	or(wire_nlO01O_dataout, nliliO, ~{nll11i});
	or(wire_nlO0ii_dataout, nlilOi, ~{nll11i});
	and(wire_nlO0il_dataout, wire_nlOi1l_dataout, nll11i);
	assign		wire_nlO0iO_dataout = (nll11i === 1'b1) ? wire_nlO0Ol_dataout : wire_nlOi1i_dataout;
	assign		wire_nlO0li_dataout = (nll11i === 1'b1) ? wire_nlO0OO_dataout : wire_n11ii_dataout;
	or(wire_nlO0ll_dataout, (~ nlil0l), ~{nll11i});
	and(wire_nlO0lO_dataout, nlil0l, nll11i);
	and(wire_nlO0Oi_dataout, (~ nlil0l), nll11i);
	and(wire_nlO0Ol_dataout, wire_nlOi1i_dataout, ~{nlil0l});
	or(wire_nlO0OO_dataout, wire_n11ii_dataout, nlil0l);
	and(wire_nlO10i_dataout, wire_nlO0lO_dataout, niO1ll);
	and(wire_nlO10l_dataout, wire_nlOiii_dataout, ~{niO1ll});
	and(wire_nlO10O_dataout, wire_nlOiil_dataout, ~{niO1ll});
	assign		wire_nlO11i_dataout = (niO1ll === 1'b1) ? wire_nlO0ii_dataout : nlilOi;
	assign		wire_nlO11l_dataout = (niO1ll === 1'b1) ? wire_nlO0il_dataout : wire_nlOi1l_dataout;
	assign		wire_nlO11O_dataout = (niO1ll === 1'b1) ? wire_nlO0li_dataout : wire_n11ii_dataout;
	assign		wire_nlO1ii_dataout = (niO1ll === 1'b1) ? wire_nlO0lO_dataout : wire_nlOiiO_dataout;
	assign		wire_nlO1il_dataout = (niO1ll === 1'b1) ? wire_nlO0Oi_dataout : wire_nlOili_dataout;
	assign		wire_nlO1iO_dataout = (niO1ll === 1'b1) ? (~ nll11i) : wire_nlOill_dataout;
	assign		wire_nlO1li_dataout = (niO1ll === 1'b1) ? wire_nlO0iO_dataout : wire_nlOl0O_dataout;
	assign		wire_nlO1ll_dataout = (niO1ll === 1'b1) ? wire_nlO0ll_dataout : wire_nlOilO_dataout;
	and(wire_nlO1lO_dataout, wire_nlOi0l_o[0], ~{niO1ll});
	and(wire_nlO1Oi_dataout, wire_nlOi0l_o[1], ~{niO1ll});
	and(wire_nlO1Ol_dataout, wire_nlOi0l_o[2], ~{niO1ll});
	and(wire_nlO1OO_dataout, wire_nlOi0l_o[3], ~{niO1ll});
	assign		wire_nlOi0O_dataout = (niO1Oi === 1'b1) ? n1i1l : wire_nlOiOi_dataout;
	and(wire_nlOi1i_dataout, wire_nlOl0O_dataout, nl0Oi);
	or(wire_nlOi1l_dataout, wire_n111l_dataout, ((~ nlil0l) & (n11il & niO1lO)));
	assign		wire_nlOiii_dataout = (niO1Oi === 1'b1) ? nliOli : wire_nlOiOl_dataout;
	assign		wire_nlOiil_dataout = (niO1Oi === 1'b1) ? nliOll : wire_nlOiOO_dataout;
	assign		wire_nlOiiO_dataout = (niO1Oi === 1'b1) ? nliOlO : wire_nlOl1i_dataout;
	assign		wire_nlOili_dataout = (niO1Oi === 1'b1) ? nliOOi : wire_nlOl1l_dataout;
	assign		wire_nlOill_dataout = (niO1Oi === 1'b1) ? nliOOl : wire_nlOl1O_dataout;
	or(wire_nlOilO_dataout, (~ nll11i), niO1Oi);
	assign		wire_nlOiOi_dataout = (nll11i === 1'b1) ? n1i1l : niO1Ol;
	and(wire_nlOiOl_dataout, nliOli, nll11i);
	or(wire_nlOiOO_dataout, nliOll, ~{nll11i});
	or(wire_nlOl0O_dataout, wire_n110O_dataout, (nlil0i & (~ wire_nlOlil_dataout)));
	and(wire_nlOl1i_dataout, nliOlO, nll11i);
	and(wire_nlOl1l_dataout, nliOOi, nll11i);
	and(wire_nlOl1O_dataout, nliOOl, nll11i);
	and(wire_nlOlil_dataout, wire_nlOliO_dataout, nlil1O);
	or(wire_nlOliO_dataout, nlil0i, (nll11i & nlil1O));
	and(wire_nlOlll_dataout, wire_nlOllO_dataout, ~{nlil0i});
	or(wire_nlOllO_dataout, nlil1O, niO1Ol);
	assign		wire_nlOlOi_dataout = (niO1OO === 1'b1) ? n11iO : nliliO;
	assign		wire_nlOlOl_dataout = (niO1OO === 1'b1) ? n11li : nlilli;
	assign		wire_nlOlOO_dataout = (niO1OO === 1'b1) ? n11ll : nlilll;
	or(wire_nlOO0i_dataout, nliOil, niO1OO);
	and(wire_nlOO0l_dataout, nliOli, ~{niO1OO});
	and(wire_nlOO0O_dataout, nliOll, ~{niO1OO});
	assign		wire_nlOO1i_dataout = (niO1OO === 1'b1) ? n11lO : nlillO;
	assign		wire_nlOO1l_dataout = (niO1OO === 1'b1) ? n11Ol : nlilOi;
	or(wire_nlOO1O_dataout, wire_n11ii_dataout, niO1OO);
	or(wire_nlOOii_dataout, nliOlO, niO1OO);
	and(wire_nlOOil_dataout, nliOOi, ~{niO1OO});
	and(wire_nlOOiO_dataout, nliOOl, ~{niO1OO});
	and(wire_nlOOll_dataout, nliOli, ~{niO01i});
	and(wire_nlOOlO_dataout, nliOll, ~{niO01i});
	and(wire_nlOOOi_dataout, nliOlO, ~{niO01i});
	or(wire_nlOOOl_dataout, nliOOi, niO01i);
	and(wire_nlOOOO_dataout, nliOOl, ~{niO01i});
	oper_add   n1iii
	( 
	.a({wire_n1iil_o[2], {2{(~ wire_n1iil_o[2])}}, wire_n1iil_o[1:0], 1'b0, 1'b1}),
	.b({{5{1'b1}}, 1'b0, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1iii_o));
	defparam
		n1iii.sgate_representation = 0,
		n1iii.width_a = 7,
		n1iii.width_b = 7,
		n1iii.width_o = 7;
	oper_add   n1iil
	( 
	.a({3{1'b0}}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n1iil_o));
	defparam
		n1iil.sgate_representation = 0,
		n1iil.width_a = 3,
		n1iil.width_b = 3,
		n1iil.width_o = 3;
	oper_add   nl01lO
	( 
	.a({3{1'b0}}),
	.b({{2{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl01lO_o));
	defparam
		nl01lO.sgate_representation = 0,
		nl01lO.width_a = 3,
		nl01lO.width_b = 3,
		nl01lO.width_o = 3;
	oper_add   nl01O
	( 
	.a({nl0lO, ((nl110i24 ^ nl110i23) & nl0li), nl0iO, ((nl110l22 ^ nl110l21) & nl0il), ((nl110O20 ^ nl110O19) & nl0ii)}),
	.b({{4{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl01O_o));
	defparam
		nl01O.sgate_representation = 0,
		nl01O.width_a = 5,
		nl01O.width_b = 5,
		nl01O.width_o = 5;
	oper_add   nl0ill
	( 
	.a({nl0O0O, nl0O0l, nl0O0i, 1'b1}),
	.b({(~ nl0Oli), (~ nl0Oil), (~ nl0Oii), 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl0ill_o));
	defparam
		nl0ill.sgate_representation = 0,
		nl0ill.width_a = 4,
		nl0ill.width_b = 4,
		nl0ill.width_o = 4;
	oper_add   nl1l0O
	( 
	.a({nl1iii, nl1i0O, nl1i0l, nl1i0i, nl1i1O, nl1O1i}),
	.b({{5{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl1l0O_o));
	defparam
		nl1l0O.sgate_representation = 0,
		nl1l0O.width_a = 6,
		nl1l0O.width_b = 6,
		nl1l0O.width_o = 6;
	oper_add   nl1ll
	( 
	.a({((niOOOl28 ^ niOOOl27) & wire_nl01l_dataout), ((niOOOO26 ^ niOOOO25) & wire_nl01i_dataout), wire_nl1OO_dataout, wire_nl1Ol_dataout, wire_nl1Oi_dataout}),
	.b({{4{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nl1ll_o));
	defparam
		nl1ll.sgate_representation = 0,
		nl1ll.width_a = 5,
		nl1ll.width_b = 5,
		nl1ll.width_o = 5;
	oper_add   nli10O
	( 
	.a({1'b0, nl0O0O, nl0O0l, nl0O0i}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli10O_o));
	defparam
		nli10O.sgate_representation = 0,
		nli10O.width_a = 4,
		nli10O.width_b = 4,
		nli10O.width_o = 4;
	oper_add   nli1iO
	( 
	.a({1'b0, nl0Oli, nl0Oil, nl0Oii}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nli1iO_o));
	defparam
		nli1iO.sgate_representation = 0,
		nli1iO.width_a = 4,
		nli1iO.width_b = 4,
		nli1iO.width_o = 4;
	oper_add   nlOi0l
	( 
	.a({nliOii, nliO0l, nliO0i, nliO1O, nliO1l, nliO1i}),
	.b({{5{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nlOi0l_o));
	defparam
		nlOi0l.sgate_representation = 0,
		nlOi0l.width_a = 6,
		nlOi0l.width_b = 6,
		nlOi0l.width_o = 6;
	oper_decoder   nl1lli
	( 
	.i({nl1iil}),
	.o(wire_nl1lli_o));
	defparam
		nl1lli.width_i = 1,
		nl1lli.width_o = 2;
	oper_selector   nll00i
	( 
	.data({wire_nlOOOi_dataout, wire_nlOOii_dataout, wire_nlllOl_dataout, wire_nlliOl_dataout, wire_nlli0i_dataout}),
	.o(wire_nll00i_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll00i.width_data = 5,
		nll00i.width_sel = 5;
	oper_selector   nll00l
	( 
	.data({wire_nlOOOl_dataout, wire_nlOOil_dataout, wire_nlllOO_dataout, wire_nlliOO_dataout, wire_nlli0l_dataout}),
	.o(wire_nll00l_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll00l.width_data = 5,
		nll00l.width_sel = 5;
	oper_selector   nll00O
	( 
	.data({wire_nlOOOO_dataout, wire_nlOOiO_dataout, wire_nllO1i_dataout, wire_nlll1i_dataout, wire_nlli0O_dataout}),
	.o(wire_nll00O_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll00O.width_data = 5,
		nll00O.width_sel = 5;
	oper_selector   nll01i
	( 
	.data({nliOiO, (~ niO1OO), wire_nllO0i_dataout, 1'b1, wire_nlliii_dataout}),
	.o(wire_nll01i_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll01i.width_data = 5,
		nll01i.width_sel = 5;
	oper_selector   nll01l
	( 
	.data({wire_nlOOll_dataout, wire_nlOO0l_dataout, wire_nllllO_dataout, wire_nllilO_dataout, wire_nlli1l_dataout}),
	.o(wire_nll01l_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll01l.width_data = 5,
		nll01l.width_sel = 5;
	oper_selector   nll01O
	( 
	.data({wire_nlOOlO_dataout, wire_nlOO0O_dataout, wire_nlllOi_dataout, wire_nlliOi_dataout, wire_nlli1O_dataout}),
	.o(wire_nll01O_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll01O.width_data = 5,
		nll01O.width_sel = 5;
	oper_selector   nll0ii
	( 
	.data({wire_nllO1O_dataout, wire_n110O_dataout}),
	.o(wire_nll0ii_o),
	.sel({nliOlO, (~ nliOlO)}));
	defparam
		nll0ii.width_data = 2,
		nll0ii.width_sel = 2;
	oper_selector   nll0il
	( 
	.data({niO01i, (~ niO1OO), wire_nllO0l_dataout, 1'b0, wire_n111l_dataout}),
	.o(wire_nll0il_o),
	.sel({nliOOl, nliOOi, nliOlO, nliOll, nliOli}));
	defparam
		nll0il.width_data = 5,
		nll0il.width_sel = 5;
	oper_selector   nll0iO
	( 
	.data({1'b1, wire_nlOlOi_dataout, wire_nlll0l_dataout, nliliO}),
	.o(wire_nll0iO_o),
	.sel({nliOOl, nliOOi, nliOlO, niO1il}));
	defparam
		nll0iO.width_data = 4,
		nll0iO.width_sel = 4;
	oper_selector   nll0li
	( 
	.data({1'b1, wire_nlOlOl_dataout, wire_nlll0O_dataout, nlilli}),
	.o(wire_nll0li_o),
	.sel({nliOOl, nliOOi, nliOlO, niO1il}));
	defparam
		nll0li.width_data = 4,
		nll0li.width_sel = 4;
	oper_selector   nll0ll
	( 
	.data({1'b1, wire_nlOlOO_dataout, wire_nlllii_dataout, nlilll}),
	.o(wire_nll0ll_o),
	.sel({nliOOl, nliOOi, nliOlO, niO1il}));
	defparam
		nll0ll.width_data = 4,
		nll0ll.width_sel = 4;
	oper_selector   nll0lO
	( 
	.data({1'b1, wire_nlOO1i_dataout, wire_nlllil_dataout, nlillO}),
	.o(wire_nll0lO_o),
	.sel({nliOOl, nliOOi, nliOlO, niO1il}));
	defparam
		nll0lO.width_data = 4,
		nll0lO.width_sel = 4;
	oper_selector   nll0Oi
	( 
	.data({1'b1, wire_nlOO1l_dataout, wire_nllliO_dataout, nlilOi}),
	.o(wire_nll0Oi_o),
	.sel({nliOOl, nliOOi, nliOlO, niO1il}));
	defparam
		nll0Oi.width_data = 4,
		nll0Oi.width_sel = 4;
	oper_selector   nll10i
	( 
	.data({nlilil, wire_nlll1l_dataout, wire_nlliil_dataout}),
	.o(wire_nll10i_o),
	.sel({((nliOOl | nliOOi) | nliOlO), nliOll, nliOli}));
	defparam
		nll10i.width_data = 3,
		nll10i.width_sel = 3;
	oper_selector   nll1ii
	( 
	.data({n1i1l, wire_nlOi0O_dataout, wire_nlli1i_dataout}),
	.o(wire_nll1ii_o),
	.sel({((nliOOl | nliOOi) | nliOll), nliOlO, nliOli}));
	defparam
		nll1ii.width_data = 3,
		nll1ii.width_sel = 3;
	oper_selector   nll1iO
	( 
	.data({nlil0i, wire_nlOlil_dataout, 1'b0, wire_nll0OO_dataout}),
	.o(wire_nll1iO_o),
	.sel({(nliOOl | nliOOi), nliOlO, nliOll, nliOli}));
	defparam
		nll1iO.width_data = 4,
		nll1iO.width_sel = 4;
	oper_selector   nll1ll
	( 
	.data({nlil1O, wire_nlOlll_dataout, wire_nlll0i_dataout}),
	.o(wire_nll1ll_o),
	.sel({((nliOOl | nliOOi) | nliOli), nliOlO, nliOll}));
	defparam
		nll1ll.width_data = 3,
		nll1ll.width_sel = 3;
	oper_selector   nll1Oi
	( 
	.data({wire_n11ii_dataout, wire_nlOO1O_dataout, wire_nlllli_dataout}),
	.o(wire_nll1Oi_o),
	.sel({niO1ii, nliOOi, nliOlO}));
	defparam
		nll1Oi.width_data = 3,
		nll1Oi.width_sel = 3;
	oper_selector   nll1Ol
	( 
	.data({nliOil, wire_nlOO0i_dataout, wire_nlllll_dataout}),
	.o(wire_nll1Ol_o),
	.sel({niO1ii, nliOOi, nliOlO}));
	defparam
		nll1Ol.width_data = 3,
		nll1Ol.width_sel = 3;
	assign
		atm_tx_enb = (~ nli01O),
		atm_tx_port_stat = {wire_n1Oli_q[0], wire_n1OiO_q[0], wire_n1Oil_q[0], wire_n1Oii_q[0], wire_n1O0O_q[0], wire_n1O0l_q[0], wire_n1O0i_q[0], wire_n1O1O_q[0], wire_n1O1l_q[0], wire_n1O1i_q[0], wire_n1lOO_q[0], wire_n1lOl_q[0], wire_n1lOi_q[0], wire_n1llO_q[0], wire_n1lll_q[0], wire_n1lli_q[0], wire_n1liO_q[0], wire_n1lil_q[0], wire_n1lii_q[0], wire_n1l0O_q[0], wire_n1l0l_q[0], wire_n1l0i_q[0], wire_n1l1O_q[0], wire_n1l1l_q[0], wire_n1l1i_q[0], wire_n1iOO_q[0], wire_n1iOl_q[0], wire_n1iOi_q[0], wire_n1ilO_q[0], wire_n1ill_q[0], wire_n1ili_q[0]},
		atm_tx_port_wait = n11il,
		nilOll = ((((((~ nl1O1i) & (~ (nl1i1O ^ wire_nl01lO_o[0]))) & (~ (nl1i0i ^ wire_nl01lO_o[1]))) & (~ (nl1i0l ^ (~ wire_nl01lO_o[2])))) & (~ (nl1i0O ^ (~ wire_nl01lO_o[2])))) & (~ (nl1iii ^ wire_nl01lO_o[2]))),
		nilOlO = ((~ nl1Oli) & nilOOi),
		nilOOi = ((((((~ nl1O1i) & (~ nl1iii)) & (~ nl1i0O)) & (~ nl1i0l)) & (~ nl1i0i)) & (~ nl1i1O)),
		nilOOl = (nilOOO & nl1Oli),
		nilOOO = (nl1OiO & nl1Oil),
		niO01i = (n11il & (~ nl0Oll)),
		niO01l = (((((~ (nliliO ^ n11iO)) & (~ (nlilli ^ n11li))) & (~ (nlilll ^ n11ll))) & (~ (nlillO ^ n11lO))) & (~ (nlilOi ^ n11Ol))),
		niO01O = (((((((((((((((wire_nl00li_dataout ^ wire_nl00ll_dataout) ^ wire_nl00lO_dataout) ^ wire_nl00Oi_dataout) ^ wire_nl00Ol_dataout) ^ wire_nl00OO_dataout) ^ wire_nl0i1i_dataout) ^ wire_nl0i1l_dataout) ^ wire_nl0i1O_dataout) ^ wire_nl0i0i_dataout) ^ wire_nl0i0l_dataout) ^ wire_nl0i0O_dataout) ^ wire_nl0iii_dataout) ^ wire_nl0iil_dataout) ^ wire_nl0iiO_dataout) ^ wire_nl0ili_dataout),
		niO10i = ((~ nl0Oll) & wire_nll11l_dataout),
		niO11O = ((((~ (nl0Oii ^ wire_nli10O_o[0])) & (~ (nl0Oil ^ wire_nli10O_o[1]))) & (~ (nl0Oli ^ wire_nli10O_o[2]))) & (~ wire_nli10O_o[3])),
		niO1ii = ((nliOOl | nliOll) | nliOli),
		niO1il = (nliOll | nliOli),
		niO1iO = (nli0i & nll11i),
		niO1li = ((~ nlilOO) & nll11i),
		niO1ll = ((((((~ nliO1i) & (~ (nliO1l ^ wire_n1iil_o[0]))) & (~ (nliO1O ^ wire_n1iil_o[1]))) & (~ (nliO0i ^ (~ wire_n1iil_o[2])))) & (~ ((~ wire_n1iil_o[2]) ^ nliO0l))) & (~ (wire_n1iil_o[2] ^ nliOii))),
		niO1lO = ((((((~ (nliO1i ^ wire_n1iii_o[1])) & (~ (nliO1l ^ wire_n1iii_o[2]))) & (~ (nliO1O ^ wire_n1iii_o[3]))) & (~ (nliO0i ^ wire_n1iii_o[4]))) & (~ (nliO0l ^ wire_n1iii_o[5]))) & (~ (nliOii ^ wire_n1iii_o[6]))),
		niO1Oi = (nliOiO & (~ (niili & nll11i))),
		niO1Ol = ((((((~ nliO1i) & nliO0l) & (~ nliOii)) & (~ (nliO1l ^ wire_n1iil_o[0]))) & (~ (nliO1O ^ wire_n1iil_o[1]))) & (~ (nliO0i ^ wire_n1iil_o[2]))),
		niO1OO = (nli0i & nll11i),
		niOi1O = ((~ nl0Oi) & (~ (((~ nlilOO) & (~ nlilii)) & (niOi0i36 ^ niOi0i35)))),
		niOilO = (((((~ n11iO) & n11li) & n11ll) & n11lO) & n11Ol),
		niOiOi = ((((n11iO & (~ n11li)) & n11ll) & n11lO) & n11Ol),
		niOiOl = (((((~ n11iO) & (~ n11li)) & n11ll) & n11lO) & n11Ol),
		niOiOO = ((((n11iO & n11li) & (~ n11ll)) & n11lO) & n11Ol),
		niOl0i = ((((n11iO & n11li) & n11ll) & (~ n11lO)) & n11Ol),
		niOl0l = (((((~ n11iO) & n11li) & n11ll) & (~ n11lO)) & n11Ol),
		niOl0O = ((((n11iO & (~ n11li)) & n11ll) & (~ n11lO)) & n11Ol),
		niOl1i = (((((~ n11iO) & n11li) & (~ n11ll)) & n11lO) & n11Ol),
		niOl1l = ((((n11iO & (~ n11li)) & (~ n11ll)) & n11lO) & n11Ol),
		niOl1O = (((((~ n11iO) & (~ n11li)) & (~ n11ll)) & n11lO) & n11Ol),
		niOlii = (((((~ n11iO) & (~ n11li)) & n11ll) & (~ n11lO)) & n11Ol),
		niOlil = ((((n11iO & n11li) & (~ n11ll)) & (~ n11lO)) & n11Ol),
		niOliO = (((((~ n11iO) & n11li) & (~ n11ll)) & (~ n11lO)) & n11Ol),
		niOlli = ((((n11iO & (~ n11li)) & (~ n11ll)) & (~ n11lO)) & n11Ol),
		niOlll = (((((~ n11iO) & (~ n11li)) & (~ n11ll)) & (~ n11lO)) & n11Ol),
		niOllO = ((((n11iO & n11li) & n11ll) & n11lO) & (~ n11Ol)),
		niOlOi = (((((~ n11iO) & n11li) & n11ll) & n11lO) & (~ n11Ol)),
		niOlOl = ((((n11iO & (~ n11li)) & n11ll) & n11lO) & (~ n11Ol)),
		niOlOO = (((((~ n11iO) & (~ n11li)) & n11ll) & n11lO) & (~ n11Ol)),
		niOO0i = (((((~ n11iO) & (~ n11li)) & (~ n11ll)) & n11lO) & (~ n11Ol)),
		niOO0l = ((((n11iO & n11li) & n11ll) & (~ n11lO)) & (~ n11Ol)),
		niOO0O = (((((~ n11iO) & n11li) & n11ll) & (~ n11lO)) & (~ n11Ol)),
		niOO1i = ((((n11iO & n11li) & (~ n11ll)) & n11lO) & (~ n11Ol)),
		niOO1l = (((((~ n11iO) & n11li) & (~ n11ll)) & n11lO) & (~ n11Ol)),
		niOO1O = ((((n11iO & (~ n11li)) & (~ n11ll)) & n11lO) & (~ n11Ol)),
		niOOii = ((((n11iO & (~ n11li)) & n11ll) & (~ n11lO)) & (~ n11Ol)),
		niOOil = (((((~ n11iO) & (~ n11li)) & n11ll) & (~ n11lO)) & (~ n11Ol)),
		niOOiO = ((((n11iO & n11li) & (~ n11ll)) & (~ n11lO)) & (~ n11Ol)),
		niOOli = (((((~ n11iO) & n11li) & (~ n11ll)) & (~ n11lO)) & (~ n11Ol)),
		niOOll = (((((n11iO & (~ n11li)) & (~ n11ll)) & (~ n11lO)) & (~ n11Ol)) & (niO00i50 ^ niO00i49)),
		niOOlO = (((((~ n11iO) & (~ n11li)) & (~ n11ll)) & (~ n11lO)) & (~ n11Ol)),
		niOOOi = ((((wire_nl1Oi_dataout & (~ wire_nl01l_dataout)) & (~ wire_nl01i_dataout)) & (~ wire_nl1OO_dataout)) & (~ wire_nl1Ol_dataout)),
		nl100i = 1'b1,
		nl100O = ((nlilil | nlil0i) | (~ (nl10ii2 ^ nl10ii1))),
		nl111i = ((~ nl100O) & nl111l),
		nl111l = ((((((~ (nliliO ^ wire_nl1Oi_dataout)) & (~ (nlilli ^ wire_nl1Ol_dataout))) & (~ ((nlilll ^ wire_nl1OO_dataout) ^ (~ (niO0lO42 ^ niO0lO41))))) & (~ ((nlillO ^ wire_nl01i_dataout) ^ (~ (niO0li44 ^ niO0li43))))) & (~ ((nlilOi ^ wire_nl01l_dataout) ^ (~ (niO0il46 ^ niO0il45))))) & (niO00O48 ^ niO00O47)),
		nl111O = (((((nl0ii & (~ nl0il)) & (~ nl0iO)) & (~ nl0li)) & (~ nl0lO)) & (niO0Ol40 ^ niO0Ol39)),
		nl11ii = ((~ ((nl100O | nlilOO) | (~ (nl11iO18 ^ nl11iO17)))) | (nlilOO & nl11il)),
		nl11il = (((((~ (nl0ii ^ n11iO)) & (~ (nl0il ^ n11li))) & (~ (nl0iO ^ n11ll))) & (~ ((nl0li ^ n11lO) ^ (~ (niOi1i38 ^ niOi1i37))))) & (~ (nl0lO ^ n11Ol))),
		tx_addr = {nliOO, nliOi, nlilO, nlill, nlili},
		tx_data = {n1i1i, n10OO, n10Ol, n10Oi, n10lO, n10ll, n10li, n10iO, n10il, n10ii, n100O, n100l, n100i, n101O, n101l, n101i},
		tx_enb = nliOiO,
		tx_prty = n11OO,
		tx_soc = nliOil;
endmodule //mastertx_example
//synopsys translate_on
//VALID FILE
