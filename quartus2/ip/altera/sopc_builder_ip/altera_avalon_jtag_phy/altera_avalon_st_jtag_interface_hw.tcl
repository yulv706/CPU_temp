# TCL File Generated by Component Editor 8.1
# Thu Aug 07 22:29:12 PDT 2008
# DO NOT MODIFY


# +-----------------------------------
# | 
# | altera_avalon_st_jtag_interface "Avalon-ST JTAG Interface" 
# | Altera Corporation 2008.08.07.22:29:12
# | 
# | 
# | ./altera_avalon_st_jtag_interface.v
# | 
# |    ./altera_avalon_st_jtag_interface.v syn, sim
# |    ./altera_jtag_dc_streaming.v syn, sim
# |    ./altera_jtag_phy.v syn, sim
# |    ./altera_jtag_streaming.v syn, sim
# |    ../altera_avalon_st_idle_remover/altera_avalon_st_idle_remover.v syn, sim
# |    ../altera_avalon_st_idle_inserter/altera_avalon_st_idle_inserter.v syn, sim
# |    ./altera_pli_streaming.v v 
# | 
# +-----------------------------------


# +-----------------------------------
# | module altera_avalon_st_jtag_interface
# | 
set_module_property DESCRIPTION ""
set_module_property NAME altera_jtag_dc_streaming
set_module_property VERSION 9.0
set_module_property GROUP "Interface Protocols/Serial"
set_module_property AUTHOR "Altera Corporation"
set_module_property DISPLAY_NAME "Avalon-ST JTAG Interface"
set_module_property DATASHEET_URL http://www.altera.com/literature/hb/nios2/qts_qii55008.pdf
set_module_property TOP_LEVEL_HDL_FILE altera_avalon_st_jtag_interface.v
set_module_property TOP_LEVEL_HDL_MODULE altera_avalon_st_jtag_interface
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ELABORATION_CALLBACK elaborate
set_module_property VALIDATION_CALLBACK validate 
# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
add_file altera_avalon_st_jtag_interface.v {SYNTHESIS SIMULATION}
add_file altera_jtag_dc_streaming.v {SYNTHESIS SIMULATION}
add_file altera_jtag_phy.v {SYNTHESIS SIMULATION}
add_file altera_jtag_streaming.v {SYNTHESIS SIMULATION}
add_file altera_pli_streaming.v {SYNTHESIS SIMULATION}
add_file ../../primitives/altera_avalon_st_clock_crosser/altera_avalon_st_clock_crosser.v {SYNTHESIS SIMULATION}
add_file ../../primitives/altera_avalon_st_pipeline_stage/altera_avalon_st_pipeline_stage.v {SYNTHESIS SIMULATION}
add_file ../altera_avalon_st_idle_remover/altera_avalon_st_idle_remover.v {SYNTHESIS SIMULATION}
add_file ../altera_avalon_st_idle_inserter/altera_avalon_st_idle_inserter.v {SYNTHESIS SIMULATION}
# | 
# +-----------------------------------

# +-----------------------------------
# | simulation libraries 
# | 
add_file bytestream_pli.dll SIMULATION
set_file_property bytestream_pli.dll PLUGIN_API "win32 pli"
add_file libbytestream_pli.so SIMULATION
set_file_property libbytestream_pli.so PLUGIN_API "linux pli"
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
add_parameter PURPOSE INTEGER 0
set_parameter_property PURPOSE DISPLAY_NAME PURPOSE
set_parameter_property PURPOSE UNITS None
set_parameter_property PURPOSE AFFECTS_PORT_WIDTHS true
set_parameter_property PURPOSE VISIBLE false

add_parameter USE_PLI INTEGER 0
set_parameter_property USE_PLI DISPLAY_NAME "Use PLI Simulation Mode" 
set_parameter_property USE_PLI UNITS None
set_parameter_property USE_PLI AFFECTS_PORT_WIDTHS false
set_parameter_property USE_PLI AFFECTS_ELABORATION true
set_parameter_property USE_PLI VISIBLE true
set_parameter_property USE_PLI STATUS experimental

add_parameter PLI_PORT INTEGER 50000
set_parameter_property PLI_PORT DISPLAY_NAME "PLI Simulation Port" 
set_parameter_property PLI_PORT UNITS None
set_parameter_property PLI_PORT AFFECTS_PORT_WIDTHS false
set_parameter_property PLI_PORT VISIBLE true
set_parameter_property PLI_PORT AFFECTS_ELABORATION true
set_parameter_property PLI_PORT STATUS experimental

add_parameter COMPONENT_CLOCK INTEGER 0
set_parameter_property COMPONENT_CLOCK system_info { CLOCK_RATE clock }
set_parameter_property COMPONENT_CLOCK VISIBLE false
# | 
# +-----------------------------------

# +-----------------------------------
# | Elaborate
# | 

proc elaborate {} {
    set use_pli [ get_parameter_value USE_PLI ]

    # +-----------------------------------
    # | connection point clock
    # | 
    add_interface clock clock end
    set_interface_property clock ptfSchematicName ""
    
    add_interface_port clock clk clk Input 1
    add_interface_port clock reset_n reset_n Input 1
    # | 
    # +-----------------------------------

    # +-----------------------------------
    # | connection point src
    # | 
    add_interface src avalon_streaming start
    set_interface_property src dataBitsPerSymbol 8
    set_interface_property src errorDescriptor ""
    set_interface_property src maxChannel 0
    set_interface_property src readyLatency 0
    set_interface_property src symbolsPerBeat 1
    
    set_interface_property src ASSOCIATED_CLOCK clock
    
    add_interface_port src source_data data Output 8
    add_interface_port src source_valid valid Output 1
    if {$use_pli == "1"} {
      add_interface_port src source_ready ready Input 1
    } 
    # | 
    # +-----------------------------------
    
    # +-----------------------------------
    # | connection point sink
    # | 
    add_interface sink avalon_streaming end
    set_interface_property sink dataBitsPerSymbol 8
    set_interface_property sink errorDescriptor ""
    set_interface_property sink maxChannel 0
    set_interface_property sink readyLatency 0
    set_interface_property sink symbolsPerBeat 1
    
    set_interface_property sink ASSOCIATED_CLOCK clock
    
    add_interface_port sink sink_data data Input 8
    add_interface_port sink sink_valid valid Input 1
    add_interface_port sink sink_ready ready Output 1
    # | 
    # +-----------------------------------
    
    # +-----------------------------------
    # | connection point resetrequest
    # | 
    add_interface resetrequest conduit start
    add_interface_port resetrequest resetrequest export Output 1
    # | 
    # +-----------------------------------
}
# | 
# +-----------------------------------


# +-----------------------------------
# | Validate 
# | 
proc validate {} {
   set my_clock_rate [ get_parameter_value COMPONENT_CLOCK ]
   # Check that the clock is connected before checking for the warning condition.
   if { $my_clock_rate != 0 } {
      if { $my_clock_rate < 20000000 } {
          send_message Warning "Clock rate is less than 20MHz.  This component may not function properly due to clock crossing constraints."
      }
   }
}
# | 
# +-----------------------------------
