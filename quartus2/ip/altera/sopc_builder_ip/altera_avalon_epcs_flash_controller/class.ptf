#
#
# +-------------------------------------------------
# | WARNING
# |
# | Do not modify this file
# | This file was created by em_epcs.pm
# | If you need to make changes, make them there.
# +-------------------------------------------------
#
#


CLASS altera_avalon_epcs_flash_controller
{
  SDK_GENERATION
  {
    SDK_FILES 0
    {
      cpu_architecture = "always";
      short_type = "epcs";
      c_structure_type = "np_epcs *";
      c_header_file = "sdk/epcs_struct.h";
      sdk_files_dir = "sdk";
    }
    SDK_FILES 1
    {
      cpu_architecture = "always";
      toolchain = "gnu";
      asm_header_file = "sdk/epcs_struct.s";
    }
  }
  ASSOCIATED_FILES
  {
    Add_Program  = "default";
    Edit_Program = "default";
    Generator_Program = "em_epcs.pl";
    Bind_Program = "bind";
  }
  MODULE_DEFAULTS
  {
    class      = "altera_avalon_epcs_flash_controller";
    class_version = "7.080901";
    SLAVE epcs_control_port
    {
      SYSTEM_BUILDER_INFO
      {
        Bus_Type                     = "avalon";
        Is_Nonvolatile_Storage       = "1";
        Is_Printable_Device          = "0";
        Address_Alignment            = "dynamic";
        Is_Memory_Device             = "1";
        Address_Width                = "9";
        Data_Width                   = "32";
        Has_IRQ                      = "1";
        Read_Wait_States             = "1";
        Write_Wait_States            = "1";
      }
      WIZARD_SCRIPT_ARGUMENTS
      {
        class = "altera_avalon_epcs_flash_controller";
      }
    }
    SYSTEM_BUILDER_INFO
    {
      Is_Enabled= "1";
      Instantiate_In_System_Module = "1";
      # SPR 238875 add hardcopy and hardcopyII support, as for hardcopy is set the device family as STRATIX
      Required_Device_Family = "STRATIX,CYCLONE,CYCLONEII,CYCLONEIII,STRATIXIII,STRATIXII,STRATIXIIGX,ARRIAGX,STRATIXIIGXLITE,STRATIXIV,ARRIAII,TARPON";
      Fixed_Module_Name = "epcs_controller";
      Top_Level_Ports_Are_Enumerated = "1";
    }
    WIZARD_SCRIPT_ARGUMENTS
    {
      databits      = "8";
      targetclock   = "20";
      clockunits    = "MHz";
      clockmult     = "1000000";
      numslaves     = "1";
      ismaster      = "1";
      clockpolarity = "0";
      clockphase    = "0";
      lsbfirst      = "0";
      extradelay    = "0";
      targetssdelay = "100";
      delayunits    = "us";
      delaymult     = "1.e-06";
      prefix        = "epcs_";
      # register_offset filled in during generation time
      # (since it varies with chosen device family)
      # Warning: HAL code depends correct assignment
      register_offset = "";
    }
  }
  USER_INTERFACE
  {
        USER_LABELS
        {
            name="EPCS Serial Flash Controller";
            technology="Memory,EP1C20 Nios Development Board Cyclone Edition";
            alias="epcs";
        }
        WIZARD_UI default
        {
          title = "EPCS Serial Flash Controller - {{ $MOD }}";
          CONTEXT 
          {
            SWSA = "SLAVE epcs_control_port/WIZARD_SCRIPT_ARGUMENTS";
            WSA = "WIZARD_SCRIPT_ARGUMENTS";
            SBI = "SLAVE epcs_control_port/SYSTEM_BUILDER_INFO";
            MODULE_SBI = "SYSTEM_BUILDER_INFO";
            SPWA = "SLAVE epcs_control_port/PORT_WIRING/PORT address";
            SPWD = "SLAVE epcs_control_port/PORT_WIRING/PORT data";
          }	  
	  error = "{{ if (device_info('has_EPCS') == 0) {'EPCS-capable device required'}; }}";
	  
	  # SPR 238875 add hardcopy and hardcopyII support
	  # SPR:270439 asmi setting become optional to supported device
	  $$non_asmi_support="{{(($SYS/device_family_id == 'CYCLONEIII') || ($SYS/hardcopy_compatible == '1'))}}";
	  $$no_legacy_validation="{{$WSA/ignore_legacy_check}}";
	  
	  $$sopc_asmi_setting="{{$WSA/use_asmi_atom}}";	  
	  $$legacy_asmi_setting = "{{
            if ($$non_asmi_support)
              '0';
            else
              '1';
          }}";
	  
          $WSA/use_asmi_atom = "{{
            if ($$no_legacy_validation)
              $$sopc_asmi_setting;
            else
              $$legacy_asmi_setting;
          }}";

          $$epcs_new_refdes = "{{ if ($SWSA/flash_reference_designator == '') '--none--'; else $SWSA/flash_reference_designator; }}";
          $$add_code = "{{ if ($$add) 1; else 0; }}";
          $$edit_code = "{{ if ($$edit) 1; else 0; }}";

          $$cfi_utilcomponentclass = "altera_avalon_cfi_flash";

          $$no_board_is_selected = 0;
          $$epcs_instances = "{{ sopc_slave_list('WIZARD_SCRIPT_ARGUMENTS/class=altera_avalon_epcs_flash_controller'); }}";
          $$cfi_component_dir = "{{ sopc_get_component_dir($$cfi_utilcomponentclass); }}";

          code = "{{
            $$board_info = exec_and_wait(
              $$cfi_component_dir+'/cfi_flash.pl',
              'get_board_info',
              $$system_directory+'/'+$SYSTEM+'.ptf',              
              $$/target_module_name,
              $$epcs_instances,
              'epcs_control_port',
              $$epcs_new_refdes,
              $$add_code,
              $$edit_code,
              $SYSTEM/WIZARD_SCRIPT_ARGUMENTS/board_class,
              $BUS/BOARD_INFO/altera_avalon_epcs_flash_controller/reference_designators
            );

            $$extra_info = exec_and_wait(
              $$cfi_component_dir+'/cfi_flash.pl',
              'get_extra_info',
              $$system_directory+'/'+$SYSTEM+'.ptf',              
              $$/target_module_name,
              $$epcs_instances,
              'epcs_control_port',
              $$epcs_new_refdes,
              $$add_code,
              $$edit_code,
              $SYSTEM/WIZARD_SCRIPT_ARGUMENTS/board_class,
              $BUS/BOARD_INFO/altera_avalon_epcs_flash_controller/reference_designators
            );

            if ($$board_info == 'no_board')
            {
              $$no_board_is_selected = 1;
              $$error_message = '';
              $$message_message = 'No Matching Ref Des in System Board Target';
              $$warning_message = '';
              $$enabled_combo = 1;
              $$editable_combo = 1;
            }
            if ($$board_info == 'error')
            {
              $$error_message = $$extra_info;
              $$warning_message = '';
              $$message_message = '';
              $$enabled_combo = 1;
              $$editable_combo = 1;
            }
            if ($$board_info == 'warning')
            {
              $$warning_message = $$extra_info;
              $$error_message = '';
              $$message_message = '';
              $$enabled_combo = 1;
              $$editable_combo = 1;
            }
            if ($$board_info == '1_ref_des')
            {
              $$message_message = '';
              $$error_message = '';
              $$warning_message = '';
              $$enabled_combo = 0;
              $$editable_combo = 0;
            }
            if ($$board_info == 'some_ref_des')
            {
              $$error_message = '';
              $$warning_message = '';
              $$message_message = '';
              $$enabled_combo = 1;
              $$editable_combo = 0;
            }

          }}";

          ACTION initialize
          {
            code = "{{
              if ($$add)
              {
                if ($$board_info == 'some_ref_des')
                {
                  $SWSA/flash_reference_designator = $$extra_info;
                  $$epcs_new_refdes = $$extra_info;
                }
                if ($$board_info == '1_ref_des')
                {
                  $SWSA/flash_reference_designator = $$extra_info;
                  $$epcs_new_refdes = $$extra_info;
                }
              }
            }}";
          }

          PAGES main
          {
            PAGE 1
            {
              title = "Attributes";
              GROUP
              {
                title = "Board Info";
                COMBO refdes
                {
                  title = "Reference Designator (chip label): ";
                  key = "R";

                  values = "{{ $BUS/BOARD_INFO/altera_avalon_epcs_flash_controller/reference_designators }}";

                  editable = "0";
                  enable = "{{ $$enabled_combo; }}";
                  message = "{{ $$message_message; }}";
                  DATA
                  {
                    $SWSA/flash_reference_designator = "$";
                    $$epcs_new_refdes = "$";
                  }
                }
              }
            }
          }
        }

        WIZARD_UI bind
        {
          visible = "0";
          CONTEXT
          {
            WSA = "WIZARD_SCRIPT_ARGUMENTS";
          }
	  
	  # SPR 238875 add hardcopy and hardcopyII support
	  # SPR:270439 asmi setting become optional to supported device
	  $$non_asmi_support="{{(($SYS/device_family_id == 'CYCLONEIII') || ($SYS/hardcopy_compatible == '1'))}}";
	  $$no_legacy_validation="{{$WSA/ignore_legacy_check}}";
	  
	  $$sopc_asmi_setting="{{$WSA/use_asmi_atom}}";	  
	  $$legacy_asmi_setting = "{{
            if ($$non_asmi_support)
              '0';
            else
              '1';
          }}";
	  
          $WSA/use_asmi_atom = "{{
            if ($$no_legacy_validation)
              $$sopc_asmi_setting;
            else
              $$legacy_asmi_setting;
          }}";
		}

        LINKS
        {
            LINK help
            {
               title="Data Sheet";
               url="http://www.altera.com/literature/hb/nios2/n2cpu_nii51012.pdf";
            }
            LINK Cyclone_Data_Sheet
            {
               title="Manual for Nios 1c20 Cyclone Board";
               url="http://www.altera.com/literature/manual/mnl_nios2_board_cyclone_1c20.pdf";
            }
            LINK Cyclone_Schematics
            {
               title="Schematics for Nios 1c20 Cyclone Board";
               url="nios_cyclone_1c20/nios_1c20_board_schematic.pdf";
            }
        }
  }
}
